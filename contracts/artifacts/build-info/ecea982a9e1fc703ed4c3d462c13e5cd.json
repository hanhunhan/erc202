{
	"id": "ecea982a9e1fc703ed4c3d462c13e5cd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DividendPayingERC20Token.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2024-06-15\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n \r\n    function transfer(address recipient, uint256 amount) external payable  returns (bool);\r\n   \r\n \r\n}\r\n\r\n \r\n\r\ncontract DividendPayingERC20Token {\r\n     \r\n    mapping(address => uint256) private _balances;\r\n    uint256 private _totalSupply;\r\n   \r\n \r\n\r\n    uint256 public progressRewardBlock;\r\n    uint256 public progressRewardBlockAdd;\r\n \r\n    uint256 public holderRewardCondition; \r\n    uint256 public dividendGas;\r\n    uint256 public lpBonus;\r\n    uint256 public lpBonusEd;\r\n \r\n\r\n    uint256 totalLpSupply;\r\n    mapping(address  => uint256) private _LpBalances;\r\n    mapping(address  => uint256) private _lastLpTime;\r\n    mapping(address  => uint256) private _lastEth;\r\n  \r\n\r\n    address[] public lpHolders;\r\n    mapping(address => uint256) public lpHolderIndex;\r\n    uint256 public currentLpIndex;\r\n    \r\n    \r\n    address private  deadAddress;\r\n    address public op;\r\n    address public owner;\r\n    modifier onlyOp() {\r\n        require(op == msg.sender, \"Ownable: caller is not the op\");\r\n        _;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n     \r\n  \r\n        //_maxWallet = 1 ether;\r\n        owner = msg.sender;\r\n        \r\n        //maxItemido = 1 ether;\r\n        totalLpSupply = 0;\r\n        progressRewardBlockAdd = 200;\r\n        holderRewardCondition = 1 * 10 ** 16; \r\n       \r\n        dividendGas = 500000; \r\n    \r\n        deadAddress = address(0x000000000000000000000000000000000000dEaD);\r\n        \r\n        \r\n        _balances[deadAddress] = 0 ether;\r\n        lpBonusEd = 0;\r\n        lpBonus = 0;\r\n \r\n    \r\n    \r\n    \r\n  }\r\n  \r\n    function processReward(uint256 tfmount,address user)    external onlyOp returns (uint256) {\r\n        \r\n        ariver(tfmount,user);\r\n        lpBonus += tfmount;\r\n        \r\n        if (progressRewardBlock + progressRewardBlockAdd > block.number) {\r\n            return 0;\r\n        }\r\n\r\n        //if (totalLpSupply == 0 || totalLpSupply <= _LpBalances[deadAddress]){\r\n         // return 0;\r\n        //}\r\n\r\n        if (lpBonusEd >= lpBonus){\r\n          return 0;\r\n        }\r\n        uint256 balance = lpBonus - lpBonusEd;\r\n        if (balance < holderRewardCondition || address(this).balance < holderRewardCondition) {\r\n            return 0;\r\n        }\r\n\r\n        \r\n\r\n        address lpHolder;\r\n        uint256 lpBalance;\r\n        uint256 amount;\r\n\r\n        uint256 lpHolderCount = lpHolders.length;\r\n\r\n        uint256 gasUsed = 0;\r\n        uint256 iterations = 0;\r\n        uint256 gasLeft = gasleft();\r\n\r\n    \r\n\r\n        while (gasUsed < dividendGas && iterations < lpHolderCount) {\r\n            if (currentLpIndex >= lpHolderCount) {\r\n                currentLpIndex = 0;\r\n            }\r\n            \r\n            lpHolder = lpHolders[currentLpIndex];\r\n            lpBalance = _LpBalances[lpHolder];\r\n            \r\n            if(lpBalance >0 && lpHolder != deadAddress){\r\n              amount = (balance * lpBalance) / (totalLpSupply-_LpBalances[deadAddress]);\r\n                if (amount > 0) {\r\n                    //(bool success,) = lpHolder.call{value: amount}(\"\"); \r\n                    IERC20(msg.sender).transfer(lpHolder,amount); \r\n                    //if (success) {\r\n                        lpBonusEd += amount;\r\n                    //}\r\n                    \r\n                }\r\n            }\r\n                \r\n            \r\n\r\n            gasUsed = gasUsed + (gasLeft - gasleft());\r\n            gasLeft = gasleft();\r\n            currentLpIndex++;\r\n            iterations++;\r\n        }\r\n\r\n        progressRewardBlock = block.number;\r\n        return amount;\r\n    }\r\n\r\n    function ariver(uint256 amount,address sender)internal virtual   {\r\n      \r\n      \r\n       \r\n      \r\n      totalLpSupply += amount;\r\n      _LpBalances[sender] += amount;\r\n      _lastLpTime[sender] = block.timestamp;\r\n       _lastEth[sender] += msg.value;\r\n       \r\n        if (0 == lpHolderIndex[deadAddress]) {\r\n          lpHolderIndex[deadAddress] = lpHolders.length;\r\n          lpHolders.push(deadAddress);\r\n        }\r\n      \r\n      if (0 == lpHolderIndex[sender]) {\r\n          lpHolderIndex[sender] = lpHolders.length;\r\n          lpHolders.push(sender);\r\n        }\r\n       \r\n       \r\n    }\r\n \r\n \r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function setOp(address d) external onlyOwner {\r\n        op = d;\r\n    }\r\n\r\n    \r\n    function setHolderRewardCondition(uint256 amount) external onlyOwner {\r\n        holderRewardCondition = amount;\r\n    }\r\n\r\n    \r\n    \r\n\r\n     function setDividendGas(uint256 vgas) external  onlyOwner{\r\n        \r\n        dividendGas = vgas;\r\n    }\r\n\r\n    function setRewardBlockAdd(uint256 num) external  onlyOwner{\r\n        progressRewardBlockAdd = num;\r\n    }\r\n\r\n   \r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/DividendPayingERC20Token.sol": {
				"DividendPayingERC20Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentLpIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dividendGas",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holderRewardCondition",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpBonus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpBonusEd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lpHolderIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "lpHolders",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "op",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tfmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "processReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "progressRewardBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "progressRewardBlockAdd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "vgas",
									"type": "uint256"
								}
							],
							"name": "setDividendGas",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setHolderRewardCondition",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "d",
									"type": "address"
								}
							],
							"name": "setOp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"name": "setRewardBlockAdd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DividendPayingERC20Token.sol\":263:4969  contract DividendPayingERC20Token {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DividendPayingERC20Token.sol\":1293:1797  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/DividendPayingERC20Token.sol\":1362:1367  owner */\n  0x11\n    /* \"contracts/DividendPayingERC20Token.sol\":1362:1380  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"contracts/DividendPayingERC20Token.sol\":1370:1380  msg.sender */\n  caller\n    /* \"contracts/DividendPayingERC20Token.sol\":1362:1380  owner = msg.sender */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":1362:1367  owner */\n  0x00\n    /* \"contracts/DividendPayingERC20Token.sol\":1434:1447  totalLpSupply */\n  0x08\n    /* \"contracts/DividendPayingERC20Token.sol\":1434:1451  totalLpSupply = 0 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":1487:1490  200 */\n  0xc8\n    /* \"contracts/DividendPayingERC20Token.sol\":1462:1484  progressRewardBlockAdd */\n  0x03\n    /* \"contracts/DividendPayingERC20Token.sol\":1462:1490  progressRewardBlockAdd = 200 */\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":1525:1537  1 * 10 ** 16 */\n  0x2386f26fc10000\n    /* \"contracts/DividendPayingERC20Token.sol\":1501:1522  holderRewardCondition */\n  0x04\n    /* \"contracts/DividendPayingERC20Token.sol\":1501:1537  holderRewardCondition = 1 * 10 ** 16 */\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":1572:1578  500000 */\n  0x07a120\n  0x05\n    /* \"contracts/DividendPayingERC20Token.sol\":1558:1578  dividendGas = 500000 */\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":1596:1607  deadAddress */\n  0x0f\n    /* \"contracts/DividendPayingERC20Token.sol\":1596:1661  deadAddress = address(0x000000000000000000000000000000000000dEaD) */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n    /* \"contracts/DividendPayingERC20Token.sol\":1618:1660  0x000000000000000000000000000000000000dEaD */\n  0xdead\n    /* \"contracts/DividendPayingERC20Token.sol\":1596:1661  deadAddress = address(0x000000000000000000000000000000000000dEaD) */\n  swap1\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":1692:1714  _balances[deadAddress] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf83\n    /* \"contracts/DividendPayingERC20Token.sol\":1692:1724  _balances[deadAddress] = 0 ether */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":1735:1744  lpBonusEd */\n  0x07\n    /* \"contracts/DividendPayingERC20Token.sol\":1735:1748  lpBonusEd = 0 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":1759:1766  lpBonus */\n  0x06\n    /* \"contracts/DividendPayingERC20Token.sol\":1759:1770  lpBonus = 0 */\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":263:4969  contract DividendPayingERC20Token {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DividendPayingERC20Token.sol\":263:4969  contract DividendPayingERC20Token {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0affb402\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1210c434\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2a595512\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x621f9c0a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6689567e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9f0d7eb8\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa36a7526\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xadd0a6c6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb367bf83\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbd876702\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc213d62d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc7003ed0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd2cad60\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xeb10b741\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xec1f1f69\n      eq\n      tag_19\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DividendPayingERC20Token.sol\":867:915  mapping(address => uint256) public lpHolderIndex */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/DividendPayingERC20Token.sol\":867:915  mapping(address => uint256) public lpHolderIndex */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DividendPayingERC20Token.sol\":922:951  uint256 public currentLpIndex */\n    tag_4:\n      tag_20\n      sload(0x0e)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":408:442  uint256 public progressRewardBlock */\n    tag_5:\n      tag_20\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":573:595  uint256 public lpBonus */\n    tag_6:\n      tag_20\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":4737:4841  function setDividendGas(uint256 vgas) external  onlyOwner{... */\n    tag_7:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/DividendPayingERC20Token.sol\":4394:4504  function balanceOf(address account) public view returns (uint256) {... */\n    tag_8:\n      tag_20\n      tag_40\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":4478:4496  _balances[account] */\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":4451:4458  uint256 */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":4478:4496  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":4394:4504  function balanceOf(address account) public view returns (uint256) {... */\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":1029:1049  address public owner */\n    tag_9:\n      sload(0x11)\n      tag_43\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_43:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":914:946   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":896:947   */\n      dup2\n      mstore\n        /* \"#utility.yul\":884:886   */\n      0x20\n        /* \"#utility.yul\":869:887   */\n      add\n        /* \"contracts/DividendPayingERC20Token.sol\":1029:1049  address public owner */\n      tag_24\n        /* \"#utility.yul\":750:953   */\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":834:860  address[] public lpHolders */\n    tag_10:\n      tag_43\n      tag_48\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n        /* \"contracts/DividendPayingERC20Token.sol\":4512:4582  function setOp(address d) external onlyOwner {... */\n    tag_11:\n      tag_35\n      tag_52\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/DividendPayingERC20Token.sol\":449:486  uint256 public progressRewardBlockAdd */\n    tag_12:\n      tag_20\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":602:626  uint256 public lpBonusEd */\n    tag_13:\n      tag_20\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":540:566  uint256 public dividendGas */\n    tag_14:\n      tag_20\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":4596:4714  function setHolderRewardCondition(uint256 amount) external onlyOwner {... */\n    tag_15:\n      tag_35\n      tag_64\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"contracts/DividendPayingERC20Token.sol\":4849:4955  function setRewardBlockAdd(uint256 num) external  onlyOwner{... */\n    tag_16:\n      tag_35\n      tag_67\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"contracts/DividendPayingERC20Token.sol\":1807:3781  function processReward(uint256 tfmount,address user)    external onlyOp returns (uint256) {... */\n    tag_17:\n      tag_20\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"contracts/DividendPayingERC20Token.sol\":496:532  uint256 public holderRewardCondition */\n    tag_18:\n      tag_20\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":1005:1022  address public op */\n    tag_19:\n      sload(0x10)\n      tag_43\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":4737:4841  function setDividendGas(uint256 vgas) external  onlyOwner{... */\n    tag_38:\n        /* \"contracts/DividendPayingERC20Token.sol\":1209:1214  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x11))\n        /* \"contracts/DividendPayingERC20Token.sol\":1218:1228  msg.sender */\n      caller\n        /* \"contracts/DividendPayingERC20Token.sol\":1209:1228  owner == msg.sender */\n      eq\n        /* \"contracts/DividendPayingERC20Token.sol\":1201:1265  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/DividendPayingERC20Token.sol\":4815:4826  dividendGas */\n      0x05\n        /* \"contracts/DividendPayingERC20Token.sol\":4815:4833  dividendGas = vgas */\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4737:4841  function setDividendGas(uint256 vgas) external  onlyOwner{... */\n      jump\t// out\n        /* \"contracts/DividendPayingERC20Token.sol\":834:860  address[] public lpHolders */\n    tag_49:\n      0x0c\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/DividendPayingERC20Token.sol\":4512:4582  function setOp(address d) external onlyOwner {... */\n    tag_53:\n        /* \"contracts/DividendPayingERC20Token.sol\":1209:1214  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x11))\n        /* \"contracts/DividendPayingERC20Token.sol\":1218:1228  msg.sender */\n      caller\n        /* \"contracts/DividendPayingERC20Token.sol\":1209:1228  owner == msg.sender */\n      eq\n        /* \"contracts/DividendPayingERC20Token.sol\":1201:1265  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_89:\n        /* \"contracts/DividendPayingERC20Token.sol\":4568:4570  op */\n      0x10\n        /* \"contracts/DividendPayingERC20Token.sol\":4568:4574  op = d */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4512:4582  function setOp(address d) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DividendPayingERC20Token.sol\":4596:4714  function setHolderRewardCondition(uint256 amount) external onlyOwner {... */\n    tag_65:\n        /* \"contracts/DividendPayingERC20Token.sol\":1209:1214  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x11))\n        /* \"contracts/DividendPayingERC20Token.sol\":1218:1228  msg.sender */\n      caller\n        /* \"contracts/DividendPayingERC20Token.sol\":1209:1228  owner == msg.sender */\n      eq\n        /* \"contracts/DividendPayingERC20Token.sol\":1201:1265  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_93:\n        /* \"contracts/DividendPayingERC20Token.sol\":4676:4697  holderRewardCondition */\n      0x04\n        /* \"contracts/DividendPayingERC20Token.sol\":4676:4706  holderRewardCondition = amount */\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4596:4714  function setHolderRewardCondition(uint256 amount) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DividendPayingERC20Token.sol\":4849:4955  function setRewardBlockAdd(uint256 num) external  onlyOwner{... */\n    tag_68:\n        /* \"contracts/DividendPayingERC20Token.sol\":1209:1214  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x11))\n        /* \"contracts/DividendPayingERC20Token.sol\":1218:1228  msg.sender */\n      caller\n        /* \"contracts/DividendPayingERC20Token.sol\":1209:1228  owner == msg.sender */\n      eq\n        /* \"contracts/DividendPayingERC20Token.sol\":1201:1265  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_97:\n        /* \"contracts/DividendPayingERC20Token.sol\":4919:4941  progressRewardBlockAdd */\n      0x03\n        /* \"contracts/DividendPayingERC20Token.sol\":4919:4947  progressRewardBlockAdd = num */\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4849:4955  function setRewardBlockAdd(uint256 num) external  onlyOwner{... */\n      jump\t// out\n        /* \"contracts/DividendPayingERC20Token.sol\":1807:3781  function processReward(uint256 tfmount,address user)    external onlyOp returns (uint256) {... */\n    tag_72:\n        /* \"contracts/DividendPayingERC20Token.sol\":1093:1095  op */\n      sload(0x10)\n        /* \"contracts/DividendPayingERC20Token.sol\":1888:1895  uint256 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":1093:1095  op */\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":1099:1109  msg.sender */\n      caller\n        /* \"contracts/DividendPayingERC20Token.sol\":1093:1109  op == msg.sender */\n      eq\n        /* \"contracts/DividendPayingERC20Token.sol\":1085:1143  require(op == msg.sender, \"Ownable: caller is not the op\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1780:1782   */\n      0x20\n        /* \"contracts/DividendPayingERC20Token.sol\":1085:1143  require(op == msg.sender, \"Ownable: caller is not the op\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1762:1783   */\n      mstore\n        /* \"#utility.yul\":1819:1821   */\n      0x1d\n        /* \"#utility.yul\":1799:1817   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1792:1822   */\n      mstore\n        /* \"#utility.yul\":1858:1889   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f70000000\n        /* \"#utility.yul\":1838:1856   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1831:1890   */\n      mstore\n        /* \"#utility.yul\":1907:1925   */\n      0x64\n      add\n        /* \"contracts/DividendPayingERC20Token.sol\":1085:1143  require(op == msg.sender, \"Ownable: caller is not the op\") */\n      tag_82\n        /* \"#utility.yul\":1578:1931   */\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":1085:1143  require(op == msg.sender, \"Ownable: caller is not the op\") */\n    tag_101:\n        /* \"contracts/DividendPayingERC20Token.sol\":1918:1938  ariver(tfmount,user) */\n      tag_105\n        /* \"contracts/DividendPayingERC20Token.sol\":1925:1932  tfmount */\n      dup4\n        /* \"contracts/DividendPayingERC20Token.sol\":1933:1937  user */\n      dup4\n        /* \"contracts/DividendPayingERC20Token.sol\":1918:1924  ariver */\n      tag_106\n        /* \"contracts/DividendPayingERC20Token.sol\":1918:1938  ariver(tfmount,user) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/DividendPayingERC20Token.sol\":1960:1967  tfmount */\n      dup3\n        /* \"contracts/DividendPayingERC20Token.sol\":1949:1956  lpBonus */\n      0x06\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":1949:1967  lpBonus += tfmount */\n      dup3\n      dup3\n      sload\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":2014:2036  progressRewardBlockAdd */\n      sload(0x03)\n        /* \"contracts/DividendPayingERC20Token.sol\":1992:2011  progressRewardBlock */\n      sload(0x02)\n        /* \"contracts/DividendPayingERC20Token.sol\":2039:2051  block.number */\n      number\n      swap2\n        /* \"contracts/DividendPayingERC20Token.sol\":1992:2036  progressRewardBlock + progressRewardBlockAdd */\n      tag_109\n      swap2\n      tag_108\n      jump\t// in\n    tag_109:\n        /* \"contracts/DividendPayingERC20Token.sol\":1992:2051  progressRewardBlock + progressRewardBlockAdd > block.number */\n      gt\n        /* \"contracts/DividendPayingERC20Token.sol\":1988:2088  if (progressRewardBlock + progressRewardBlockAdd > block.number) {... */\n      iszero\n      tag_110\n      jumpi\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":2075:2076  0 */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":2068:2076  return 0 */\n      jump(tag_104)\n        /* \"contracts/DividendPayingERC20Token.sol\":1988:2088  if (progressRewardBlock + progressRewardBlockAdd > block.number) {... */\n    tag_110:\n        /* \"contracts/DividendPayingERC20Token.sol\":2236:2243  lpBonus */\n      sload(0x06)\n        /* \"contracts/DividendPayingERC20Token.sol\":2223:2232  lpBonusEd */\n      sload(0x07)\n        /* \"contracts/DividendPayingERC20Token.sol\":2223:2243  lpBonusEd >= lpBonus */\n      lt\n        /* \"contracts/DividendPayingERC20Token.sol\":2219:2277  if (lpBonusEd >= lpBonus){... */\n      tag_111\n      jumpi\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":2264:2265  0 */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":2257:2265  return 0 */\n      jump(tag_104)\n        /* \"contracts/DividendPayingERC20Token.sol\":2219:2277  if (lpBonusEd >= lpBonus){... */\n    tag_111:\n        /* \"contracts/DividendPayingERC20Token.sol\":2287:2302  uint256 balance */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":2315:2324  lpBonusEd */\n      sload(0x07)\n        /* \"contracts/DividendPayingERC20Token.sol\":2305:2312  lpBonus */\n      sload(0x06)\n        /* \"contracts/DividendPayingERC20Token.sol\":2305:2324  lpBonus - lpBonusEd */\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"contracts/DividendPayingERC20Token.sol\":2287:2324  uint256 balance = lpBonus - lpBonusEd */\n      swap1\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":2349:2370  holderRewardCondition */\n      sload(0x04)\n        /* \"contracts/DividendPayingERC20Token.sol\":2339:2346  balance */\n      dup2\n        /* \"contracts/DividendPayingERC20Token.sol\":2339:2370  balance < holderRewardCondition */\n      lt\n        /* \"contracts/DividendPayingERC20Token.sol\":2339:2419  balance < holderRewardCondition || address(this).balance < holderRewardCondition */\n      dup1\n      tag_114\n      jumpi\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":2398:2419  holderRewardCondition */\n      sload(0x04)\n        /* \"contracts/DividendPayingERC20Token.sol\":2374:2395  address(this).balance */\n      selfbalance\n        /* \"contracts/DividendPayingERC20Token.sol\":2374:2419  address(this).balance < holderRewardCondition */\n      lt\n        /* \"contracts/DividendPayingERC20Token.sol\":2339:2419  balance < holderRewardCondition || address(this).balance < holderRewardCondition */\n    tag_114:\n        /* \"contracts/DividendPayingERC20Token.sol\":2335:2456  if (balance < holderRewardCondition || address(this).balance < holderRewardCondition) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":2443:2444  0 */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":2436:2444  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_104)\n        /* \"contracts/DividendPayingERC20Token.sol\":2335:2456  if (balance < holderRewardCondition || address(this).balance < holderRewardCondition) {... */\n    tag_115:\n        /* \"contracts/DividendPayingERC20Token.sol\":2586:2595  lpHolders */\n      0x0c\n        /* \"contracts/DividendPayingERC20Token.sol\":2586:2602  lpHolders.length */\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":2480:2496  address lpHolder */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      dup1\n      dup1\n        /* \"contracts/DividendPayingERC20Token.sol\":2696:2705  gasleft() */\n      gas\n        /* \"contracts/DividendPayingERC20Token.sol\":2678:2705  uint256 gasLeft = gasleft() */\n      swap1\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":2726:3703  while (gasUsed < dividendGas && iterations < lpHolderCount) {... */\n    tag_116:\n        /* \"contracts/DividendPayingERC20Token.sol\":2743:2754  dividendGas */\n      sload(0x05)\n        /* \"contracts/DividendPayingERC20Token.sol\":2733:2740  gasUsed */\n      dup4\n        /* \"contracts/DividendPayingERC20Token.sol\":2733:2754  gasUsed < dividendGas */\n      lt\n        /* \"contracts/DividendPayingERC20Token.sol\":2733:2784  gasUsed < dividendGas && iterations < lpHolderCount */\n      dup1\n      iszero\n      tag_118\n      jumpi\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":2771:2784  lpHolderCount */\n      dup4\n        /* \"contracts/DividendPayingERC20Token.sol\":2758:2768  iterations */\n      dup3\n        /* \"contracts/DividendPayingERC20Token.sol\":2758:2784  iterations < lpHolderCount */\n      lt\n        /* \"contracts/DividendPayingERC20Token.sol\":2733:2784  gasUsed < dividendGas && iterations < lpHolderCount */\n    tag_118:\n        /* \"contracts/DividendPayingERC20Token.sol\":2726:3703  while (gasUsed < dividendGas && iterations < lpHolderCount) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":2823:2836  lpHolderCount */\n      dup4\n        /* \"contracts/DividendPayingERC20Token.sol\":2805:2819  currentLpIndex */\n      sload(0x0e)\n        /* \"contracts/DividendPayingERC20Token.sol\":2805:2836  currentLpIndex >= lpHolderCount */\n      lt\n        /* \"contracts/DividendPayingERC20Token.sol\":2801:2891  if (currentLpIndex >= lpHolderCount) {... */\n      tag_119\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":2874:2875  0 */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":2857:2871  currentLpIndex */\n      0x0e\n        /* \"contracts/DividendPayingERC20Token.sol\":2857:2875  currentLpIndex = 0 */\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":2801:2891  if (currentLpIndex >= lpHolderCount) {... */\n    tag_119:\n        /* \"contracts/DividendPayingERC20Token.sol\":2930:2939  lpHolders */\n      0x0c\n        /* \"contracts/DividendPayingERC20Token.sol\":2940:2954  currentLpIndex */\n      sload(0x0e)\n        /* \"contracts/DividendPayingERC20Token.sol\":2930:2955  lpHolders[currentLpIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_121\n      jumpi\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":2982:3003  _LpBalances[lpHolder] */\n      dup1\n      dup4\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":2982:2993  _LpBalances */\n      0x09\n        /* \"contracts/DividendPayingERC20Token.sol\":2982:3003  _LpBalances[lpHolder] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":2930:2955  lpHolders[currentLpIndex] */\n      swap1\n      swap8\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":2982:3003  _LpBalances[lpHolder] */\n      swap6\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3035:3047  lpBalance >0 */\n      dup6\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":3035:3074  lpBalance >0 && lpHolder != deadAddress */\n      tag_124\n      jumpi\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3063:3074  deadAddress */\n      sload(0x0f)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":3051:3074  lpHolder != deadAddress */\n      dup9\n      dup2\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":3063:3074  deadAddress */\n      swap2\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":3051:3074  lpHolder != deadAddress */\n      eq\n      iszero\n        /* \"contracts/DividendPayingERC20Token.sol\":3035:3074  lpBalance >0 && lpHolder != deadAddress */\n    tag_124:\n        /* \"contracts/DividendPayingERC20Token.sol\":3032:3510  if(lpBalance >0 && lpHolder != deadAddress){... */\n      iszero\n      tag_131\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":3152:3163  deadAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"contracts/DividendPayingERC20Token.sol\":3140:3164  _LpBalances[deadAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":3140:3151  _LpBalances */\n      0x09\n        /* \"contracts/DividendPayingERC20Token.sol\":3140:3164  _LpBalances[deadAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":3126:3139  totalLpSupply */\n      sload(0x08)\n        /* \"contracts/DividendPayingERC20Token.sol\":3126:3164  totalLpSupply-_LpBalances[deadAddress] */\n      tag_126\n      swap2\n        /* \"contracts/DividendPayingERC20Token.sol\":3140:3164  _LpBalances[deadAddress] */\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":3126:3164  totalLpSupply-_LpBalances[deadAddress] */\n      tag_113\n      jump\t// in\n    tag_126:\n        /* \"contracts/DividendPayingERC20Token.sol\":3102:3121  balance * lpBalance */\n      tag_127\n        /* \"contracts/DividendPayingERC20Token.sol\":3112:3121  lpBalance */\n      dup8\n        /* \"contracts/DividendPayingERC20Token.sol\":3102:3109  balance */\n      dup11\n        /* \"contracts/DividendPayingERC20Token.sol\":3102:3121  balance * lpBalance */\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"contracts/DividendPayingERC20Token.sol\":3101:3165  (balance * lpBalance) / (totalLpSupply-_LpBalances[deadAddress]) */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"contracts/DividendPayingERC20Token.sol\":3092:3165  amount = (balance * lpBalance) / (totalLpSupply-_LpBalances[deadAddress]) */\n      swap5\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3188:3198  amount > 0 */\n      dup5\n      iszero\n        /* \"contracts/DividendPayingERC20Token.sol\":3184:3495  if (amount > 0) {... */\n      tag_131\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":3299:3343  IERC20(msg.sender).transfer(lpHolder,amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3050:3082   */\n      dup9\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":3299:3343  IERC20(msg.sender).transfer(lpHolder,amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3032:3083   */\n      mstore\n        /* \"#utility.yul\":3099:3117   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3092:3126   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":3306:3316  msg.sender */\n      caller\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":3299:3326  IERC20(msg.sender).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3005:3023   */\n      0x44\n      add\n        /* \"contracts/DividendPayingERC20Token.sol\":3299:3343  IERC20(msg.sender).transfer(lpHolder,amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3422:3428  amount */\n      dup5\n        /* \"contracts/DividendPayingERC20Token.sol\":3409:3418  lpBonusEd */\n      0x07\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":3409:3428  lpBonusEd += amount */\n      dup3\n      dup3\n      sload\n      tag_138\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_138:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3184:3495  if (amount > 0) {... */\n    tag_131:\n        /* \"contracts/DividendPayingERC20Token.sol\":3589:3598  gasleft() */\n      gas\n        /* \"contracts/DividendPayingERC20Token.sol\":3579:3598  gasLeft - gasleft() */\n      tag_139\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":3579:3586  gasLeft */\n      dup3\n        /* \"contracts/DividendPayingERC20Token.sol\":3579:3598  gasLeft - gasleft() */\n      tag_113\n      jump\t// in\n    tag_139:\n        /* \"contracts/DividendPayingERC20Token.sol\":3568:3599  gasUsed + (gasLeft - gasleft()) */\n      tag_140\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":3568:3575  gasUsed */\n      dup5\n        /* \"contracts/DividendPayingERC20Token.sol\":3568:3599  gasUsed + (gasLeft - gasleft()) */\n      tag_108\n      jump\t// in\n    tag_140:\n        /* \"contracts/DividendPayingERC20Token.sol\":3558:3599  gasUsed = gasUsed + (gasLeft - gasleft()) */\n      swap3\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3624:3633  gasleft() */\n      gas\n        /* \"contracts/DividendPayingERC20Token.sol\":3648:3662  currentLpIndex */\n      0x0e\n        /* \"contracts/DividendPayingERC20Token.sol\":3648:3664  currentLpIndex++ */\n      dup1\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":3614:3633  gasLeft = gasleft() */\n      swap2\n      swap3\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3648:3662  currentLpIndex */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":3648:3664  currentLpIndex++ */\n      tag_141\n      dup4\n      tag_142\n      jump\t// in\n    tag_141:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3679:3691  iterations++ */\n      dup2\n      dup1\n      tag_143\n      swap1\n      tag_142\n      jump\t// in\n    tag_143:\n      swap3\n      pop\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":2726:3703  while (gasUsed < dividendGas && iterations < lpHolderCount) {... */\n      jump(tag_116)\n    tag_117:\n      pop\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3737:3749  block.number */\n      number\n        /* \"contracts/DividendPayingERC20Token.sol\":3715:3734  progressRewardBlock */\n      0x02\n        /* \"contracts/DividendPayingERC20Token.sol\":3715:3749  progressRewardBlock = block.number */\n      sstore\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3767:3773  amount */\n      swap1\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":1154:1155  _ */\n    tag_104:\n        /* \"contracts/DividendPayingERC20Token.sol\":1807:3781  function processReward(uint256 tfmount,address user)    external onlyOp returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DividendPayingERC20Token.sol\":3789:4382  function ariver(uint256 amount,address sender)internal virtual   {... */\n    tag_106:\n        /* \"contracts/DividendPayingERC20Token.sol\":3913:3919  amount */\n      dup2\n        /* \"contracts/DividendPayingERC20Token.sol\":3896:3909  totalLpSupply */\n      0x08\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":3896:3919  totalLpSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_145\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_145:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":3928:3947  _LpBalances[sender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":3928:3939  _LpBalances */\n      0x09\n        /* \"contracts/DividendPayingERC20Token.sol\":3928:3947  _LpBalances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/DividendPayingERC20Token.sol\":3928:3957  _LpBalances[sender] += amount */\n      dup1\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":3951:3957  amount */\n      dup5\n      swap3\n        /* \"contracts/DividendPayingERC20Token.sol\":3928:3947  _LpBalances[sender] */\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":3928:3957  _LpBalances[sender] += amount */\n      tag_146\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":3951:3957  amount */\n      dup5\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":3928:3957  _LpBalances[sender] += amount */\n      tag_108\n      jump\t// in\n    tag_146:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":3966:3985  _lastLpTime[sender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":3966:3977  _lastLpTime */\n      0x0a\n        /* \"contracts/DividendPayingERC20Token.sol\":3966:3985  _lastLpTime[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DividendPayingERC20Token.sol\":3988:4003  block.timestamp */\n      timestamp\n        /* \"contracts/DividendPayingERC20Token.sol\":3966:4003  _lastLpTime[sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4013:4021  _lastEth */\n      0x0b\n        /* \"contracts/DividendPayingERC20Token.sol\":4013:4029  _lastEth[sender] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/DividendPayingERC20Token.sol\":4013:4042  _lastEth[sender] += msg.value */\n      dup1\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":4033:4042  msg.value */\n      callvalue\n      swap3\n        /* \"contracts/DividendPayingERC20Token.sol\":3966:3985  _lastLpTime[sender] */\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":4013:4042  _lastEth[sender] += msg.value */\n      tag_147\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":4033:4042  msg.value */\n      dup5\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":4013:4042  _lastEth[sender] += msg.value */\n      tag_108\n      jump\t// in\n    tag_147:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":4085:4096  deadAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"contracts/DividendPayingERC20Token.sol\":4071:4097  lpHolderIndex[deadAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4071:4084  lpHolderIndex */\n      0x0d\n        /* \"contracts/DividendPayingERC20Token.sol\":4071:4097  lpHolderIndex[deadAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":4066:4097  0 == lpHolderIndex[deadAddress] */\n      swap1\n      sub\n        /* \"contracts/DividendPayingERC20Token.sol\":4062:4209  if (0 == lpHolderIndex[deadAddress]) {... */\n      tag_148\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":4141:4150  lpHolders */\n      0x0c\n        /* \"contracts/DividendPayingERC20Token.sol\":4141:4157  lpHolders.length */\n      dup1\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":4126:4137  deadAddress */\n      0x0f\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":4112:4138  lpHolderIndex[deadAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4112:4125  lpHolderIndex */\n      0x0d\n        /* \"contracts/DividendPayingERC20Token.sol\":4112:4138  lpHolderIndex[deadAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/DividendPayingERC20Token.sol\":4112:4157  lpHolderIndex[deadAddress] = lpHolders.length */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4185:4196  deadAddress */\n      swap2\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":4126:4137  deadAddress */\n      0x01\n        /* \"contracts/DividendPayingERC20Token.sol\":4170:4197  lpHolders.push(deadAddress) */\n      dup5\n      add\n      dup6\n      sstore\n      swap4\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_1edf167807421166f29a87fc522b46543164915401142af67f87687dbc8ae574\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":4185:4196  deadAddress */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":4170:4197  lpHolders.push(deadAddress) */\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4062:4209  if (0 == lpHolderIndex[deadAddress]) {... */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":4234:4255  lpHolderIndex[sender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4234:4247  lpHolderIndex */\n      0x0d\n        /* \"contracts/DividendPayingERC20Token.sol\":4234:4255  lpHolderIndex[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":4229:4255  0 == lpHolderIndex[sender] */\n      swap1\n      sub\n        /* \"contracts/DividendPayingERC20Token.sol\":4225:4357  if (0 == lpHolderIndex[sender]) {... */\n      tag_150\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":4294:4303  lpHolders */\n      0x0c\n        /* \"contracts/DividendPayingERC20Token.sol\":4294:4310  lpHolders.length */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":4270:4291  lpHolderIndex[sender] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4270:4283  lpHolderIndex */\n      0x0d\n        /* \"contracts/DividendPayingERC20Token.sol\":4270:4291  lpHolderIndex[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/DividendPayingERC20Token.sol\":4270:4310  lpHolderIndex[sender] = lpHolders.length */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4323:4345  lpHolders.push(sender) */\n      0x01\n      dup4\n      add\n      dup5\n      sstore\n      swap3\n      swap1\n      swap3\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_1edf167807421166f29a87fc522b46543164915401142af67f87687dbc8ae574\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4225:4357  if (0 == lpHolderIndex[sender]) {... */\n    tag_150:\n        /* \"contracts/DividendPayingERC20Token.sol\":3789:4382  function ariver(uint256 amount,address sender)internal virtual   {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_152:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_156:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_22:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_158:\n        /* \"#utility.yul\":343:372   */\n      tag_159\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_152\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:745   */\n    tag_37:\n        /* \"#utility.yul\":624:630   */\n      0x00\n        /* \"#utility.yul\":677:679   */\n      0x20\n        /* \"#utility.yul\":665:674   */\n      dup3\n        /* \"#utility.yul\":656:663   */\n      dup5\n        /* \"#utility.yul\":652:675   */\n      sub\n        /* \"#utility.yul\":648:680   */\n      slt\n        /* \"#utility.yul\":645:697   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":693:694   */\n      0x00\n        /* \"#utility.yul\":690:691   */\n      dup1\n        /* \"#utility.yul\":683:695   */\n      revert\n        /* \"#utility.yul\":645:697   */\n    tag_162:\n      pop\n        /* \"#utility.yul\":716:739   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":565:745   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":958:1212   */\n    tag_71:\n        /* \"#utility.yul\":1026:1032   */\n      0x00\n        /* \"#utility.yul\":1034:1040   */\n      dup1\n        /* \"#utility.yul\":1087:1089   */\n      0x40\n        /* \"#utility.yul\":1075:1084   */\n      dup4\n        /* \"#utility.yul\":1066:1073   */\n      dup6\n        /* \"#utility.yul\":1062:1085   */\n      sub\n        /* \"#utility.yul\":1058:1090   */\n      slt\n        /* \"#utility.yul\":1055:1107   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1103:1104   */\n      0x00\n        /* \"#utility.yul\":1100:1101   */\n      dup1\n        /* \"#utility.yul\":1093:1105   */\n      revert\n        /* \"#utility.yul\":1055:1107   */\n    tag_165:\n        /* \"#utility.yul\":1139:1148   */\n      dup3\n        /* \"#utility.yul\":1126:1149   */\n      calldataload\n        /* \"#utility.yul\":1116:1149   */\n      swap2\n      pop\n        /* \"#utility.yul\":1168:1206   */\n      tag_166\n        /* \"#utility.yul\":1202:1204   */\n      0x20\n        /* \"#utility.yul\":1191:1200   */\n      dup5\n        /* \"#utility.yul\":1187:1205   */\n      add\n        /* \"#utility.yul\":1168:1206   */\n      tag_152\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1158:1206   */\n      swap1\n      pop\n        /* \"#utility.yul\":958:1212   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1217:1573   */\n    tag_83:\n        /* \"#utility.yul\":1419:1421   */\n      0x20\n        /* \"#utility.yul\":1401:1422   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1438:1456   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1431:1461   */\n      mstore\n        /* \"#utility.yul\":1497:1531   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1492:1494   */\n      0x40\n        /* \"#utility.yul\":1477:1495   */\n      dup3\n      add\n        /* \"#utility.yul\":1470:1532   */\n      mstore\n        /* \"#utility.yul\":1564:1566   */\n      0x60\n        /* \"#utility.yul\":1549:1567   */\n      add\n      swap1\n        /* \"#utility.yul\":1217:1573   */\n      jump\t// out\n        /* \"#utility.yul\":1936:2063   */\n    tag_153:\n        /* \"#utility.yul\":1997:2007   */\n      0x4e487b71\n        /* \"#utility.yul\":1992:1995   */\n      0xe0\n        /* \"#utility.yul\":1988:2008   */\n      shl\n        /* \"#utility.yul\":1985:1986   */\n      0x00\n        /* \"#utility.yul\":1978:2009   */\n      mstore\n        /* \"#utility.yul\":2028:2032   */\n      0x11\n        /* \"#utility.yul\":2025:2026   */\n      0x04\n        /* \"#utility.yul\":2018:2033   */\n      mstore\n        /* \"#utility.yul\":2052:2056   */\n      0x24\n        /* \"#utility.yul\":2049:2050   */\n      0x00\n        /* \"#utility.yul\":2042:2057   */\n      revert\n        /* \"#utility.yul\":2068:2193   */\n    tag_108:\n        /* \"#utility.yul\":2133:2142   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2154:2164   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2151:2187   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2167:2185   */\n      tag_104\n      tag_153\n      jump\t// in\n        /* \"#utility.yul\":2198:2326   */\n    tag_113:\n        /* \"#utility.yul\":2265:2274   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2286:2297   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2283:2320   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2300:2318   */\n      tag_104\n      tag_153\n      jump\t// in\n        /* \"#utility.yul\":2331:2458   */\n    tag_122:\n        /* \"#utility.yul\":2392:2402   */\n      0x4e487b71\n        /* \"#utility.yul\":2387:2390   */\n      0xe0\n        /* \"#utility.yul\":2383:2403   */\n      shl\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2373:2404   */\n      mstore\n        /* \"#utility.yul\":2423:2427   */\n      0x32\n        /* \"#utility.yul\":2420:2421   */\n      0x04\n        /* \"#utility.yul\":2413:2428   */\n      mstore\n        /* \"#utility.yul\":2447:2451   */\n      0x24\n        /* \"#utility.yul\":2444:2445   */\n      0x00\n        /* \"#utility.yul\":2437:2452   */\n      revert\n        /* \"#utility.yul\":2463:2631   */\n    tag_128:\n        /* \"#utility.yul\":2536:2545   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2567:2576   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2584:2599   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2578:2600   */\n      dup5\n      eq\n        /* \"#utility.yul\":2564:2601   */\n      or\n        /* \"#utility.yul\":2554:2625   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2605:2623   */\n      tag_104\n      tag_153\n      jump\t// in\n        /* \"#utility.yul\":2636:2853   */\n    tag_130:\n        /* \"#utility.yul\":2676:2677   */\n      0x00\n        /* \"#utility.yul\":2702:2703   */\n      dup3\n        /* \"#utility.yul\":2692:2824   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2746:2756   */\n      0x4e487b71\n        /* \"#utility.yul\":2741:2744   */\n      0xe0\n        /* \"#utility.yul\":2737:2757   */\n      shl\n        /* \"#utility.yul\":2734:2735   */\n      0x00\n        /* \"#utility.yul\":2727:2758   */\n      mstore\n        /* \"#utility.yul\":2781:2785   */\n      0x12\n        /* \"#utility.yul\":2778:2779   */\n      0x04\n        /* \"#utility.yul\":2771:2786   */\n      mstore\n        /* \"#utility.yul\":2809:2813   */\n      0x24\n        /* \"#utility.yul\":2806:2807   */\n      0x00\n        /* \"#utility.yul\":2799:2814   */\n      revert\n        /* \"#utility.yul\":2692:2824   */\n    tag_181:\n      pop\n        /* \"#utility.yul\":2838:2847   */\n      div\n      swap1\n        /* \"#utility.yul\":2636:2853   */\n      jump\t// out\n        /* \"#utility.yul\":3137:3414   */\n    tag_137:\n        /* \"#utility.yul\":3204:3210   */\n      0x00\n        /* \"#utility.yul\":3257:3259   */\n      0x20\n        /* \"#utility.yul\":3245:3254   */\n      dup3\n        /* \"#utility.yul\":3236:3243   */\n      dup5\n        /* \"#utility.yul\":3232:3255   */\n      sub\n        /* \"#utility.yul\":3228:3260   */\n      slt\n        /* \"#utility.yul\":3225:3277   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":3273:3274   */\n      0x00\n        /* \"#utility.yul\":3270:3271   */\n      dup1\n        /* \"#utility.yul\":3263:3275   */\n      revert\n        /* \"#utility.yul\":3225:3277   */\n    tag_184:\n        /* \"#utility.yul\":3305:3314   */\n      dup2\n        /* \"#utility.yul\":3299:3315   */\n      mload\n        /* \"#utility.yul\":3358:3363   */\n      dup1\n        /* \"#utility.yul\":3351:3364   */\n      iszero\n        /* \"#utility.yul\":3344:3365   */\n      iszero\n        /* \"#utility.yul\":3337:3342   */\n      dup2\n        /* \"#utility.yul\":3334:3366   */\n      eq\n        /* \"#utility.yul\":3324:3384   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":3380:3381   */\n      0x00\n        /* \"#utility.yul\":3377:3378   */\n      dup1\n        /* \"#utility.yul\":3370:3382   */\n      revert\n        /* \"#utility.yul\":3419:3554   */\n    tag_142:\n        /* \"#utility.yul\":3458:3461   */\n      0x00\n        /* \"#utility.yul\":3479:3496   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3476:3519   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":3499:3517   */\n      tag_188\n      tag_153\n      jump\t// in\n    tag_188:\n      pop\n        /* \"#utility.yul\":3546:3547   */\n      0x01\n        /* \"#utility.yul\":3535:3548   */\n      add\n      swap1\n        /* \"#utility.yul\":3419:3554   */\n      jump\t// out\n    stop\n    data_1edf167807421166f29a87fc522b46543164915401142af67f87687dbc8ae574 df6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7\n\n    auxdata: 0xa26469706673582212206fe4464a5d3490a41b7a68c62398894ea05fd29414d3063adc9334aa02f1c06764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_132": {
									"entryPoint": null,
									"id": 132,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50601180546001600160a01b031990811633179091555f600881905560c8600355662386f26fc100006004556207a120600555600f805490921661dead90811790925590815260208190527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf8381905560078190556006556108e1806100935f395ff3fe608060405234801561000f575f80fd5b50600436106100d9575f3560e01c80630affb402146100dd5780631210c4341461010f5780632a59551214610118578063621f9c0a146101215780636689567e1461012a57806370a082311461013f5780638da5cb5b146101675780639f0d7eb814610192578063a36a7526146101a5578063add0a6c6146101b8578063b367bf83146101c1578063bd876702146101ca578063c213d62d146101d3578063c7003ed0146101e6578063dd2cad60146101f9578063eb10b7411461020c578063ec1f1f6914610215575b5f80fd5b6100fc6100eb36600461073a565b600d6020525f908152604090205481565b6040519081526020015b60405180910390f35b6100fc600e5481565b6100fc60025481565b6100fc60065481565b61013d61013836600461075a565b610228565b005b6100fc61014d36600461073a565b6001600160a01b03165f9081526020819052604090205490565b60115461017a906001600160a01b031681565b6040516001600160a01b039091168152602001610106565b61017a6101a036600461075a565b610260565b61013d6101b336600461073a565b610288565b6100fc60035481565b6100fc60075481565b6100fc60055481565b61013d6101e136600461075a565b6102d4565b61013d6101f436600461075a565b610303565b6100fc610207366004610771565b610332565b6100fc60045481565b60105461017a906001600160a01b031681565b6011546001600160a01b0316331461025b5760405162461bcd60e51b81526004016102529061079b565b60405180910390fd5b600555565b600c818154811061026f575f80fd5b5f918252602090912001546001600160a01b0316905081565b6011546001600160a01b031633146102b25760405162461bcd60e51b81526004016102529061079b565b601080546001600160a01b0319166001600160a01b0392909216919091179055565b6011546001600160a01b031633146102fe5760405162461bcd60e51b81526004016102529061079b565b600455565b6011546001600160a01b0316331461032d5760405162461bcd60e51b81526004016102529061079b565b600355565b6010545f906001600160a01b0316331461038e5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f700000006044820152606401610252565b61039883836105c2565b8260065f8282546103a991906107e4565b909155505060035460025443916103bf916107e4565b11156103cc57505f6105bc565b600654600754106103de57505f6105bc565b5f6007546006546103ef91906107f7565b9050600454811080610402575060045447105b15610410575f9150506105bc565b600c545f90819081908180805a90505b6005548310801561043057508382105b156105ad5783600e5410610443575f600e555b600c600e54815481106104585761045861080a565b5f9182526020808320909101546001600160a01b031680835260099091526040909120549097509550851580159061049e5750600f546001600160a01b03888116911614155b1561056c57600f546001600160a01b03165f908152600960205260409020546008546104ca91906107f7565b6104d4878a61081e565b6104de9190610835565b9450841561056c5760405163a9059cbb60e01b81526001600160a01b038816600482015260248101869052339063a9059cbb906044016020604051808303815f875af1158015610530573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105549190610854565b508460075f82825461056691906107e4565b90915550505b5a61057790826107f7565b61058190846107e4565b92505a600e80549192505f61059583610873565b919050555081806105a590610873565b925050610420565b50504360025550909450505050505b92915050565b8160085f8282546105d391906107e4565b90915550506001600160a01b0381165f90815260096020526040812080548492906105ff9084906107e4565b90915550506001600160a01b0381165f908152600a60209081526040808320429055600b909152812080543492906106389084906107e4565b9091555050600f546001600160a01b03165f908152600d602052604081205490036106b457600c8054600f80546001600160a01b039081165f908152600d602052604081208490559154600184018555939091525f8051602061088c83398151915290910180546001600160a01b031916929091169190911790555b6001600160a01b0381165f908152600d6020526040812054900361071b57600c80546001600160a01b0383165f818152600d60205260408120839055600183018455929092525f8051602061088c8339815191520180546001600160a01b03191690911790555b5050565b80356001600160a01b0381168114610735575f80fd5b919050565b5f6020828403121561074a575f80fd5b6107538261071f565b9392505050565b5f6020828403121561076a575f80fd5b5035919050565b5f8060408385031215610782575f80fd5b823591506107926020840161071f565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b808201808211156105bc576105bc6107d0565b818103818111156105bc576105bc6107d0565b634e487b7160e01b5f52603260045260245ffd5b80820281158282048414176105bc576105bc6107d0565b5f8261084f57634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215610864575f80fd5b81518015158114610753575f80fd5b5f60018201610884576108846107d0565b506001019056fedf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7a26469706673582212206fe4464a5d3490a41b7a68c62398894ea05fd29414d3063adc9334aa02f1c06764736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH0 PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0xC8 PUSH1 0x3 SSTORE PUSH7 0x2386F26FC10000 PUSH1 0x4 SSTORE PUSH3 0x7A120 PUSH1 0x5 SSTORE PUSH1 0xF DUP1 SLOAD SWAP1 SWAP3 AND PUSH2 0xDEAD SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83 DUP2 SWAP1 SSTORE PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x6 SSTORE PUSH2 0x8E1 DUP1 PUSH2 0x93 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFB402 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x1210C434 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x2A595512 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x621F9C0A EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x6689567E EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x9F0D7EB8 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xA36A7526 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xADD0A6C6 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xB367BF83 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xBD876702 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xC213D62D EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xC7003ED0 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD2CAD60 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xEB10B741 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xEC1F1F69 EQ PUSH2 0x215 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x73A JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFC PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x17A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0x17A PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x73A JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x17A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x25B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x252 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x26F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x252 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x252 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x252 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F70000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x252 JUMP JUMPDEST PUSH2 0x398 DUP4 DUP4 PUSH2 0x5C2 JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD NUMBER SWAP2 PUSH2 0x3BF SWAP2 PUSH2 0x7E4 JUMP JUMPDEST GT ISZERO PUSH2 0x3CC JUMPI POP PUSH0 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD LT PUSH2 0x3DE JUMPI POP PUSH0 PUSH2 0x5BC JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 LT DUP1 PUSH2 0x402 JUMPI POP PUSH1 0x4 SLOAD SELFBALANCE LT JUMPDEST ISZERO PUSH2 0x410 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x5BC JUMP JUMPDEST PUSH1 0xC SLOAD PUSH0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 DUP1 DUP1 GAS SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP4 LT DUP1 ISZERO PUSH2 0x430 JUMPI POP DUP4 DUP3 LT JUMPDEST ISZERO PUSH2 0x5AD JUMPI DUP4 PUSH1 0xE SLOAD LT PUSH2 0x443 JUMPI PUSH0 PUSH1 0xE SSTORE JUMPDEST PUSH1 0xC PUSH1 0xE SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x458 JUMPI PUSH2 0x458 PUSH2 0x80A JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP8 POP SWAP6 POP DUP6 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x49E JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x56C JUMPI PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x8 SLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x4D4 DUP8 DUP11 PUSH2 0x81E JUMP JUMPDEST PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x835 JUMP JUMPDEST SWAP5 POP DUP5 ISZERO PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x854 JUMP JUMPDEST POP DUP5 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST GAS PUSH2 0x577 SWAP1 DUP3 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x581 SWAP1 DUP5 PUSH2 0x7E4 JUMP JUMPDEST SWAP3 POP GAS PUSH1 0xE DUP1 SLOAD SWAP2 SWAP3 POP PUSH0 PUSH2 0x595 DUP4 PUSH2 0x873 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 DUP1 PUSH2 0x5A5 SWAP1 PUSH2 0x873 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x420 JUMP JUMPDEST POP POP NUMBER PUSH1 0x2 SSTORE POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x5FF SWAP1 DUP5 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x638 SWAP1 DUP5 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x6B4 JUMPI PUSH1 0xC DUP1 SLOAD PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP1 SSTORE SWAP2 SLOAD PUSH1 0x1 DUP5 ADD DUP6 SSTORE SWAP4 SWAP1 SWAP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x88C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x71B JUMPI PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x1 DUP4 ADD DUP5 SSTORE SWAP3 SWAP1 SWAP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x88C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x735 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP3 PUSH2 0x71F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x782 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x792 PUSH1 0x20 DUP5 ADD PUSH2 0x71F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0x7D0 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0x7D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0x7D0 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x84F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x864 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x753 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x884 JUMPI PUSH2 0x884 PUSH2 0x7D0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0xDF PUSH10 0x66C971051C3D54EC5916 0x26 MOD MSTORE8 EQ SWAP4 0xA5 EQ DIV LOG0 MUL DUP5 0x2F JUMP STOP SWAP14 PUSH31 0x5CF4A8C7A26469706673582212206FE4464A5D3490A41B7A68C62398894EA0 PUSH0 0xD2 SWAP5 EQ 0xD3 MOD GASPRICE 0xDC SWAP4 CALLVALUE 0xAA MUL CALL 0xC0 PUSH8 0x64736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "263:4706:0:-:0;;;1293:504;;;;;;;;;-1:-1:-1;1362:5:0;:18;;-1:-1:-1;;;;;;1362:18:0;;;1370:10;1362:18;;;;:5;1434:13;:17;;;1487:3;1462:22;:28;1525:12;1501:21;:36;1572:6;-1:-1:-1;1558:20:0;1596:11;:65;;;;;1618:42;1596:65;;;;;;1692:22;;;;;;;;:32;;;1735:9;:13;;;1759:7;:11;263:4706;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ariver_389": {
									"entryPoint": 1474,
									"id": 389,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@currentLpIndex_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dividendGas_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@holderRewardCondition_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lpBonusEd_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lpBonus_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lpHolderIndex_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lpHolders_46": {
									"entryPoint": 608,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@op_56": {
									"entryPoint": null,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_58": {
									"entryPoint": null,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@processReward_317": {
									"entryPoint": 818,
									"id": 317,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@progressRewardBlockAdd_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@progressRewardBlock_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDividendGas_437": {
									"entryPoint": 552,
									"id": 437,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setHolderRewardCondition_425": {
									"entryPoint": 724,
									"id": 425,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setOp_413": {
									"entryPoint": 648,
									"id": 413,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardBlockAdd_449": {
									"entryPoint": 771,
									"id": 449,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e40f126b6d294d386b9318667f8073c346170d4b28771bafce6db84dba382835__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3556:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "453:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "464:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "475:4:1",
														"type": ""
													}
												],
												"src": "383:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "635:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "681:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "690:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "693:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "683:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "683:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "656:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "665:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "677:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:32:1"
															},
															"nodeType": "YulIf",
															"src": "645:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "706:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "729:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "716:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "706:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "601:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "612:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "624:6:1",
														"type": ""
													}
												],
												"src": "565:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "861:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "873:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "884:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "869:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "861:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "903:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "918:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "934:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "939:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "930:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "930:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "943:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "926:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "926:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "914:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "914:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "820:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "831:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "842:4:1",
														"type": ""
													}
												],
												"src": "750:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1045:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1091:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1100:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1103:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1093:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1093:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1093:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1066:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1075:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1062:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1087:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1058:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1058:32:1"
															},
															"nodeType": "YulIf",
															"src": "1055:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1116:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1139:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1126:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1126:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1116:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1158:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1191:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1202:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1187:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1187:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1168:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1168:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1158:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1003:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1014:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1026:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1034:6:1",
														"type": ""
													}
												],
												"src": "958:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1391:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1408:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1419:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1401:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1442:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1453:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1438:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1438:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1458:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1431:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1431:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1481:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1492:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1477:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1497:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1470:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1470:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1541:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1553:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1564:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1549:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1549:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1541:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1368:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1382:4:1",
														"type": ""
													}
												],
												"src": "1217:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1752:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1769:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1780:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1762:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1762:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1803:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1814:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1819:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1792:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1842:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1838:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1838:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f70",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1858:31:1",
																		"type": "",
																		"value": "Ownable: caller is not the op"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1831:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1831:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1899:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1911:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1922:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1907:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1899:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e40f126b6d294d386b9318667f8073c346170d4b28771bafce6db84dba382835__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1729:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1743:4:1",
														"type": ""
													}
												],
												"src": "1578:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1968:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1985:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1992:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1997:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1988:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1978:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1978:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1978:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2025:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2028:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2018:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2049:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2052:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1936:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2116:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2126:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2137:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2140:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2133:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2126:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2165:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2167:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2167:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2167:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2157:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2160:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2154:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2154:10:1"
															},
															"nodeType": "YulIf",
															"src": "2151:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2099:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2102:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2108:3:1",
														"type": ""
													}
												],
												"src": "2068:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2257:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2269:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2272:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2265:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2265:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2257:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2298:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2300:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2300:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2300:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2289:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2295:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2286:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:11:1"
															},
															"nodeType": "YulIf",
															"src": "2283:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2229:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2232:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2238:4:1",
														"type": ""
													}
												],
												"src": "2198:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2363:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2380:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2387:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2392:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2383:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2373:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2373:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2420:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2413:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2413:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2447:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2437:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2437:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2437:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2331:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2515:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2525:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2540:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2543:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2536:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2536:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2525:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2603:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2605:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2605:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2605:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2574:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2567:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2567:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2581:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2588:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2597:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2584:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2584:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2578:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2578:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2564:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2564:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2557:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:45:1"
															},
															"nodeType": "YulIf",
															"src": "2554:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2494:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2497:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2503:7:1",
														"type": ""
													}
												],
												"src": "2463:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2682:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2713:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2734:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2741:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2746:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2737:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2737:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2727:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2727:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2727:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2778:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2781:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2771:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2771:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2771:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2806:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2809:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2799:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2799:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2799:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2702:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:9:1"
															},
															"nodeType": "YulIf",
															"src": "2692:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2833:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2842:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2845:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2838:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2838:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2833:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2667:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2670:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2676:1:1",
														"type": ""
													}
												],
												"src": "2636:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2987:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2997:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3009:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3020:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3005:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3005:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2997:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3039:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3054:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3070:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3075:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3066:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3066:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3079:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3062:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3062:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3050:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3050:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3032:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3032:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3103:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3114:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3099:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3119:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3092:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3092:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2948:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2959:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2967:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2978:4:1",
														"type": ""
													}
												],
												"src": "2858:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3215:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3261:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3270:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3273:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3263:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3263:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3263:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3236:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3232:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3257:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3228:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3228:32:1"
															},
															"nodeType": "YulIf",
															"src": "3225:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3286:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3305:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3299:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3290:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3368:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3377:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3380:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3370:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3370:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3370:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3337:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3358:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3351:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3351:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3344:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3344:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3334:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3334:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3327:40:1"
															},
															"nodeType": "YulIf",
															"src": "3324:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3393:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3403:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3393:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3181:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3192:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3204:6:1",
														"type": ""
													}
												],
												"src": "3137:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3466:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3497:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3499:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3499:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3499:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3482:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3493:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3489:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3489:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3479:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3479:17:1"
															},
															"nodeType": "YulIf",
															"src": "3476:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3528:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3539:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3546:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3535:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3535:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3528:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3448:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3458:3:1",
														"type": ""
													}
												],
												"src": "3419:135:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e40f126b6d294d386b9318667f8073c346170d4b28771bafce6db84dba382835__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Ownable: caller is not the op\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100d9575f3560e01c80630affb402146100dd5780631210c4341461010f5780632a59551214610118578063621f9c0a146101215780636689567e1461012a57806370a082311461013f5780638da5cb5b146101675780639f0d7eb814610192578063a36a7526146101a5578063add0a6c6146101b8578063b367bf83146101c1578063bd876702146101ca578063c213d62d146101d3578063c7003ed0146101e6578063dd2cad60146101f9578063eb10b7411461020c578063ec1f1f6914610215575b5f80fd5b6100fc6100eb36600461073a565b600d6020525f908152604090205481565b6040519081526020015b60405180910390f35b6100fc600e5481565b6100fc60025481565b6100fc60065481565b61013d61013836600461075a565b610228565b005b6100fc61014d36600461073a565b6001600160a01b03165f9081526020819052604090205490565b60115461017a906001600160a01b031681565b6040516001600160a01b039091168152602001610106565b61017a6101a036600461075a565b610260565b61013d6101b336600461073a565b610288565b6100fc60035481565b6100fc60075481565b6100fc60055481565b61013d6101e136600461075a565b6102d4565b61013d6101f436600461075a565b610303565b6100fc610207366004610771565b610332565b6100fc60045481565b60105461017a906001600160a01b031681565b6011546001600160a01b0316331461025b5760405162461bcd60e51b81526004016102529061079b565b60405180910390fd5b600555565b600c818154811061026f575f80fd5b5f918252602090912001546001600160a01b0316905081565b6011546001600160a01b031633146102b25760405162461bcd60e51b81526004016102529061079b565b601080546001600160a01b0319166001600160a01b0392909216919091179055565b6011546001600160a01b031633146102fe5760405162461bcd60e51b81526004016102529061079b565b600455565b6011546001600160a01b0316331461032d5760405162461bcd60e51b81526004016102529061079b565b600355565b6010545f906001600160a01b0316331461038e5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f700000006044820152606401610252565b61039883836105c2565b8260065f8282546103a991906107e4565b909155505060035460025443916103bf916107e4565b11156103cc57505f6105bc565b600654600754106103de57505f6105bc565b5f6007546006546103ef91906107f7565b9050600454811080610402575060045447105b15610410575f9150506105bc565b600c545f90819081908180805a90505b6005548310801561043057508382105b156105ad5783600e5410610443575f600e555b600c600e54815481106104585761045861080a565b5f9182526020808320909101546001600160a01b031680835260099091526040909120549097509550851580159061049e5750600f546001600160a01b03888116911614155b1561056c57600f546001600160a01b03165f908152600960205260409020546008546104ca91906107f7565b6104d4878a61081e565b6104de9190610835565b9450841561056c5760405163a9059cbb60e01b81526001600160a01b038816600482015260248101869052339063a9059cbb906044016020604051808303815f875af1158015610530573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105549190610854565b508460075f82825461056691906107e4565b90915550505b5a61057790826107f7565b61058190846107e4565b92505a600e80549192505f61059583610873565b919050555081806105a590610873565b925050610420565b50504360025550909450505050505b92915050565b8160085f8282546105d391906107e4565b90915550506001600160a01b0381165f90815260096020526040812080548492906105ff9084906107e4565b90915550506001600160a01b0381165f908152600a60209081526040808320429055600b909152812080543492906106389084906107e4565b9091555050600f546001600160a01b03165f908152600d602052604081205490036106b457600c8054600f80546001600160a01b039081165f908152600d602052604081208490559154600184018555939091525f8051602061088c83398151915290910180546001600160a01b031916929091169190911790555b6001600160a01b0381165f908152600d6020526040812054900361071b57600c80546001600160a01b0383165f818152600d60205260408120839055600183018455929092525f8051602061088c8339815191520180546001600160a01b03191690911790555b5050565b80356001600160a01b0381168114610735575f80fd5b919050565b5f6020828403121561074a575f80fd5b6107538261071f565b9392505050565b5f6020828403121561076a575f80fd5b5035919050565b5f8060408385031215610782575f80fd5b823591506107926020840161071f565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b808201808211156105bc576105bc6107d0565b818103818111156105bc576105bc6107d0565b634e487b7160e01b5f52603260045260245ffd5b80820281158282048414176105bc576105bc6107d0565b5f8261084f57634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215610864575f80fd5b81518015158114610753575f80fd5b5f60018201610884576108846107d0565b506001019056fedf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7a26469706673582212206fe4464a5d3490a41b7a68c62398894ea05fd29414d3063adc9334aa02f1c06764736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFB402 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x1210C434 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x2A595512 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x621F9C0A EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x6689567E EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x9F0D7EB8 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0xA36A7526 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xADD0A6C6 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xB367BF83 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xBD876702 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xC213D62D EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xC7003ED0 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD2CAD60 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xEB10B741 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0xEC1F1F69 EQ PUSH2 0x215 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x73A JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFC PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x17A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0x17A PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x73A JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x17A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x25B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x252 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x26F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x252 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x252 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x252 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F70000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x252 JUMP JUMPDEST PUSH2 0x398 DUP4 DUP4 PUSH2 0x5C2 JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD NUMBER SWAP2 PUSH2 0x3BF SWAP2 PUSH2 0x7E4 JUMP JUMPDEST GT ISZERO PUSH2 0x3CC JUMPI POP PUSH0 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD LT PUSH2 0x3DE JUMPI POP PUSH0 PUSH2 0x5BC JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 LT DUP1 PUSH2 0x402 JUMPI POP PUSH1 0x4 SLOAD SELFBALANCE LT JUMPDEST ISZERO PUSH2 0x410 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x5BC JUMP JUMPDEST PUSH1 0xC SLOAD PUSH0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 DUP1 DUP1 GAS SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD DUP4 LT DUP1 ISZERO PUSH2 0x430 JUMPI POP DUP4 DUP3 LT JUMPDEST ISZERO PUSH2 0x5AD JUMPI DUP4 PUSH1 0xE SLOAD LT PUSH2 0x443 JUMPI PUSH0 PUSH1 0xE SSTORE JUMPDEST PUSH1 0xC PUSH1 0xE SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x458 JUMPI PUSH2 0x458 PUSH2 0x80A JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP8 POP SWAP6 POP DUP6 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x49E JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x56C JUMPI PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x8 SLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x4D4 DUP8 DUP11 PUSH2 0x81E JUMP JUMPDEST PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x835 JUMP JUMPDEST SWAP5 POP DUP5 ISZERO PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x854 JUMP JUMPDEST POP DUP5 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST GAS PUSH2 0x577 SWAP1 DUP3 PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x581 SWAP1 DUP5 PUSH2 0x7E4 JUMP JUMPDEST SWAP3 POP GAS PUSH1 0xE DUP1 SLOAD SWAP2 SWAP3 POP PUSH0 PUSH2 0x595 DUP4 PUSH2 0x873 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 DUP1 PUSH2 0x5A5 SWAP1 PUSH2 0x873 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x420 JUMP JUMPDEST POP POP NUMBER PUSH1 0x2 SSTORE POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x5FF SWAP1 DUP5 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x638 SWAP1 DUP5 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x6B4 JUMPI PUSH1 0xC DUP1 SLOAD PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP1 SSTORE SWAP2 SLOAD PUSH1 0x1 DUP5 ADD DUP6 SSTORE SWAP4 SWAP1 SWAP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x88C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x71B JUMPI PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x1 DUP4 ADD DUP5 SSTORE SWAP3 SWAP1 SWAP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x88C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x735 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP3 PUSH2 0x71F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x782 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x792 PUSH1 0x20 DUP5 ADD PUSH2 0x71F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0x7D0 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0x7D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0x7D0 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x84F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x864 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x753 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x884 JUMPI PUSH2 0x884 PUSH2 0x7D0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0xDF PUSH10 0x66C971051C3D54EC5916 0x26 MOD MSTORE8 EQ SWAP4 0xA5 EQ DIV LOG0 MUL DUP5 0x2F JUMP STOP SWAP14 PUSH31 0x5CF4A8C7A26469706673582212206FE4464A5D3490A41B7A68C62398894EA0 PUSH0 0xD2 SWAP5 EQ 0xD3 MOD GASPRICE 0xDC SWAP4 CALLVALUE 0xAA MUL CALL 0xC0 PUSH8 0x64736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "263:4706:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:48;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:1;;;517:2;502:18;867:48:0;;;;;;;;922:29;;;;;;408:34;;;;;;573:22;;;;;;4737:104;;;;;;:::i;:::-;;:::i;:::-;;4394:110;;;;;;:::i;:::-;-1:-1:-1;;;;;4478:18:0;4451:7;4478:18;;;;;;;;;;;;4394:110;1029:20;;;;;-1:-1:-1;;;;;1029:20:0;;;;;;-1:-1:-1;;;;;914:32:1;;;896:51;;884:2;869:18;1029:20:0;750:203:1;834:26:0;;;;;;:::i;:::-;;:::i;4512:70::-;;;;;;:::i;:::-;;:::i;449:37::-;;;;;;602:24;;;;;;540:26;;;;;;4596:118;;;;;;:::i;:::-;;:::i;4849:106::-;;;;;;:::i;:::-;;:::i;1807:1974::-;;;;;;:::i;:::-;;:::i;496:36::-;;;;;;1005:17;;;;;-1:-1:-1;;;;;1005:17:0;;;4737:104;1209:5;;-1:-1:-1;;;;;1209:5:0;1218:10;1209:19;1201:64;;;;-1:-1:-1;;;1201:64:0;;;;;;;:::i;:::-;;;;;;;;;4815:11:::1;:18:::0;4737:104::o;834:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;834:26:0;;-1:-1:-1;834:26:0;:::o;4512:70::-;1209:5;;-1:-1:-1;;;;;1209:5:0;1218:10;1209:19;1201:64;;;;-1:-1:-1;;;1201:64:0;;;;;;;:::i;:::-;4568:2:::1;:6:::0;;-1:-1:-1;;;;;;4568:6:0::1;-1:-1:-1::0;;;;;4568:6:0;;;::::1;::::0;;;::::1;::::0;;4512:70::o;4596:118::-;1209:5;;-1:-1:-1;;;;;1209:5:0;1218:10;1209:19;1201:64;;;;-1:-1:-1;;;1201:64:0;;;;;;;:::i;:::-;4676:21:::1;:30:::0;4596:118::o;4849:106::-;1209:5;;-1:-1:-1;;;;;1209:5:0;1218:10;1209:19;1201:64;;;;-1:-1:-1;;;1201:64:0;;;;;;;:::i;:::-;4919:22:::1;:28:::0;4849:106::o;1807:1974::-;1093:2;;1888:7;;-1:-1:-1;;;;;1093:2:0;1099:10;1093:16;1085:58;;;;-1:-1:-1;;;1085:58:0;;1780:2:1;1085:58:0;;;1762:21:1;1819:2;1799:18;;;1792:30;1858:31;1838:18;;;1831:59;1907:18;;1085:58:0;1578:353:1;1085:58:0;1918:20:::1;1925:7;1933:4;1918:6;:20::i;:::-;1960:7;1949;;:18;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2014:22:0::1;::::0;1992:19:::1;::::0;2039:12:::1;::::0;1992:44:::1;::::0;::::1;:::i;:::-;:59;1988:100;;;-1:-1:-1::0;2075:1:0::1;2068:8;;1988:100;2236:7;;2223:9;;:20;2219:58;;-1:-1:-1::0;2264:1:0::1;2257:8;;2219:58;2287:15;2315:9;;2305:7;;:19;;;;:::i;:::-;2287:37;;2349:21;;2339:7;:31;:80;;;;2398:21;;2374;:45;2339:80;2335:121;;;2443:1;2436:8;;;;;2335:121;2586:9;:16:::0;2480::::1;::::0;;;;;;;;2696:9:::1;2678:27;;2726:977;2743:11;;2733:7;:21;:51;;;;;2771:13;2758:10;:26;2733:51;2726:977;;;2823:13;2805:14;;:31;2801:90;;2874:1;2857:14;:18:::0;2801:90:::1;2930:9;2940:14;;2930:25;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;2930:25:0::1;2982:21:::0;;;:11:::1;:21:::0;;;;;;;;2930:25;;-1:-1:-1;2982:21:0;-1:-1:-1;3035:12:0;;;;;:39:::1;;-1:-1:-1::0;3063:11:0::1;::::0;-1:-1:-1;;;;;3051:23:0;;::::1;3063:11:::0;::::1;3051:23;;3035:39;3032:478;;;3152:11;::::0;-1:-1:-1;;;;;3152:11:0::1;3140:24;::::0;;;:11:::1;:24;::::0;;;;;3126:13:::1;::::0;:38:::1;::::0;3140:24;3126:38:::1;:::i;:::-;3102:19;3112:9:::0;3102:7;:19:::1;:::i;:::-;3101:64;;;;:::i;:::-;3092:73:::0;-1:-1:-1;3188:10:0;;3184:311:::1;;3299:44;::::0;-1:-1:-1;;;3299:44:0;;-1:-1:-1;;;;;3050:32:1;;3299:44:0::1;::::0;::::1;3032:51:1::0;3099:18;;;3092:34;;;3306:10:0::1;::::0;3299:27:::1;::::0;3005:18:1;;3299:44:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3422:6;3409:9;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3184:311:0::1;3589:9;3579:19;::::0;:7;:19:::1;:::i;:::-;3568:31;::::0;:7;:31:::1;:::i;:::-;3558:41;;3624:9;3648:14;:16:::0;;3614:19;;-1:-1:-1;3648:14:0::1;:16;::::0;::::1;:::i;:::-;;;;;;3679:12;;;;;:::i;:::-;;;;2726:977;;;-1:-1:-1::0;;3737:12:0::1;3715:19;:34:::0;-1:-1:-1;3767:6:0;;-1:-1:-1;;;;;1154:1:0::1;1807:1974:::0;;;;:::o;3789:593::-;3913:6;3896:13;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;3928:19:0;;;;;;:11;:19;;;;;:29;;3951:6;;3928:19;:29;;3951:6;;3928:29;:::i;:::-;;;;-1:-1:-1;;;;;;;3966:19:0;;;;;;:11;:19;;;;;;;;3988:15;3966:37;;4013:8;:16;;;;;:29;;4033:9;;3966:19;4013:29;;4033:9;;4013:29;:::i;:::-;;;;-1:-1:-1;;4085:11:0;;-1:-1:-1;;;;;4085:11:0;4071:26;;;;:13;:26;;;;;;4066:31;;4062:147;;4141:9;:16;;4126:11;;;-1:-1:-1;;;;;4126:11:0;;;4112:26;;;;:13;:26;;;;;:45;;;4185:11;;4126;4170:27;;;;;;;;-1:-1:-1;;;;;;;;;;;4170:27:0;;;;;-1:-1:-1;;;;;;4170:27:0;4185:11;;;;4170:27;;;;;;4062:147;-1:-1:-1;;;;;4234:21:0;;;;;;:13;:21;;;;;;4229:26;;4225:132;;4294:9;:16;;-1:-1:-1;;;;;4270:21:0;;;;;;:13;:21;;;;;:40;;;4323:22;;;;;;;;;-1:-1:-1;;;;;;;;;;;4323:22:0;;;-1:-1:-1;;;;;;4323:22:0;;;;;;4225:132;3789:593;;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;565:180::-;624:6;677:2;665:9;656:7;652:23;648:32;645:52;;;693:1;690;683:12;645:52;-1:-1:-1;716:23:1;;565:180;-1:-1:-1;565:180:1:o;958:254::-;1026:6;1034;1087:2;1075:9;1066:7;1062:23;1058:32;1055:52;;;1103:1;1100;1093:12;1055:52;1139:9;1126:23;1116:33;;1168:38;1202:2;1191:9;1187:18;1168:38;:::i;:::-;1158:48;;958:254;;;;;:::o;1217:356::-;1419:2;1401:21;;;1438:18;;;1431:30;1497:34;1492:2;1477:18;;1470:62;1564:2;1549:18;;1217:356::o;1936:127::-;1997:10;1992:3;1988:20;1985:1;1978:31;2028:4;2025:1;2018:15;2052:4;2049:1;2042:15;2068:125;2133:9;;;2154:10;;;2151:36;;;2167:18;;:::i;2198:128::-;2265:9;;;2286:11;;;2283:37;;;2300:18;;:::i;2331:127::-;2392:10;2387:3;2383:20;2380:1;2373:31;2423:4;2420:1;2413:15;2447:4;2444:1;2437:15;2463:168;2536:9;;;2567;;2584:15;;;2578:22;;2564:37;2554:71;;2605:18;;:::i;2636:217::-;2676:1;2702;2692:132;;2746:10;2741:3;2737:20;2734:1;2727:31;2781:4;2778:1;2771:15;2809:4;2806:1;2799:15;2692:132;-1:-1:-1;2838:9:1;;2636:217::o;3137:277::-;3204:6;3257:2;3245:9;3236:7;3232:23;3228:32;3225:52;;;3273:1;3270;3263:12;3225:52;3305:9;3299:16;3358:5;3351:13;3344:21;3337:5;3334:32;3324:60;;3380:1;3377;3370:12;3419:135;3458:3;3479:17;;;3476:43;;3499:18;;:::i;:::-;-1:-1:-1;3546:1:1;3535:13;;3419:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "454600",
								"executionCost": "135339",
								"totalCost": "589939"
							},
							"external": {
								"balanceOf(address)": "2614",
								"currentLpIndex()": "2283",
								"dividendGas()": "2503",
								"holderRewardCondition()": "2591",
								"lpBonus()": "2327",
								"lpBonusEd()": "2481",
								"lpHolderIndex(address)": "2483",
								"lpHolders(uint256)": "4743",
								"op()": "2666",
								"owner()": "2446",
								"processReward(uint256,address)": "infinite",
								"progressRewardBlock()": "2305",
								"progressRewardBlockAdd()": "2459",
								"setDividendGas(uint256)": "24528",
								"setHolderRewardCondition(uint256)": "24704",
								"setOp(address)": "26863",
								"setRewardBlockAdd(uint256)": "24726"
							},
							"internal": {
								"ariver(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 263,
									"end": 4969,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 263,
									"end": 4969,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 263,
									"end": 4969,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1293,
									"end": 1797,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1293,
									"end": 1797,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1293,
									"end": 1797,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1293,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1293,
									"end": 1797,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1293,
									"end": 1797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1293,
									"end": 1797,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1293,
									"end": 1797,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1293,
									"end": 1797,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1293,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1362,
									"end": 1367,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1370,
									"end": 1380,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1362,
									"end": 1367,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1447,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1434,
									"end": 1451,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1434,
									"end": 1451,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1434,
									"end": 1451,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1490,
									"name": "PUSH",
									"source": 0,
									"value": "C8"
								},
								{
									"begin": 1462,
									"end": 1484,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1462,
									"end": 1490,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1537,
									"name": "PUSH",
									"source": 0,
									"value": "2386F26FC10000"
								},
								{
									"begin": 1501,
									"end": 1522,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 0,
									"value": "7A120"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 1558,
									"end": 1578,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1596,
									"end": 1607,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 1596,
									"end": 1661,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1596,
									"end": 1661,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1596,
									"end": 1661,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1596,
									"end": 1661,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1596,
									"end": 1661,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 1660,
									"name": "PUSH",
									"source": 0,
									"value": "DEAD"
								},
								{
									"begin": 1596,
									"end": 1661,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1596,
									"end": 1661,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1596,
									"end": 1661,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1596,
									"end": 1661,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1596,
									"end": 1661,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1596,
									"end": 1661,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1714,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1714,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1714,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1714,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1692,
									"end": 1714,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1714,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1714,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1714,
									"name": "PUSH",
									"source": 0,
									"value": "44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83"
								},
								{
									"begin": 1692,
									"end": 1724,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1724,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1724,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1735,
									"end": 1744,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1735,
									"end": 1748,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1735,
									"end": 1748,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1735,
									"end": 1748,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1759,
									"end": 1766,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 263,
									"end": 4969,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 263,
									"end": 4969,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 263,
									"end": 4969,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 263,
									"end": 4969,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 263,
									"end": 4969,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 263,
									"end": 4969,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 263,
									"end": 4969,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206fe4464a5d3490a41b7a68c62398894ea05fd29414d3063adc9334aa02f1c06764736f6c63430008140033",
									".code": [
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "AFFB402"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "1210C434"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "2A595512"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "621F9C0A"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "6689567E"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "9F0D7EB8"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "A36A7526"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "ADD0A6C6"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "B367BF83"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "BD876702"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "C213D62D"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "C7003ED0"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "DD2CAD60"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "EB10B741"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "EC1F1F69"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 4969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 867,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 867,
											"end": 915,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 922,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 922,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 922,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 922,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 922,
											"end": 951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 922,
											"end": 951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 922,
											"end": 951,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 408,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 408,
											"end": 442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 408,
											"end": 442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 442,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 595,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 573,
											"end": 595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 573,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 573,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 573,
											"end": 595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 573,
											"end": 595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 573,
											"end": 595,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4737,
											"end": 4841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4737,
											"end": 4841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4504,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4394,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4394,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4394,
											"end": 4504,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4394,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4394,
											"end": 4504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4504,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4394,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4451,
											"end": 4458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4504,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 914,
											"end": 946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 896,
											"end": 947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 884,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 869,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 750,
											"end": 953,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 834,
											"end": 860,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 834,
											"end": 860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 834,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 834,
											"end": 860,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 834,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 834,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 834,
											"end": 860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 834,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4582,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4512,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4512,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4512,
											"end": 4582,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4512,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4512,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4582,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4512,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4512,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 449,
											"end": 486,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 449,
											"end": 486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 449,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 449,
											"end": 486,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 449,
											"end": 486,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 449,
											"end": 486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 449,
											"end": 486,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 626,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 602,
											"end": 626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 602,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 602,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 602,
											"end": 626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 602,
											"end": 626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 602,
											"end": 626,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 566,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 540,
											"end": 566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 540,
											"end": 566,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 540,
											"end": 566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 540,
											"end": 566,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4596,
											"end": 4714,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4596,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4596,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4596,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4596,
											"end": 4714,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4596,
											"end": 4714,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4596,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4596,
											"end": 4714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4596,
											"end": 4714,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4596,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4596,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4596,
											"end": 4714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4955,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4849,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4849,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4849,
											"end": 4955,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4955,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4849,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4849,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4955,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4849,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4849,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1807,
											"end": 3781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1807,
											"end": 3781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 496,
											"end": 532,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 496,
											"end": 532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 496,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 496,
											"end": 532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 496,
											"end": 532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 496,
											"end": 532,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1022,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1005,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1005,
											"end": 1022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1005,
											"end": 1022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1005,
											"end": 1022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1022,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4737,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1228,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1201,
											"end": 1265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4815,
											"end": 4833,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 834,
											"end": 860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 834,
											"end": 860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 834,
											"end": 860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 834,
											"end": 860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 834,
											"end": 860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 834,
											"end": 860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 834,
											"end": 860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4582,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4512,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1228,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1201,
											"end": 1265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4568,
											"end": 4574,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4574,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4574,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4596,
											"end": 4714,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4596,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1228,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1201,
											"end": 1265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4676,
											"end": 4697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4676,
											"end": 4706,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4596,
											"end": 4714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4955,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4849,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1228,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1209,
											"end": 1228,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1201,
											"end": 1265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1201,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4919,
											"end": 4947,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 4955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1095,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1093,
											"end": 1095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1093,
											"end": 1095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1109,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1109,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1085,
											"end": 1143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1085,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1085,
											"end": 1143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1821,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F70000000"
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1578,
											"end": 1931,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1085,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1925,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1933,
											"end": 1937,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1918,
											"end": 1938,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1918,
											"end": 1938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1967,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1949,
											"end": 1956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1967,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1967,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1967,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1949,
											"end": 1967,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1967,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1949,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1949,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1967,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2014,
											"end": 2036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2014,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1992,
											"end": 2011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2051,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1992,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1992,
											"end": 2036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1992,
											"end": 2036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2051,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1988,
											"end": 2088,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1988,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1988,
											"end": 2088,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2068,
											"end": 2076,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1988,
											"end": 2088,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1988,
											"end": 2088,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2236,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2223,
											"end": 2232,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2243,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2219,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2219,
											"end": 2277,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2257,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2219,
											"end": 2277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2219,
											"end": 2277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2315,
											"end": 2324,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2305,
											"end": 2312,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2305,
											"end": 2324,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2305,
											"end": 2324,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2305,
											"end": 2324,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2305,
											"end": 2324,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2324,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2349,
											"end": 2370,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2346,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2370,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2419,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2339,
											"end": 2419,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2419,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2398,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2398,
											"end": 2419,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2419,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2339,
											"end": 2419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2456,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2335,
											"end": 2456,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2444,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2444,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2444,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2436,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2436,
											"end": 2444,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2335,
											"end": 2456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 2586,
											"end": 2602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2705,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 2705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 2705,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 3703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2726,
											"end": 3703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2743,
											"end": 2754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2743,
											"end": 2754,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2733,
											"end": 2740,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2733,
											"end": 2754,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2733,
											"end": 2784,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2733,
											"end": 2784,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2733,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2733,
											"end": 2784,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2733,
											"end": 2784,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2771,
											"end": 2784,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2768,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2784,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2733,
											"end": 2784,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2733,
											"end": 2784,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 3703,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2726,
											"end": 3703,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2836,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 2805,
											"end": 2819,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2836,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2801,
											"end": 2891,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 2875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 2857,
											"end": 2875,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2801,
											"end": 2891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 2940,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 2940,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2930,
											"end": 2955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 2955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 2993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2955,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3035,
											"end": 3047,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3035,
											"end": 3047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3035,
											"end": 3047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3035,
											"end": 3047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3035,
											"end": 3047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3035,
											"end": 3074,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3035,
											"end": 3074,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3063,
											"end": 3074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 3063,
											"end": 3074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3074,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3074,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3074,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3074,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3035,
											"end": 3074,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3035,
											"end": 3074,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3510,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3032,
											"end": 3510,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3152,
											"end": 3163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3152,
											"end": 3163,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3140,
											"end": 3164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3126,
											"end": 3164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3126,
											"end": 3164,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3164,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3126,
											"end": 3164,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3112,
											"end": 3121,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3109,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3102,
											"end": 3121,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3102,
											"end": 3121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3101,
											"end": 3165,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3101,
											"end": 3165,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3101,
											"end": 3165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3165,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3188,
											"end": 3198,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3184,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3184,
											"end": 3495,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3050,
											"end": 3082,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3126,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3316,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3299,
											"end": 3326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3299,
											"end": 3343,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3343,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3428,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3409,
											"end": 3418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3409,
											"end": 3418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3428,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3409,
											"end": 3428,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3409,
											"end": 3428,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3409,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3409,
											"end": 3428,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3409,
											"end": 3428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3409,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3409,
											"end": 3428,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3409,
											"end": 3428,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3409,
											"end": 3428,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3409,
											"end": 3428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3409,
											"end": 3428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3409,
											"end": 3428,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3184,
											"end": 3495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3184,
											"end": 3495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3598,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3579,
											"end": 3598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3579,
											"end": 3598,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3579,
											"end": 3598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3568,
											"end": 3599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3568,
											"end": 3599,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 3599,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3568,
											"end": 3599,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3599,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3599,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3633,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 3648,
											"end": 3664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3648,
											"end": 3662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3648,
											"end": 3664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3648,
											"end": 3664,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3648,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3664,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3664,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 3691,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 3691,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 3691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3679,
											"end": 3691,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 3691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3679,
											"end": 3691,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 3691,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3679,
											"end": 3691,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 3691,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 3691,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 3691,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2726,
											"end": 3703,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 3703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2726,
											"end": 3703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3737,
											"end": 3749,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 3715,
											"end": 3734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3715,
											"end": 3749,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3767,
											"end": 3773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3767,
											"end": 3773,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1154,
											"end": 1155,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1154,
											"end": 1155,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 3781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 3781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 4382,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3789,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3913,
											"end": 3919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3896,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3896,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3919,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3957,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3957,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3957,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3928,
											"end": 3957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3957,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3928,
											"end": 3957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3957,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3928,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 3957,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3977,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4003,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 4003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 4003,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4021,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 4013,
											"end": 4029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4029,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4013,
											"end": 4042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4085,
											"end": 4096,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 4085,
											"end": 4096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4085,
											"end": 4096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4084,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 4071,
											"end": 4097,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4097,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4097,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4097,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4062,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4062,
											"end": 4209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4141,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 4141,
											"end": 4157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4141,
											"end": 4157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4137,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 4126,
											"end": 4137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4126,
											"end": 4137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 4112,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4112,
											"end": 4138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4138,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4157,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4157,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4137,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "1EDF167807421166F29A87FC522B46543164915401142AF67F87687DBC8AE574"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4062,
											"end": 4209,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4062,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4229,
											"end": 4255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4229,
											"end": 4255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4225,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4225,
											"end": 4357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4303,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 4294,
											"end": 4310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4283,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4310,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4310,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "1EDF167807421166F29A87FC522B46543164915401142AF67F87687DBC8AE574"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4225,
											"end": 4357,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4225,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 4382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 4382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 4382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 565,
											"end": 745,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 565,
											"end": 745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 624,
											"end": 630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 663,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 652,
											"end": 675,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 648,
											"end": 680,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 645,
											"end": 697,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 645,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 645,
											"end": 697,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 693,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 695,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 645,
											"end": 697,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 645,
											"end": 697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 716,
											"end": 739,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 716,
											"end": 739,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 565,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 565,
											"end": 745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1212,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 958,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1085,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1090,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1107,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1055,
											"end": 1107,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1105,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1055,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1149,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1202,
											"end": 1204,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1168,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1206,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1168,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1212,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1212,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1573,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1217,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1401,
											"end": 1422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1461,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1531,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1492,
											"end": 1494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1566,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 2063,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1936,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2007,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1992,
											"end": 1995,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1988,
											"end": 2008,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 1986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2032,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2018,
											"end": 2033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2049,
											"end": 2050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2193,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2068,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2142,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2187,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2151,
											"end": 2187,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2167,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2167,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2326,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2198,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2320,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2283,
											"end": 2320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2300,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2300,
											"end": 2318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2458,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2331,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2402,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2383,
											"end": 2403,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2420,
											"end": 2421,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2413,
											"end": 2428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2451,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2444,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2452,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2631,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2463,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2545,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2545,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2576,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2601,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2554,
											"end": 2625,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2605,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2605,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2853,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2636,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2692,
											"end": 2824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2756,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2741,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2737,
											"end": 2757,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2785,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2771,
											"end": 2786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2814,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2824,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2692,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2838,
											"end": 2847,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3414,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3137,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3236,
											"end": 3243,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3255,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3260,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3271,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3305,
											"end": 3314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3365,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3366,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3324,
											"end": 3384,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3377,
											"end": 3378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3382,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3419,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3476,
											"end": 3519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3499,
											"end": 3517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3546,
											"end": 3547,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3535,
											"end": 3548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"1EDF167807421166F29A87FC522B46543164915401142AF67F87687DBC8AE574": "df6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7"
									}
								}
							},
							"sourceList": [
								"contracts/DividendPayingERC20Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"currentLpIndex()": "1210c434",
							"dividendGas()": "bd876702",
							"holderRewardCondition()": "eb10b741",
							"lpBonus()": "621f9c0a",
							"lpBonusEd()": "b367bf83",
							"lpHolderIndex(address)": "0affb402",
							"lpHolders(uint256)": "9f0d7eb8",
							"op()": "ec1f1f69",
							"owner()": "8da5cb5b",
							"processReward(uint256,address)": "dd2cad60",
							"progressRewardBlock()": "2a595512",
							"progressRewardBlockAdd()": "add0a6c6",
							"setDividendGas(uint256)": "6689567e",
							"setHolderRewardCondition(uint256)": "c213d62d",
							"setOp(address)": "a36a7526",
							"setRewardBlockAdd(uint256)": "c7003ed0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentLpIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dividendGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holderRewardCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpBonusEd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lpHolderIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpHolders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"op\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tfmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"processReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"progressRewardBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"progressRewardBlockAdd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vgas\",\"type\":\"uint256\"}],\"name\":\"setDividendGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setHolderRewardCondition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"d\",\"type\":\"address\"}],\"name\":\"setOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setRewardBlockAdd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DividendPayingERC20Token.sol\":\"DividendPayingERC20Token\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/DividendPayingERC20Token.sol\":{\"keccak256\":\"0x736cf99e1fd7006f3f362030f429996596eb1e14ca5b5d1f0f20ff1751cffa44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a479fbcc07a3abaccea975bf81f11de8cf116317d0da9ce9e1b57df17c8047cb\",\"dweb:/ipfs/QmNwFCnUV5nyHZhGVYEutHWdidyCyF21WxN12eL7PMuCDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 17,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 19,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "progressRewardBlock",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 21,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "progressRewardBlockAdd",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "holderRewardCondition",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "dividendGas",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "lpBonus",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 29,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "lpBonusEd",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 31,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "totalLpSupply",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 35,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "_LpBalances",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 39,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "_lastLpTime",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 43,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "_lastEth",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 46,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "lpHolders",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 50,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "lpHolderIndex",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 52,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "currentLpIndex",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 54,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "deadAddress",
								"offset": 0,
								"slot": "15",
								"type": "t_address"
							},
							{
								"astId": 56,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "op",
								"offset": 0,
								"slot": "16",
								"type": "t_address"
							},
							{
								"astId": 58,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "owner",
								"offset": 0,
								"slot": "17",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DividendPayingERC20Token.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/DividendPayingERC20Token.sol\":{\"keccak256\":\"0x736cf99e1fd7006f3f362030f429996596eb1e14ca5b5d1f0f20ff1751cffa44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a479fbcc07a3abaccea975bf81f11de8cf116317d0da9ce9e1b57df17c8047cb\",\"dweb:/ipfs/QmNwFCnUV5nyHZhGVYEutHWdidyCyF21WxN12eL7PMuCDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/DividendPayingERC20Token.sol": {
				"ast": {
					"absolutePath": "contracts/DividendPayingERC20Token.sol",
					"exportedSymbols": {
						"DividendPayingERC20Token": [
							450
						],
						"IERC20": [
							11
						]
					},
					"id": 451,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC20",
							"nameLocation": "140:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a9059cbb",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "166:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "183:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "175:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "202:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "194:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "174:35:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "237:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "237:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:6:0"
									},
									"scope": 11,
									"src": "157:86:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 451,
							"src": "130:124:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DividendPayingERC20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 450,
							"linearizedBaseContracts": [
								450
							],
							"name": "DividendPayingERC20Token",
							"nameLocation": "272:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "347:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "311:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "319:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "311:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "330:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "379:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "363:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 16,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "363:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "2a595512",
									"id": 19,
									"mutability": "mutable",
									"name": "progressRewardBlock",
									"nameLocation": "423:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "408:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "add0a6c6",
									"id": 21,
									"mutability": "mutable",
									"name": "progressRewardBlockAdd",
									"nameLocation": "464:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "449:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "449:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eb10b741",
									"id": 23,
									"mutability": "mutable",
									"name": "holderRewardCondition",
									"nameLocation": "511:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "496:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "496:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bd876702",
									"id": 25,
									"mutability": "mutable",
									"name": "dividendGas",
									"nameLocation": "555:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "540:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "540:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "621f9c0a",
									"id": 27,
									"mutability": "mutable",
									"name": "lpBonus",
									"nameLocation": "588:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "573:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "573:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b367bf83",
									"id": 29,
									"mutability": "mutable",
									"name": "lpBonusEd",
									"nameLocation": "617:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "602:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "602:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "totalLpSupply",
									"nameLocation": "646:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "638:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 30,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "638:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_LpBalances",
									"nameLocation": "703:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "666:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 34,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 32,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "674:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "666:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 33,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "686:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "_lastLpTime",
									"nameLocation": "758:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "721:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 38,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 36,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "729:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "721:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 37,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "741:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "_lastEth",
									"nameLocation": "813:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "776:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 42,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "784:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "776:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 41,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "796:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "9f0d7eb8",
									"id": 46,
									"mutability": "mutable",
									"name": "lpHolders",
									"nameLocation": "851:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "834:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 44,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "834:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 45,
										"nodeType": "ArrayTypeName",
										"src": "834:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0affb402",
									"id": 50,
									"mutability": "mutable",
									"name": "lpHolderIndex",
									"nameLocation": "902:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "867:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 49,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 47,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "875:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "867:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 48,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "886:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1210c434",
									"id": 52,
									"mutability": "mutable",
									"name": "currentLpIndex",
									"nameLocation": "937:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "922:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "922:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "deadAddress",
									"nameLocation": "987:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "970:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "970:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ec1f1f69",
									"id": 56,
									"mutability": "mutable",
									"name": "op",
									"nameLocation": "1020:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "1005:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 55,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1005:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 58,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "1044:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "1029:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 57,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1029:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1074:89:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 61,
																"name": "op",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "1093:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 62,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1099:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1103:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1099:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1093:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f70",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1111:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e40f126b6d294d386b9318667f8073c346170d4b28771bafce6db84dba382835",
																"typeString": "literal_string \"Ownable: caller is not the op\""
															},
															"value": "Ownable: caller is not the op"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e40f126b6d294d386b9318667f8073c346170d4b28771bafce6db84dba382835",
																"typeString": "literal_string \"Ownable: caller is not the op\""
															}
														],
														"id": 60,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1085:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1085:58:0"
											},
											{
												"id": 68,
												"nodeType": "PlaceholderStatement",
												"src": "1154:1:0"
											}
										]
									},
									"id": 70,
									"name": "onlyOp",
									"nameLocation": "1065:6:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1071:2:0"
									},
									"src": "1056:107:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "1190:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 73,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "1209:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 74,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1218:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1222:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1218:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1209:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1230:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 72,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1201:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1201:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1201:64:0"
											},
											{
												"id": 80,
												"nodeType": "PlaceholderStatement",
												"src": "1276:1:0"
											}
										]
									},
									"id": 82,
									"name": "onlyOwner",
									"nameLocation": "1178:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1187:2:0"
									},
									"src": "1169:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "1307:490:0",
										"statements": [
											{
												"expression": {
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "1362:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 86,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1370:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1374:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1370:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1362:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1362:18:0"
											},
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 90,
														"name": "totalLpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1434:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1450:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1434:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1434:17:0"
											},
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "progressRewardBlockAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1462:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "1462:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "1462:28:0"
											},
											{
												"expression": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 98,
														"name": "holderRewardCondition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1501:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1525:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000_by_1",
																"typeString": "int_const 10000000000000000"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1529:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3136",
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1535:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																},
																"value": "16"
															},
															"src": "1529:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000_by_1",
																"typeString": "int_const 10000000000000000"
															}
														},
														"src": "1525:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														}
													},
													"src": "1501:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "1501:36:0"
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 106,
														"name": "dividendGas",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1558:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "353030303030",
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1572:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500000_by_1",
															"typeString": "int_const 500000"
														},
														"value": "500000"
													},
													"src": "1558:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1558:20:0"
											},
											{
												"expression": {
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 110,
														"name": "deadAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1596:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1618:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x000000000000000000000000000000000000dEaD"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1610:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 111,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1610:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1610:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1596:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "1596:65:0"
											},
											{
												"expression": {
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 117,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1692:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 119,
														"indexExpression": {
															"id": 118,
															"name": "deadAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "1702:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1692:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1717:7:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1692:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "1692:32:0"
											},
											{
												"expression": {
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 123,
														"name": "lpBonusEd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1735:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1747:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1735:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "1735:13:0"
											},
											{
												"expression": {
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 127,
														"name": "lpBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1759:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1769:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1759:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "1759:11:0"
											}
										]
									},
									"id": 132,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:2:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1307:0:0"
									},
									"scope": 450,
									"src": "1293:504:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "1897:1884:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 144,
															"name": "tfmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "1925:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 145,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1933:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 143,
														"name": "ariver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1918:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1918:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1918:20:0"
											},
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 148,
														"name": "lpBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1949:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 149,
														"name": "tfmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "1960:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1949:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "1949:18:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 152,
															"name": "progressRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "1992:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 153,
															"name": "progressRewardBlockAdd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "2014:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1992:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 155,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2039:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2045:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2039:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1992:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 161,
												"nodeType": "IfStatement",
												"src": "1988:100:0",
												"trueBody": {
													"id": 160,
													"nodeType": "Block",
													"src": "2053:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2075:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 142,
															"id": 159,
															"nodeType": "Return",
															"src": "2068:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 162,
														"name": "lpBonusEd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "2223:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 163,
														"name": "lpBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2236:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2223:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 168,
												"nodeType": "IfStatement",
												"src": "2219:58:0",
												"trueBody": {
													"id": 167,
													"nodeType": "Block",
													"src": "2244:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2264:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 142,
															"id": 166,
															"nodeType": "Return",
															"src": "2257:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "2295:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2287:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 169,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2287:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 174,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 171,
														"name": "lpBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2305:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 172,
														"name": "lpBonusEd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "2315:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2305:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2287:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 175,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "2339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 176,
															"name": "holderRewardCondition",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2349:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2339:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 180,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_DividendPayingERC20Token_$450",
																			"typeString": "contract DividendPayingERC20Token"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_DividendPayingERC20Token_$450",
																			"typeString": "contract DividendPayingERC20Token"
																		}
																	],
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2374:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 178,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2374:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2374:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2388:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2374:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 183,
															"name": "holderRewardCondition",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2398:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2374:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2339:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 189,
												"nodeType": "IfStatement",
												"src": "2335:121:0",
												"trueBody": {
													"id": 188,
													"nodeType": "Block",
													"src": "2421:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2443:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 142,
															"id": 187,
															"nodeType": "Return",
															"src": "2436:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													191
												],
												"declarations": [
													{
														"constant": false,
														"id": 191,
														"mutability": "mutable",
														"name": "lpHolder",
														"nameLocation": "2488:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2480:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 190,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2480:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 192,
												"nodeType": "VariableDeclarationStatement",
												"src": "2480:16:0"
											},
											{
												"assignments": [
													194
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "lpBalance",
														"nameLocation": "2515:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2507:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 193,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 195,
												"nodeType": "VariableDeclarationStatement",
												"src": "2507:17:0"
											},
											{
												"assignments": [
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2543:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2535:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2535:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 198,
												"nodeType": "VariableDeclarationStatement",
												"src": "2535:14:0"
											},
											{
												"assignments": [
													200
												],
												"declarations": [
													{
														"constant": false,
														"id": 200,
														"mutability": "mutable",
														"name": "lpHolderCount",
														"nameLocation": "2570:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2562:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2562:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"expression": {
														"id": 201,
														"name": "lpHolders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "2586:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2596:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2586:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2562:40:0"
											},
											{
												"assignments": [
													205
												],
												"declarations": [
													{
														"constant": false,
														"id": 205,
														"mutability": "mutable",
														"name": "gasUsed",
														"nameLocation": "2623:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2615:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 204,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2615:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 207,
												"initialValue": {
													"hexValue": "30",
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2633:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2615:19:0"
											},
											{
												"assignments": [
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "iterations",
														"nameLocation": "2653:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2645:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"hexValue": "30",
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2666:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2645:22:0"
											},
											{
												"assignments": [
													213
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "gasLeft",
														"nameLocation": "2686:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "2678:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 212,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 216,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 214,
														"name": "gasleft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967289,
														"src": "2696:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2696:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:27:0"
											},
											{
												"body": {
													"id": 307,
													"nodeType": "Block",
													"src": "2786:917:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 224,
																	"name": "currentLpIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "2805:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 225,
																	"name": "lpHolderCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "2823:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2805:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 232,
															"nodeType": "IfStatement",
															"src": "2801:90:0",
															"trueBody": {
																"id": 231,
																"nodeType": "Block",
																"src": "2838:53:0",
																"statements": [
																	{
																		"expression": {
																			"id": 229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 227,
																				"name": "currentLpIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "2857:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2874:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2857:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 230,
																		"nodeType": "ExpressionStatement",
																		"src": "2857:18:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 233,
																	"name": "lpHolder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "2919:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 234,
																		"name": "lpHolders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "2930:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 236,
																	"indexExpression": {
																		"id": 235,
																		"name": "currentLpIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "2940:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2930:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2919:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 238,
															"nodeType": "ExpressionStatement",
															"src": "2919:36:0"
														},
														{
															"expression": {
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 239,
																	"name": "lpBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "2970:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 240,
																		"name": "_LpBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 35,
																		"src": "2982:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 242,
																	"indexExpression": {
																		"id": 241,
																		"name": "lpHolder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 191,
																		"src": "2994:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2982:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2970:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 244,
															"nodeType": "ExpressionStatement",
															"src": "2970:33:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 245,
																		"name": "lpBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "3035:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3046:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3035:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "lpHolder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 191,
																		"src": "3051:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 249,
																		"name": "deadAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "3063:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3051:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3035:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 285,
															"nodeType": "IfStatement",
															"src": "3032:478:0",
															"trueBody": {
																"id": 284,
																"nodeType": "Block",
																"src": "3075:435:0",
																"statements": [
																	{
																		"expression": {
																			"id": 264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 252,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 197,
																				"src": "3092:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 255,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 253,
																								"name": "balance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 170,
																								"src": "3102:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 254,
																								"name": "lpBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 194,
																								"src": "3112:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3102:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 256,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3101:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 261,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 257,
																								"name": "totalLpSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 31,
																								"src": "3126:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"baseExpression": {
																									"id": 258,
																									"name": "_LpBalances",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 35,
																									"src": "3140:11:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 260,
																								"indexExpression": {
																									"id": 259,
																									"name": "deadAddress",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 54,
																									"src": "3152:11:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3140:24:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3126:38:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 262,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3125:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3101:64:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3092:73:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 265,
																		"nodeType": "ExpressionStatement",
																		"src": "3092:73:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 266,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 197,
																				"src": "3188:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3197:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3188:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 283,
																		"nodeType": "IfStatement",
																		"src": "3184:311:0",
																		"trueBody": {
																			"id": 282,
																			"nodeType": "Block",
																			"src": "3200:295:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 274,
																								"name": "lpHolder",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 191,
																								"src": "3327:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 275,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 197,
																								"src": "3336:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 270,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "3306:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 271,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "3310:6:0",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "3306:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 269,
																									"name": "IERC20",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 11,
																									"src": "3299:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC20_$11_$",
																										"typeString": "type(contract IERC20)"
																									}
																								},
																								"id": 272,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3299:18:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$11",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 273,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3318:8:0",
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 10,
																							"src": "3299:27:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_bool_$",
																								"typeString": "function (address,uint256) payable external returns (bool)"
																							}
																						},
																						"id": 276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3299:44:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 277,
																					"nodeType": "ExpressionStatement",
																					"src": "3299:44:0"
																				},
																				{
																					"expression": {
																						"id": 280,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 278,
																							"name": "lpBonusEd",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 29,
																							"src": "3409:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 279,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 197,
																							"src": "3422:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3409:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 281,
																					"nodeType": "ExpressionStatement",
																					"src": "3409:19:0"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 286,
																	"name": "gasUsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "3558:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 287,
																		"name": "gasUsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "3568:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 288,
																					"name": "gasLeft",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 213,
																					"src": "3579:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 289,
																						"name": "gasleft",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967289,
																						"src": "3589:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 290,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3589:9:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3579:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 292,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3578:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3568:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3558:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 295,
															"nodeType": "ExpressionStatement",
															"src": "3558:41:0"
														},
														{
															"expression": {
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 296,
																	"name": "gasLeft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "3614:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 297,
																		"name": "gasleft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967289,
																		"src": "3624:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3624:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3614:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 300,
															"nodeType": "ExpressionStatement",
															"src": "3614:19:0"
														},
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3648:16:0",
																"subExpression": {
																	"id": 301,
																	"name": "currentLpIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "3648:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "3648:16:0"
														},
														{
															"expression": {
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3679:12:0",
																"subExpression": {
																	"id": 304,
																	"name": "iterations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "3679:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 306,
															"nodeType": "ExpressionStatement",
															"src": "3679:12:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 217,
															"name": "gasUsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2733:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 218,
															"name": "dividendGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2743:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2733:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 220,
															"name": "iterations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "2758:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 221,
															"name": "lpHolderCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "2771:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2758:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2733:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "WhileStatement",
												"src": "2726:977:0"
											},
											{
												"expression": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 309,
														"name": "progressRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "3715:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 310,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3737:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3743:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "3737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3715:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "3715:34:0"
											},
											{
												"expression": {
													"id": 314,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 197,
													"src": "3767:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 142,
												"id": 315,
												"nodeType": "Return",
												"src": "3760:13:0"
											}
										]
									},
									"functionSelector": "dd2cad60",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 138,
												"name": "onlyOp",
												"nameLocations": [
													"1872:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 70,
												"src": "1872:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1872:6:0"
										}
									],
									"name": "processReward",
									"nameLocation": "1816:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "tfmount",
												"nameLocation": "1838:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1830:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1854:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1846:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:30:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1888:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:9:0"
									},
									"scope": 450,
									"src": "1807:1974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "3854:528:0",
										"statements": [
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "totalLpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "3896:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 325,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "3913:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3896:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "3896:23:0"
											},
											{
												"expression": {
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 328,
															"name": "_LpBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "3928:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 330,
														"indexExpression": {
															"id": 329,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "3940:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3928:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 331,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "3951:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3928:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "3928:29:0"
											},
											{
												"expression": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 334,
															"name": "_lastLpTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "3966:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 336,
														"indexExpression": {
															"id": 335,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "3978:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3966:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 337,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3988:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3994:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3988:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3966:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3966:37:0"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 341,
															"name": "_lastEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "4013:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 343,
														"indexExpression": {
															"id": 342,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "4022:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4013:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 344,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4033:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4037:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4033:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4013:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "4013:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "30",
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4066:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"baseExpression": {
															"id": 349,
															"name": "lpHolderIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "4071:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 351,
														"indexExpression": {
															"id": 350,
															"name": "deadAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "4085:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4071:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4066:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 367,
												"nodeType": "IfStatement",
												"src": "4062:147:0",
												"trueBody": {
													"id": 366,
													"nodeType": "Block",
													"src": "4099:110:0",
													"statements": [
														{
															"expression": {
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 353,
																		"name": "lpHolderIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "4112:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 355,
																	"indexExpression": {
																		"id": 354,
																		"name": "deadAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "4126:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4112:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 356,
																		"name": "lpHolders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "4141:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4151:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4141:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4112:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 359,
															"nodeType": "ExpressionStatement",
															"src": "4112:45:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 363,
																		"name": "deadAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "4185:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 360,
																		"name": "lpHolders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "4170:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4180:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "4170:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4170:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 365,
															"nodeType": "ExpressionStatement",
															"src": "4170:27:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "30",
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4229:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"baseExpression": {
															"id": 369,
															"name": "lpHolderIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "4234:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 371,
														"indexExpression": {
															"id": 370,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "4248:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4234:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4229:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 387,
												"nodeType": "IfStatement",
												"src": "4225:132:0",
												"trueBody": {
													"id": 386,
													"nodeType": "Block",
													"src": "4257:100:0",
													"statements": [
														{
															"expression": {
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 373,
																		"name": "lpHolderIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "4270:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 375,
																	"indexExpression": {
																		"id": 374,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "4284:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4270:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 376,
																		"name": "lpHolders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "4294:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4304:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4294:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4270:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 379,
															"nodeType": "ExpressionStatement",
															"src": "4270:40:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 383,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "4338:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 380,
																		"name": "lpHolders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "4323:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4333:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "4323:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 385,
															"nodeType": "ExpressionStatement",
															"src": "4323:22:0"
														}
													]
												}
											}
										]
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ariver",
									"nameLocation": "3798:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3813:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3805:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3828:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3820:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:31:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3854:0:0"
									},
									"scope": 450,
									"src": "3789:593:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "4460:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 396,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "4478:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 398,
													"indexExpression": {
														"id": 397,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "4488:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4478:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 395,
												"id": 399,
												"nodeType": "Return",
												"src": "4471:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4403:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4421:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "4413:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:17:0"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "4451:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4450:9:0"
									},
									"scope": 450,
									"src": "4394:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "4557:25:0",
										"statements": [
											{
												"expression": {
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 408,
														"name": "op",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "4568:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 409,
														"name": "d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "4573:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "4568:6:0"
											}
										]
									},
									"functionSelector": "a36a7526",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 406,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 405,
												"name": "onlyOwner",
												"nameLocations": [
													"4547:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 82,
												"src": "4547:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4547:9:0"
										}
									],
									"name": "setOp",
									"nameLocation": "4521:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "d",
												"nameLocation": "4535:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "4527:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4527:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:11:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4557:0:0"
									},
									"scope": 450,
									"src": "4512:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "4665:49:0",
										"statements": [
											{
												"expression": {
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 420,
														"name": "holderRewardCondition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "4676:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 421,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "4700:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4676:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "4676:30:0"
											}
										]
									},
									"functionSelector": "c213d62d",
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 418,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 417,
												"name": "onlyOwner",
												"nameLocations": [
													"4655:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 82,
												"src": "4655:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4655:9:0"
										}
									],
									"name": "setHolderRewardCondition",
									"nameLocation": "4605:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4638:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "4630:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4629:16:0"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4665:0:0"
									},
									"scope": 450,
									"src": "4596:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "4794:47:0",
										"statements": [
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "dividendGas",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "4815:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "vgas",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "4829:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4815:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "4815:18:0"
											}
										]
									},
									"functionSelector": "6689567e",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 430,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 429,
												"name": "onlyOwner",
												"nameLocations": [
													"4785:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 82,
												"src": "4785:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4785:9:0"
										}
									],
									"name": "setDividendGas",
									"nameLocation": "4746:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "vgas",
												"nameLocation": "4769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "4761:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4760:14:0"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4794:0:0"
									},
									"scope": 450,
									"src": "4737:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "4908:47:0",
										"statements": [
											{
												"expression": {
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 444,
														"name": "progressRewardBlockAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "4919:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 445,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "4944:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4919:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "4919:28:0"
											}
										]
									},
									"functionSelector": "c7003ed0",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 442,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 441,
												"name": "onlyOwner",
												"nameLocations": [
													"4899:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 82,
												"src": "4899:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4899:9:0"
										}
									],
									"name": "setRewardBlockAdd",
									"nameLocation": "4858:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "num",
												"nameLocation": "4884:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4876:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4875:13:0"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4908:0:0"
									},
									"scope": 450,
									"src": "4849:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 451,
							"src": "263:4706:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:4866:0"
				},
				"id": 0
			}
		}
	}
}