{
	"id": "207e77d86275a940452d551e05b6c08f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DividendPayingERC20Token.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2024-06-15\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n   \r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMathUint {\r\n    function toInt256Safe(uint256 a) internal pure returns (int256) {\r\n        int256 b = int256(a);\r\n        require(b >= 0);\r\n        return b;\r\n    }\r\n}\r\n\r\nlibrary SafeMathInt {\r\n    function toUint256Safe(int256 a) internal pure returns (uint256) {\r\n        require(a >= 0);\r\n        return uint256(a);\r\n    }\r\n}\r\n\r\ncontract DividendPayingERC20Token {\r\n    using SafeMathUint for uint256;\r\n    using SafeMathInt for int256;\r\n    mapping(address => uint256) private _balances;\r\n    uint256 private _totalSupply;\r\n    uint256 private totalDividendsDistributed;\r\n  \r\n    uint256 constant private magnitude = 10**23;\r\n    mapping(address => int256) public magnifiedDividendCorrections;\r\n    mapping(address => uint256) private withdrawnDividends;\r\n\r\n    uint256 public magnifiedDividendPerShare;\r\n\r\n    uint256 public progressRewardBlock;\r\n    uint256 public progressRewardBlockAdd;\r\n    uint256 public holderCondition;\r\n    uint256 public holderRewardCondition; \r\n    uint256 public dividendGas;\r\n    uint256 public lpBonus;\r\n    uint256 public lpBonusEd;\r\n\r\n    uint256 totalLpSupply;\r\n    mapping(address  => uint256) private _LpBalances;\r\n    mapping(address  => uint256) private _lastLpTime;\r\n    mapping(address  => uint256) private _lastEth;\r\n    mapping(address  => uint256) private _lastToken;\r\n\r\n    address[] public lpHolders;\r\n    mapping(address => uint256) public lpHolderIndex;\r\n    uint256 public currentLpIndex;\r\n    \r\n    \r\n\r\n    IERC20 private constant c_erc20 = IERC20(0x65e74abE9190b5015fdd548593cA348b981A4636);\r\n    IERC20 private constant c_lp = IERC20(0x58bEf2351A4f43f086802fB35434Fd7764135968);\r\n\r\n    address private  deadAddress;\r\n    address public op;\r\n    address public owner;\r\n    modifier onlyOp() {\r\n        require(op == msg.sender, \"Ownable: caller is not the op\");\r\n        _;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    constructor( ) {\r\n     \r\n  \r\n        //_maxWallet = 1 ether;\r\n        owner = msg.sender;\r\n        \r\n        //maxItemido = 1 ether;\r\n\r\n        progressRewardBlockAdd = 200;\r\n        holderRewardCondition = 1 * 10 ** 16; \r\n        holderCondition = 5000 * 10 ** 18;\r\n        dividendGas = 500000; \r\n    \r\n        deadAddress = address(0x000000000000000000000000000000000000dEaD);\r\n        \r\n        \r\n        _balances[deadAddress] = 0 ether;\r\n \r\n    \r\n    \r\n    \r\n  }\r\n  \r\n    function processReward(uint256 tfmount,address user)    external onlyOp returns (uint256) {\r\n        \r\n        ariver(tfmount,user);\r\n        \r\n        if (progressRewardBlock + progressRewardBlockAdd > block.number) {\r\n            return 0;\r\n        }\r\n\r\n        if (totalLpSupply == 0 || totalLpSupply <= _LpBalances[deadAddress]){\r\n          return 0;\r\n        }\r\n\r\n        if (lpBonusEd >= lpBonus){\r\n          return 0;\r\n        }\r\n        uint256 balance = lpBonus - lpBonusEd;\r\n        if (balance < holderRewardCondition || address(this).balance < holderRewardCondition) {\r\n            return 0;\r\n        }\r\n\r\n        \r\n\r\n        address lpHolder;\r\n        uint256 lpBalance;\r\n        uint256 amount;\r\n\r\n        uint256 lpHolderCount = lpHolders.length;\r\n\r\n        uint256 gasUsed = 0;\r\n        uint256 iterations = 0;\r\n        uint256 gasLeft = gasleft();\r\n\r\n    \r\n\r\n        while (gasUsed < dividendGas && iterations < lpHolderCount) {\r\n            if (currentLpIndex >= lpHolderCount) {\r\n                currentLpIndex = 0;\r\n            }\r\n            \r\n            lpHolder = lpHolders[currentLpIndex];\r\n            lpBalance = _LpBalances[lpHolder];\r\n            \r\n            if(lpBalance >0 && lpHolder != deadAddress){\r\n              amount = (balance * lpBalance) / (totalLpSupply-_LpBalances[deadAddress]);\r\n                if (amount > 0) {\r\n                    //(bool success,) = lpHolder.call{value: amount}(\"\"); \r\n                    IERC20(msg.sender).transfer(lpHolder,amount); \r\n                    //if (success) {\r\n                        lpBonusEd += amount;\r\n                    //}\r\n                    \r\n                }\r\n            }\r\n                \r\n            \r\n\r\n            gasUsed = gasUsed + (gasLeft - gasleft());\r\n            gasLeft = gasleft();\r\n            currentLpIndex++;\r\n            iterations++;\r\n        }\r\n\r\n        progressRewardBlock = block.number;\r\n        return amount;\r\n    }\r\n\r\n    function ariver(uint256 amount,address sender)internal virtual   {\r\n      \r\n      \r\n       \r\n      \r\n      totalLpSupply += amount;\r\n      _LpBalances[sender] += amount;\r\n      _lastLpTime[sender] = block.timestamp;\r\n       _lastEth[sender] += msg.value;\r\n       \r\n        if (0 == lpHolderIndex[deadAddress]) {\r\n          lpHolderIndex[deadAddress] = lpHolders.length;\r\n          lpHolders.push(deadAddress);\r\n        }\r\n      \r\n      if (0 == lpHolderIndex[sender]) {\r\n          lpHolderIndex[sender] = lpHolders.length;\r\n          lpHolders.push(sender);\r\n        }\r\n       \r\n       \r\n    }\r\n \r\n \r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function setOp(address d) external onlyOwner {\r\n        op = d;\r\n    }\r\n\r\n    function contractInfo() external view returns(uint256, uint256) {\r\n        return (_totalSupply, totalDividendsDistributed);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/DividendPayingERC20Token.sol": {
				"DividendPayingERC20Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentLpIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dividendGas",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holderCondition",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holderRewardCondition",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpBonus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpBonusEd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lpHolderIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "lpHolders",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "magnifiedDividendCorrections",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "magnifiedDividendPerShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "op",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tfmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "processReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "progressRewardBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "progressRewardBlockAdd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "d",
									"type": "address"
								}
							],
							"name": "setOp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DividendPayingERC20Token.sol\":1158:6150  contract DividendPayingERC20Token {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DividendPayingERC20Token.sol\":2790:3258  constructor( ) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/DividendPayingERC20Token.sol\":2860:2865  owner */\n  0x17\n    /* \"contracts/DividendPayingERC20Token.sol\":2860:2878  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"contracts/DividendPayingERC20Token.sol\":2868:2878  msg.sender */\n  caller\n    /* \"contracts/DividendPayingERC20Token.sol\":2860:2878  owner = msg.sender */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":2959:2962  200 */\n  0xc8\n    /* \"contracts/DividendPayingERC20Token.sol\":2934:2956  progressRewardBlockAdd */\n  0x07\n    /* \"contracts/DividendPayingERC20Token.sol\":2934:2962  progressRewardBlockAdd = 200 */\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":2997:3009  1 * 10 ** 16 */\n  0x2386f26fc10000\n    /* \"contracts/DividendPayingERC20Token.sol\":2973:2994  holderRewardCondition */\n  0x09\n    /* \"contracts/DividendPayingERC20Token.sol\":2973:3009  holderRewardCondition = 1 * 10 ** 16 */\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":3039:3054  5000 * 10 ** 18 */\n  0x010f0cf064dd59200000\n    /* \"contracts/DividendPayingERC20Token.sol\":3021:3036  holderCondition */\n  0x08\n    /* \"contracts/DividendPayingERC20Token.sol\":3021:3054  holderCondition = 5000 * 10 ** 18 */\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":3079:3085  500000 */\n  0x07a120\n    /* \"contracts/DividendPayingERC20Token.sol\":3065:3076  dividendGas */\n  0x0a\n    /* \"contracts/DividendPayingERC20Token.sol\":3065:3085  dividendGas = 500000 */\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":3103:3114  deadAddress */\n  0x15\n    /* \"contracts/DividendPayingERC20Token.sol\":3103:3168  deadAddress = address(0x000000000000000000000000000000000000dEaD) */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/DividendPayingERC20Token.sol\":3125:3167  0x000000000000000000000000000000000000dEaD */\n  0xdead\n    /* \"contracts/DividendPayingERC20Token.sol\":3103:3168  deadAddress = address(0x000000000000000000000000000000000000dEaD) */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":2860:2865  owner */\n  0x00\n    /* \"contracts/DividendPayingERC20Token.sol\":3199:3221  _balances[deadAddress] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf83\n    /* \"contracts/DividendPayingERC20Token.sol\":3199:3231  _balances[deadAddress] = 0 ether */\n  sstore\n    /* \"contracts/DividendPayingERC20Token.sol\":1158:6150  contract DividendPayingERC20Token {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DividendPayingERC20Token.sol\":1158:6150  contract DividendPayingERC20Token {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0affb402\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1210c434\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x15c43aaf\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2a595512\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3a7960e0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3fe9f9f7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x621f9c0a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x97a06724\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9f0d7eb8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa36a7526\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xadd0a6c6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb367bf83\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xbd876702\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd2cad60\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xeb10b741\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xec1f1f69\n      eq\n      tag_20\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DividendPayingERC20Token.sol\":2181:2229  mapping(address => uint256) public lpHolderIndex */\n    tag_3:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      mstore(0x20, 0x13)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/DividendPayingERC20Token.sol\":2181:2229  mapping(address => uint256) public lpHolderIndex */\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DividendPayingERC20Token.sol\":2236:2265  uint256 public currentLpIndex */\n    tag_4:\n      tag_21\n      sload(0x14)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":6016:6147  function contractInfo() external view returns(uint256, uint256) {... */\n    tag_5:\n        /* \"contracts/DividendPayingERC20Token.sol\":6099:6111  _totalSupply */\n      sload(0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":6113:6138  totalDividendsDistributed */\n      sload(0x02)\n        /* \"contracts/DividendPayingERC20Token.sol\":6016:6147  function contractInfo() external view returns(uint256, uint256) {... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":739:764   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":795:797   */\n      0x20\n        /* \"#utility.yul\":780:798   */\n      dup4\n      add\n        /* \"#utility.yul\":773:807   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":712:730   */\n      add\n        /* \"contracts/DividendPayingERC20Token.sol\":6016:6147  function contractInfo() external view returns(uint256, uint256) {... */\n      tag_25\n        /* \"#utility.yul\":565:813   */\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":1641:1675  uint256 public progressRewardBlock */\n    tag_6:\n      tag_21\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":1592:1632  uint256 public magnifiedDividendPerShare */\n    tag_7:\n      tag_21\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":1726:1756  uint256 public holderCondition */\n    tag_8:\n      tag_21\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":1840:1862  uint256 public lpBonus */\n    tag_9:\n      tag_21\n      sload(0x0b)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":5820:5930  function balanceOf(address account) public view returns (uint256) {... */\n    tag_10:\n      tag_21\n      tag_47\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":5904:5922  _balances[account] */\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":5877:5884  uint256 */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":5904:5922  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":5820:5930  function balanceOf(address account) public view returns (uint256) {... */\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":2526:2546  address public owner */\n    tag_11:\n      sload(0x17)\n      tag_50\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_50:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":982:1014   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":964:1015   */\n      dup2\n      mstore\n        /* \"#utility.yul\":952:954   */\n      0x20\n        /* \"#utility.yul\":937:955   */\n      add\n        /* \"contracts/DividendPayingERC20Token.sol\":2526:2546  address public owner */\n      tag_25\n        /* \"#utility.yul\":818:1021   */\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":1460:1522  mapping(address => int256) public magnifiedDividendCorrections */\n    tag_12:\n      tag_21\n      tag_55\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_55:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":2148:2174  address[] public lpHolders */\n    tag_13:\n      tag_50\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"contracts/DividendPayingERC20Token.sol\":5938:6008  function setOp(address d) external onlyOwner {... */\n    tag_14:\n      tag_64\n      tag_65\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/DividendPayingERC20Token.sol\":1682:1719  uint256 public progressRewardBlockAdd */\n    tag_15:\n      tag_21\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":1869:1893  uint256 public lpBonusEd */\n    tag_16:\n      tag_21\n      sload(0x0c)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":1807:1833  uint256 public dividendGas */\n    tag_17:\n      tag_21\n      sload(0x0a)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":3268:5207  function processReward(uint256 tfmount,address user)    external onlyOp returns (uint256) {... */\n    tag_18:\n      tag_21\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"contracts/DividendPayingERC20Token.sol\":1763:1799  uint256 public holderRewardCondition */\n    tag_19:\n      tag_21\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":2502:2519  address public op */\n    tag_20:\n      sload(0x16)\n      tag_50\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":2148:2174  address[] public lpHolders */\n    tag_62:\n      0x12\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/DividendPayingERC20Token.sol\":5938:6008  function setOp(address d) external onlyOwner {... */\n    tag_66:\n        /* \"contracts/DividendPayingERC20Token.sol\":2706:2711  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x17))\n        /* \"contracts/DividendPayingERC20Token.sol\":2715:2725  msg.sender */\n      caller\n        /* \"contracts/DividendPayingERC20Token.sol\":2706:2725  owner == msg.sender */\n      eq\n        /* \"contracts/DividendPayingERC20Token.sol\":2698:2762  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1852:1854   */\n      0x20\n        /* \"contracts/DividendPayingERC20Token.sol\":2698:2762  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1834:1855   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1871:1889   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1864:1894   */\n      mstore\n        /* \"#utility.yul\":1930:1964   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1910:1928   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1903:1965   */\n      mstore\n        /* \"#utility.yul\":1982:2000   */\n      0x64\n      add\n        /* \"contracts/DividendPayingERC20Token.sol\":2698:2762  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/DividendPayingERC20Token.sol\":5994:5996  op */\n      0x16\n        /* \"contracts/DividendPayingERC20Token.sol\":5994:6000  op = d */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":5938:6008  function setOp(address d) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DividendPayingERC20Token.sol\":3268:5207  function processReward(uint256 tfmount,address user)    external onlyOp returns (uint256) {... */\n    tag_79:\n        /* \"contracts/DividendPayingERC20Token.sol\":2590:2592  op */\n      sload(0x16)\n        /* \"contracts/DividendPayingERC20Token.sol\":3349:3356  uint256 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":2590:2592  op */\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":2596:2606  msg.sender */\n      caller\n        /* \"contracts/DividendPayingERC20Token.sol\":2590:2606  op == msg.sender */\n      eq\n        /* \"contracts/DividendPayingERC20Token.sol\":2582:2640  require(op == msg.sender, \"Ownable: caller is not the op\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2213:2215   */\n      0x20\n        /* \"contracts/DividendPayingERC20Token.sol\":2582:2640  require(op == msg.sender, \"Ownable: caller is not the op\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2195:2216   */\n      mstore\n        /* \"#utility.yul\":2252:2254   */\n      0x1d\n        /* \"#utility.yul\":2232:2250   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2225:2255   */\n      mstore\n        /* \"#utility.yul\":2291:2322   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f70000000\n        /* \"#utility.yul\":2271:2289   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2264:2323   */\n      mstore\n        /* \"#utility.yul\":2340:2358   */\n      0x64\n      add\n        /* \"contracts/DividendPayingERC20Token.sol\":2582:2640  require(op == msg.sender, \"Ownable: caller is not the op\") */\n      tag_93\n        /* \"#utility.yul\":2011:2364   */\n      jump\n        /* \"contracts/DividendPayingERC20Token.sol\":2582:2640  require(op == msg.sender, \"Ownable: caller is not the op\") */\n    tag_97:\n        /* \"contracts/DividendPayingERC20Token.sol\":3379:3399  ariver(tfmount,user) */\n      tag_101\n        /* \"contracts/DividendPayingERC20Token.sol\":3386:3393  tfmount */\n      dup4\n        /* \"contracts/DividendPayingERC20Token.sol\":3394:3398  user */\n      dup4\n        /* \"contracts/DividendPayingERC20Token.sol\":3379:3385  ariver */\n      tag_102\n        /* \"contracts/DividendPayingERC20Token.sol\":3379:3399  ariver(tfmount,user) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/DividendPayingERC20Token.sol\":3471:3483  block.number */\n      number\n        /* \"contracts/DividendPayingERC20Token.sol\":3446:3468  progressRewardBlockAdd */\n      sload(0x07)\n        /* \"contracts/DividendPayingERC20Token.sol\":3424:3443  progressRewardBlock */\n      sload(0x06)\n        /* \"contracts/DividendPayingERC20Token.sol\":3424:3468  progressRewardBlock + progressRewardBlockAdd */\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"contracts/DividendPayingERC20Token.sol\":3424:3483  progressRewardBlock + progressRewardBlockAdd > block.number */\n      gt\n        /* \"contracts/DividendPayingERC20Token.sol\":3420:3520  if (progressRewardBlock + progressRewardBlockAdd > block.number) {... */\n      iszero\n      tag_105\n      jumpi\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3507:3508  0 */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":3500:3508  return 0 */\n      jump(tag_100)\n        /* \"contracts/DividendPayingERC20Token.sol\":3420:3520  if (progressRewardBlock + progressRewardBlockAdd > block.number) {... */\n    tag_105:\n        /* \"contracts/DividendPayingERC20Token.sol\":3536:3549  totalLpSupply */\n      sload(0x0d)\n        /* \"contracts/DividendPayingERC20Token.sol\":3536:3554  totalLpSupply == 0 */\n      iszero\n      dup1\n        /* \"contracts/DividendPayingERC20Token.sol\":3536:3599  totalLpSupply == 0 || totalLpSupply <= _LpBalances[deadAddress] */\n      tag_106\n      jumpi\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3587:3598  deadAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x15))\n        /* \"contracts/DividendPayingERC20Token.sol\":3575:3599  _LpBalances[deadAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":3575:3586  _LpBalances */\n      0x0e\n        /* \"contracts/DividendPayingERC20Token.sol\":3575:3599  _LpBalances[deadAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":3558:3571  totalLpSupply */\n      sload(0x0d)\n        /* \"contracts/DividendPayingERC20Token.sol\":3558:3599  totalLpSupply <= _LpBalances[deadAddress] */\n      gt\n      iszero\n        /* \"contracts/DividendPayingERC20Token.sol\":3536:3599  totalLpSupply == 0 || totalLpSupply <= _LpBalances[deadAddress] */\n    tag_106:\n        /* \"contracts/DividendPayingERC20Token.sol\":3532:3633  if (totalLpSupply == 0 || totalLpSupply <= _LpBalances[deadAddress]){... */\n      iszero\n      tag_107\n      jumpi\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3620:3621  0 */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":3613:3621  return 0 */\n      jump(tag_100)\n        /* \"contracts/DividendPayingERC20Token.sol\":3532:3633  if (totalLpSupply == 0 || totalLpSupply <= _LpBalances[deadAddress]){... */\n    tag_107:\n        /* \"contracts/DividendPayingERC20Token.sol\":3662:3669  lpBonus */\n      sload(0x0b)\n        /* \"contracts/DividendPayingERC20Token.sol\":3649:3658  lpBonusEd */\n      sload(0x0c)\n        /* \"contracts/DividendPayingERC20Token.sol\":3649:3669  lpBonusEd >= lpBonus */\n      lt\n        /* \"contracts/DividendPayingERC20Token.sol\":3645:3703  if (lpBonusEd >= lpBonus){... */\n      tag_108\n      jumpi\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3690:3691  0 */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":3683:3691  return 0 */\n      jump(tag_100)\n        /* \"contracts/DividendPayingERC20Token.sol\":3645:3703  if (lpBonusEd >= lpBonus){... */\n    tag_108:\n        /* \"contracts/DividendPayingERC20Token.sol\":3713:3728  uint256 balance */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":3741:3750  lpBonusEd */\n      sload(0x0c)\n        /* \"contracts/DividendPayingERC20Token.sol\":3731:3738  lpBonus */\n      sload(0x0b)\n        /* \"contracts/DividendPayingERC20Token.sol\":3731:3750  lpBonus - lpBonusEd */\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/DividendPayingERC20Token.sol\":3713:3750  uint256 balance = lpBonus - lpBonusEd */\n      swap1\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3775:3796  holderRewardCondition */\n      sload(0x09)\n        /* \"contracts/DividendPayingERC20Token.sol\":3765:3772  balance */\n      dup2\n        /* \"contracts/DividendPayingERC20Token.sol\":3765:3796  balance < holderRewardCondition */\n      lt\n        /* \"contracts/DividendPayingERC20Token.sol\":3765:3845  balance < holderRewardCondition || address(this).balance < holderRewardCondition */\n      dup1\n      tag_111\n      jumpi\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":3824:3845  holderRewardCondition */\n      sload(0x09)\n        /* \"contracts/DividendPayingERC20Token.sol\":3800:3821  address(this).balance */\n      selfbalance\n        /* \"contracts/DividendPayingERC20Token.sol\":3800:3845  address(this).balance < holderRewardCondition */\n      lt\n        /* \"contracts/DividendPayingERC20Token.sol\":3765:3845  balance < holderRewardCondition || address(this).balance < holderRewardCondition */\n    tag_111:\n        /* \"contracts/DividendPayingERC20Token.sol\":3761:3882  if (balance < holderRewardCondition || address(this).balance < holderRewardCondition) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":3869:3870  0 */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":3862:3870  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_100)\n        /* \"contracts/DividendPayingERC20Token.sol\":3761:3882  if (balance < holderRewardCondition || address(this).balance < holderRewardCondition) {... */\n    tag_112:\n        /* \"contracts/DividendPayingERC20Token.sol\":4012:4021  lpHolders */\n      0x12\n        /* \"contracts/DividendPayingERC20Token.sol\":4012:4028  lpHolders.length */\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":3906:3922  address lpHolder */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      dup1\n      dup1\n        /* \"contracts/DividendPayingERC20Token.sol\":4122:4131  gasleft() */\n      gas\n        /* \"contracts/DividendPayingERC20Token.sol\":4104:4131  uint256 gasLeft = gasleft() */\n      swap1\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":4152:5129  while (gasUsed < dividendGas && iterations < lpHolderCount) {... */\n    tag_113:\n        /* \"contracts/DividendPayingERC20Token.sol\":4169:4180  dividendGas */\n      sload(0x0a)\n        /* \"contracts/DividendPayingERC20Token.sol\":4159:4166  gasUsed */\n      dup4\n        /* \"contracts/DividendPayingERC20Token.sol\":4159:4180  gasUsed < dividendGas */\n      lt\n        /* \"contracts/DividendPayingERC20Token.sol\":4159:4210  gasUsed < dividendGas && iterations < lpHolderCount */\n      dup1\n      iszero\n      tag_115\n      jumpi\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":4197:4210  lpHolderCount */\n      dup4\n        /* \"contracts/DividendPayingERC20Token.sol\":4184:4194  iterations */\n      dup3\n        /* \"contracts/DividendPayingERC20Token.sol\":4184:4210  iterations < lpHolderCount */\n      lt\n        /* \"contracts/DividendPayingERC20Token.sol\":4159:4210  gasUsed < dividendGas && iterations < lpHolderCount */\n    tag_115:\n        /* \"contracts/DividendPayingERC20Token.sol\":4152:5129  while (gasUsed < dividendGas && iterations < lpHolderCount) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":4249:4262  lpHolderCount */\n      dup4\n        /* \"contracts/DividendPayingERC20Token.sol\":4231:4245  currentLpIndex */\n      sload(0x14)\n        /* \"contracts/DividendPayingERC20Token.sol\":4231:4262  currentLpIndex >= lpHolderCount */\n      lt\n        /* \"contracts/DividendPayingERC20Token.sol\":4227:4317  if (currentLpIndex >= lpHolderCount) {... */\n      tag_116\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":4300:4301  0 */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":4283:4297  currentLpIndex */\n      0x14\n        /* \"contracts/DividendPayingERC20Token.sol\":4283:4301  currentLpIndex = 0 */\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4227:4317  if (currentLpIndex >= lpHolderCount) {... */\n    tag_116:\n        /* \"contracts/DividendPayingERC20Token.sol\":4356:4365  lpHolders */\n      0x12\n        /* \"contracts/DividendPayingERC20Token.sol\":4366:4380  currentLpIndex */\n      sload(0x14)\n        /* \"contracts/DividendPayingERC20Token.sol\":4356:4381  lpHolders[currentLpIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_118\n      jumpi\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":4408:4429  _LpBalances[lpHolder] */\n      dup1\n      dup4\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4408:4419  _LpBalances */\n      0x0e\n        /* \"contracts/DividendPayingERC20Token.sol\":4408:4429  _LpBalances[lpHolder] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":4356:4381  lpHolders[currentLpIndex] */\n      swap1\n      swap8\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":4408:4429  _LpBalances[lpHolder] */\n      swap6\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":4461:4473  lpBalance >0 */\n      dup6\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":4461:4500  lpBalance >0 && lpHolder != deadAddress */\n      tag_121\n      jumpi\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":4489:4500  deadAddress */\n      sload(0x15)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":4477:4500  lpHolder != deadAddress */\n      dup9\n      dup2\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":4489:4500  deadAddress */\n      swap2\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":4477:4500  lpHolder != deadAddress */\n      eq\n      iszero\n        /* \"contracts/DividendPayingERC20Token.sol\":4461:4500  lpBalance >0 && lpHolder != deadAddress */\n    tag_121:\n        /* \"contracts/DividendPayingERC20Token.sol\":4458:4936  if(lpBalance >0 && lpHolder != deadAddress){... */\n      iszero\n      tag_128\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":4578:4589  deadAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x15))\n        /* \"contracts/DividendPayingERC20Token.sol\":4566:4590  _LpBalances[deadAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4566:4577  _LpBalances */\n      0x0e\n        /* \"contracts/DividendPayingERC20Token.sol\":4566:4590  _LpBalances[deadAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":4552:4565  totalLpSupply */\n      sload(0x0d)\n        /* \"contracts/DividendPayingERC20Token.sol\":4552:4590  totalLpSupply-_LpBalances[deadAddress] */\n      tag_123\n      swap2\n        /* \"contracts/DividendPayingERC20Token.sol\":4566:4590  _LpBalances[deadAddress] */\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":4552:4590  totalLpSupply-_LpBalances[deadAddress] */\n      tag_110\n      jump\t// in\n    tag_123:\n        /* \"contracts/DividendPayingERC20Token.sol\":4528:4547  balance * lpBalance */\n      tag_124\n        /* \"contracts/DividendPayingERC20Token.sol\":4538:4547  lpBalance */\n      dup8\n        /* \"contracts/DividendPayingERC20Token.sol\":4528:4535  balance */\n      dup11\n        /* \"contracts/DividendPayingERC20Token.sol\":4528:4547  balance * lpBalance */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"contracts/DividendPayingERC20Token.sol\":4527:4591  (balance * lpBalance) / (totalLpSupply-_LpBalances[deadAddress]) */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"contracts/DividendPayingERC20Token.sol\":4518:4591  amount = (balance * lpBalance) / (totalLpSupply-_LpBalances[deadAddress]) */\n      swap5\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":4614:4624  amount > 0 */\n      dup5\n      iszero\n        /* \"contracts/DividendPayingERC20Token.sol\":4610:4921  if (amount > 0) {... */\n      tag_128\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":4725:4769  IERC20(msg.sender).transfer(lpHolder,amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3483:3515   */\n      dup9\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":4725:4769  IERC20(msg.sender).transfer(lpHolder,amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3465:3516   */\n      mstore\n        /* \"#utility.yul\":3532:3550   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3525:3559   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":4732:4742  msg.sender */\n      caller\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":4725:4752  IERC20(msg.sender).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3438:3456   */\n      0x44\n      add\n        /* \"contracts/DividendPayingERC20Token.sol\":4725:4769  IERC20(msg.sender).transfer(lpHolder,amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":4848:4854  amount */\n      dup5\n        /* \"contracts/DividendPayingERC20Token.sol\":4835:4844  lpBonusEd */\n      0x0c\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":4835:4854  lpBonusEd += amount */\n      dup3\n      dup3\n      sload\n      tag_135\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_135:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":4610:4921  if (amount > 0) {... */\n    tag_128:\n        /* \"contracts/DividendPayingERC20Token.sol\":5015:5024  gasleft() */\n      gas\n        /* \"contracts/DividendPayingERC20Token.sol\":5005:5024  gasLeft - gasleft() */\n      tag_136\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":5005:5012  gasLeft */\n      dup3\n        /* \"contracts/DividendPayingERC20Token.sol\":5005:5024  gasLeft - gasleft() */\n      tag_110\n      jump\t// in\n    tag_136:\n        /* \"contracts/DividendPayingERC20Token.sol\":4994:5025  gasUsed + (gasLeft - gasleft()) */\n      tag_137\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":4994:5001  gasUsed */\n      dup5\n        /* \"contracts/DividendPayingERC20Token.sol\":4994:5025  gasUsed + (gasLeft - gasleft()) */\n      tag_104\n      jump\t// in\n    tag_137:\n        /* \"contracts/DividendPayingERC20Token.sol\":4984:5025  gasUsed = gasUsed + (gasLeft - gasleft()) */\n      swap3\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":5050:5059  gasleft() */\n      gas\n        /* \"contracts/DividendPayingERC20Token.sol\":5074:5088  currentLpIndex */\n      0x14\n        /* \"contracts/DividendPayingERC20Token.sol\":5074:5090  currentLpIndex++ */\n      dup1\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":5040:5059  gasLeft = gasleft() */\n      swap2\n      swap3\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":5074:5088  currentLpIndex */\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":5074:5090  currentLpIndex++ */\n      tag_138\n      dup4\n      tag_139\n      jump\t// in\n    tag_138:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":5105:5117  iterations++ */\n      dup2\n      dup1\n      tag_140\n      swap1\n      tag_139\n      jump\t// in\n    tag_140:\n      swap3\n      pop\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":4152:5129  while (gasUsed < dividendGas && iterations < lpHolderCount) {... */\n      jump(tag_113)\n    tag_114:\n      pop\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":5163:5175  block.number */\n      number\n        /* \"contracts/DividendPayingERC20Token.sol\":5141:5160  progressRewardBlock */\n      0x06\n        /* \"contracts/DividendPayingERC20Token.sol\":5141:5175  progressRewardBlock = block.number */\n      sstore\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":5193:5199  amount */\n      swap1\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":2651:2652  _ */\n    tag_100:\n        /* \"contracts/DividendPayingERC20Token.sol\":3268:5207  function processReward(uint256 tfmount,address user)    external onlyOp returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DividendPayingERC20Token.sol\":5215:5808  function ariver(uint256 amount,address sender)internal virtual   {... */\n    tag_102:\n        /* \"contracts/DividendPayingERC20Token.sol\":5339:5345  amount */\n      dup2\n        /* \"contracts/DividendPayingERC20Token.sol\":5322:5335  totalLpSupply */\n      0x0d\n      0x00\n        /* \"contracts/DividendPayingERC20Token.sol\":5322:5345  totalLpSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_142\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_142:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":5354:5373  _LpBalances[sender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":5354:5365  _LpBalances */\n      0x0e\n        /* \"contracts/DividendPayingERC20Token.sol\":5354:5373  _LpBalances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/DividendPayingERC20Token.sol\":5354:5383  _LpBalances[sender] += amount */\n      dup1\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":5377:5383  amount */\n      dup5\n      swap3\n        /* \"contracts/DividendPayingERC20Token.sol\":5354:5373  _LpBalances[sender] */\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":5354:5383  _LpBalances[sender] += amount */\n      tag_143\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":5377:5383  amount */\n      dup5\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":5354:5383  _LpBalances[sender] += amount */\n      tag_104\n      jump\t// in\n    tag_143:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":5392:5411  _lastLpTime[sender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":5392:5403  _lastLpTime */\n      0x0f\n        /* \"contracts/DividendPayingERC20Token.sol\":5392:5411  _lastLpTime[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DividendPayingERC20Token.sol\":5414:5429  block.timestamp */\n      timestamp\n        /* \"contracts/DividendPayingERC20Token.sol\":5392:5429  _lastLpTime[sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":5439:5447  _lastEth */\n      0x10\n        /* \"contracts/DividendPayingERC20Token.sol\":5439:5455  _lastEth[sender] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/DividendPayingERC20Token.sol\":5439:5468  _lastEth[sender] += msg.value */\n      dup1\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":5459:5468  msg.value */\n      callvalue\n      swap3\n        /* \"contracts/DividendPayingERC20Token.sol\":5392:5411  _lastLpTime[sender] */\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":5439:5468  _lastEth[sender] += msg.value */\n      tag_144\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":5459:5468  msg.value */\n      dup5\n      swap1\n        /* \"contracts/DividendPayingERC20Token.sol\":5439:5468  _lastEth[sender] += msg.value */\n      tag_104\n      jump\t// in\n    tag_144:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/DividendPayingERC20Token.sol\":5511:5522  deadAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x15))\n        /* \"contracts/DividendPayingERC20Token.sol\":5497:5523  lpHolderIndex[deadAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":5497:5510  lpHolderIndex */\n      0x13\n        /* \"contracts/DividendPayingERC20Token.sol\":5497:5523  lpHolderIndex[deadAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":5492:5523  0 == lpHolderIndex[deadAddress] */\n      swap1\n      sub\n        /* \"contracts/DividendPayingERC20Token.sol\":5488:5635  if (0 == lpHolderIndex[deadAddress]) {... */\n      tag_145\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":5567:5576  lpHolders */\n      0x12\n        /* \"contracts/DividendPayingERC20Token.sol\":5567:5583  lpHolders.length */\n      dup1\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":5552:5563  deadAddress */\n      0x15\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":5538:5564  lpHolderIndex[deadAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":5538:5551  lpHolderIndex */\n      0x13\n        /* \"contracts/DividendPayingERC20Token.sol\":5538:5564  lpHolderIndex[deadAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/DividendPayingERC20Token.sol\":5538:5583  lpHolderIndex[deadAddress] = lpHolders.length */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":5611:5622  deadAddress */\n      swap2\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":5552:5563  deadAddress */\n      0x01\n        /* \"contracts/DividendPayingERC20Token.sol\":5596:5623  lpHolders.push(deadAddress) */\n      dup5\n      add\n      dup6\n      sstore\n      swap4\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_2aae2886df6780c9b9d8fffa80836b2a0bdc3f69298294d45045d94457f72ca2\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":5611:5622  deadAddress */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"contracts/DividendPayingERC20Token.sol\":5596:5623  lpHolders.push(deadAddress) */\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":5488:5635  if (0 == lpHolderIndex[deadAddress]) {... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":5660:5681  lpHolderIndex[sender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":5660:5673  lpHolderIndex */\n      0x13\n        /* \"contracts/DividendPayingERC20Token.sol\":5660:5681  lpHolderIndex[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/DividendPayingERC20Token.sol\":5655:5681  0 == lpHolderIndex[sender] */\n      swap1\n      sub\n        /* \"contracts/DividendPayingERC20Token.sol\":5651:5783  if (0 == lpHolderIndex[sender]) {... */\n      tag_147\n      jumpi\n        /* \"contracts/DividendPayingERC20Token.sol\":5720:5729  lpHolders */\n      0x12\n        /* \"contracts/DividendPayingERC20Token.sol\":5720:5736  lpHolders.length */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DividendPayingERC20Token.sol\":5696:5717  lpHolderIndex[sender] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DividendPayingERC20Token.sol\":5696:5709  lpHolderIndex */\n      0x13\n        /* \"contracts/DividendPayingERC20Token.sol\":5696:5717  lpHolderIndex[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/DividendPayingERC20Token.sol\":5696:5736  lpHolderIndex[sender] = lpHolders.length */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":5749:5771  lpHolders.push(sender) */\n      0x01\n      dup4\n      add\n      dup5\n      sstore\n      swap3\n      swap1\n      swap3\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_2aae2886df6780c9b9d8fffa80836b2a0bdc3f69298294d45045d94457f72ca2\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DividendPayingERC20Token.sol\":5651:5783  if (0 == lpHolderIndex[sender]) {... */\n    tag_147:\n        /* \"contracts/DividendPayingERC20Token.sol\":5215:5808  function ariver(uint256 amount,address sender)internal virtual   {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_149:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_153:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_23:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_155:\n        /* \"#utility.yul\":343:372   */\n      tag_156\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_149\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1206:1386   */\n    tag_61:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1318:1320   */\n      0x20\n        /* \"#utility.yul\":1306:1315   */\n      dup3\n        /* \"#utility.yul\":1297:1304   */\n      dup5\n        /* \"#utility.yul\":1293:1316   */\n      sub\n        /* \"#utility.yul\":1289:1321   */\n      slt\n        /* \"#utility.yul\":1286:1338   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1334:1335   */\n      0x00\n        /* \"#utility.yul\":1331:1332   */\n      dup1\n        /* \"#utility.yul\":1324:1336   */\n      revert\n        /* \"#utility.yul\":1286:1338   */\n    tag_162:\n      pop\n        /* \"#utility.yul\":1357:1380   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1206:1386   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1391:1645   */\n    tag_78:\n        /* \"#utility.yul\":1459:1465   */\n      0x00\n        /* \"#utility.yul\":1467:1473   */\n      dup1\n        /* \"#utility.yul\":1520:1522   */\n      0x40\n        /* \"#utility.yul\":1508:1517   */\n      dup4\n        /* \"#utility.yul\":1499:1506   */\n      dup6\n        /* \"#utility.yul\":1495:1518   */\n      sub\n        /* \"#utility.yul\":1491:1523   */\n      slt\n        /* \"#utility.yul\":1488:1540   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":1536:1537   */\n      0x00\n        /* \"#utility.yul\":1533:1534   */\n      dup1\n        /* \"#utility.yul\":1526:1538   */\n      revert\n        /* \"#utility.yul\":1488:1540   */\n    tag_164:\n        /* \"#utility.yul\":1572:1581   */\n      dup3\n        /* \"#utility.yul\":1559:1582   */\n      calldataload\n        /* \"#utility.yul\":1549:1582   */\n      swap2\n      pop\n        /* \"#utility.yul\":1601:1639   */\n      tag_165\n        /* \"#utility.yul\":1635:1637   */\n      0x20\n        /* \"#utility.yul\":1624:1633   */\n      dup5\n        /* \"#utility.yul\":1620:1638   */\n      add\n        /* \"#utility.yul\":1601:1639   */\n      tag_149\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1591:1639   */\n      swap1\n      pop\n        /* \"#utility.yul\":1391:1645   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2369:2496   */\n    tag_150:\n        /* \"#utility.yul\":2430:2440   */\n      0x4e487b71\n        /* \"#utility.yul\":2425:2428   */\n      0xe0\n        /* \"#utility.yul\":2421:2441   */\n      shl\n        /* \"#utility.yul\":2418:2419   */\n      0x00\n        /* \"#utility.yul\":2411:2442   */\n      mstore\n        /* \"#utility.yul\":2461:2465   */\n      0x11\n        /* \"#utility.yul\":2458:2459   */\n      0x04\n        /* \"#utility.yul\":2451:2466   */\n      mstore\n        /* \"#utility.yul\":2485:2489   */\n      0x24\n        /* \"#utility.yul\":2482:2483   */\n      0x00\n        /* \"#utility.yul\":2475:2490   */\n      revert\n        /* \"#utility.yul\":2501:2626   */\n    tag_104:\n        /* \"#utility.yul\":2566:2575   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2587:2597   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2584:2620   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":2600:2618   */\n      tag_100\n      tag_150\n      jump\t// in\n        /* \"#utility.yul\":2631:2759   */\n    tag_110:\n        /* \"#utility.yul\":2698:2707   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2719:2730   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2716:2753   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":2733:2751   */\n      tag_100\n      tag_150\n      jump\t// in\n        /* \"#utility.yul\":2764:2891   */\n    tag_119:\n        /* \"#utility.yul\":2825:2835   */\n      0x4e487b71\n        /* \"#utility.yul\":2820:2823   */\n      0xe0\n        /* \"#utility.yul\":2816:2836   */\n      shl\n        /* \"#utility.yul\":2813:2814   */\n      0x00\n        /* \"#utility.yul\":2806:2837   */\n      mstore\n        /* \"#utility.yul\":2856:2860   */\n      0x32\n        /* \"#utility.yul\":2853:2854   */\n      0x04\n        /* \"#utility.yul\":2846:2861   */\n      mstore\n        /* \"#utility.yul\":2880:2884   */\n      0x24\n        /* \"#utility.yul\":2877:2878   */\n      0x00\n        /* \"#utility.yul\":2870:2885   */\n      revert\n        /* \"#utility.yul\":2896:3064   */\n    tag_125:\n        /* \"#utility.yul\":2969:2978   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3000:3009   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3017:3032   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3011:3033   */\n      dup5\n      eq\n        /* \"#utility.yul\":2997:3034   */\n      or\n        /* \"#utility.yul\":2987:3058   */\n      tag_100\n      jumpi\n        /* \"#utility.yul\":3038:3056   */\n      tag_100\n      tag_150\n      jump\t// in\n        /* \"#utility.yul\":3069:3286   */\n    tag_127:\n        /* \"#utility.yul\":3109:3110   */\n      0x00\n        /* \"#utility.yul\":3135:3136   */\n      dup3\n        /* \"#utility.yul\":3125:3257   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":3179:3189   */\n      0x4e487b71\n        /* \"#utility.yul\":3174:3177   */\n      0xe0\n        /* \"#utility.yul\":3170:3190   */\n      shl\n        /* \"#utility.yul\":3167:3168   */\n      0x00\n        /* \"#utility.yul\":3160:3191   */\n      mstore\n        /* \"#utility.yul\":3214:3218   */\n      0x12\n        /* \"#utility.yul\":3211:3212   */\n      0x04\n        /* \"#utility.yul\":3204:3219   */\n      mstore\n        /* \"#utility.yul\":3242:3246   */\n      0x24\n        /* \"#utility.yul\":3239:3240   */\n      0x00\n        /* \"#utility.yul\":3232:3247   */\n      revert\n        /* \"#utility.yul\":3125:3257   */\n    tag_180:\n      pop\n        /* \"#utility.yul\":3271:3280   */\n      div\n      swap1\n        /* \"#utility.yul\":3069:3286   */\n      jump\t// out\n        /* \"#utility.yul\":3570:3847   */\n    tag_134:\n        /* \"#utility.yul\":3637:3643   */\n      0x00\n        /* \"#utility.yul\":3690:3692   */\n      0x20\n        /* \"#utility.yul\":3678:3687   */\n      dup3\n        /* \"#utility.yul\":3669:3676   */\n      dup5\n        /* \"#utility.yul\":3665:3688   */\n      sub\n        /* \"#utility.yul\":3661:3693   */\n      slt\n        /* \"#utility.yul\":3658:3710   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":3706:3707   */\n      0x00\n        /* \"#utility.yul\":3703:3704   */\n      dup1\n        /* \"#utility.yul\":3696:3708   */\n      revert\n        /* \"#utility.yul\":3658:3710   */\n    tag_183:\n        /* \"#utility.yul\":3738:3747   */\n      dup2\n        /* \"#utility.yul\":3732:3748   */\n      mload\n        /* \"#utility.yul\":3791:3796   */\n      dup1\n        /* \"#utility.yul\":3784:3797   */\n      iszero\n        /* \"#utility.yul\":3777:3798   */\n      iszero\n        /* \"#utility.yul\":3770:3775   */\n      dup2\n        /* \"#utility.yul\":3767:3799   */\n      eq\n        /* \"#utility.yul\":3757:3817   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3852:3987   */\n    tag_139:\n        /* \"#utility.yul\":3891:3894   */\n      0x00\n        /* \"#utility.yul\":3912:3929   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3909:3952   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":3932:3950   */\n      tag_187\n      tag_150\n      jump\t// in\n    tag_187:\n      pop\n        /* \"#utility.yul\":3979:3980   */\n      0x01\n        /* \"#utility.yul\":3968:3981   */\n      add\n      swap1\n        /* \"#utility.yul\":3852:3987   */\n      jump\t// out\n    stop\n    data_2aae2886df6780c9b9d8fffa80836b2a0bdc3f69298294d45045d94457f72ca2 bb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444\n\n    auxdata: 0xa2646970667358221220627fd2be6fdf50c2f950902765a954562daa58332ddfa84b3dee1463227171da64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_270": {
									"entryPoint": null,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50601780546001600160a01b0319908116331790915560c8600755662386f26fc1000060095569010f0cf064dd592000006008556207a120600a556015805490911661dead9081179091555f90815260208190527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf8355610889806100925f395ff3fe608060405234801561000f575f80fd5b50600436106100e4575f3560e01c80630affb402146100e85780631210c4341461011a57806315c43aaf146101235780632a5955121461013e5780633a7960e0146101475780633fe9f9f714610150578063621f9c0a1461015957806370a08231146101625780638da5cb5b1461018a57806397a06724146101b55780639f0d7eb8146101d4578063a36a7526146101e7578063add0a6c6146101fc578063b367bf8314610205578063bd8767021461020e578063dd2cad6014610217578063eb10b7411461022a578063ec1f1f6914610233575b5f80fd5b6101076100f6366004610717565b60136020525f908152604090205481565b6040519081526020015b60405180910390f35b61010760145481565b60015460025460408051928352602083019190915201610111565b61010760065481565b61010760055481565b61010760085481565b610107600b5481565b610107610170366004610717565b6001600160a01b03165f9081526020819052604090205490565b60175461019d906001600160a01b031681565b6040516001600160a01b039091168152602001610111565b6101076101c3366004610717565b60036020525f908152604090205481565b61019d6101e2366004610737565b610246565b6101fa6101f5366004610717565b61026e565b005b61010760075481565b610107600c5481565b610107600a5481565b61010761022536600461074e565b6102ef565b61010760095481565b60165461019d906001600160a01b031681565b60128181548110610255575f80fd5b5f918252602090912001546001600160a01b0316905081565b6017546001600160a01b031633146102cd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b601680546001600160a01b0319166001600160a01b0392909216919091179055565b6016545f906001600160a01b0316331461034b5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f7000000060448201526064016102c4565b610355838361059f565b43600754600654610366919061078c565b111561037357505f610599565b600d54158061039d57506015546001600160a01b03165f908152600e6020526040902054600d5411155b156103a957505f610599565b600b54600c54106103bb57505f610599565b5f600c54600b546103cc919061079f565b90506009548110806103df575060095447105b156103ed575f915050610599565b6012545f90819081908180805a90505b600a548310801561040d57508382105b1561058a578360145410610420575f6014555b601260145481548110610435576104356107b2565b5f9182526020808320909101546001600160a01b0316808352600e9091526040909120549097509550851580159061047b57506015546001600160a01b03888116911614155b15610549576015546001600160a01b03165f908152600e6020526040902054600d546104a7919061079f565b6104b1878a6107c6565b6104bb91906107dd565b945084156105495760405163a9059cbb60e01b81526001600160a01b038816600482015260248101869052339063a9059cbb906044016020604051808303815f875af115801561050d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053191906107fc565b5084600c5f828254610543919061078c565b90915550505b5a610554908261079f565b61055e908461078c565b92505a601480549192505f6105728361081b565b919050555081806105829061081b565b9250506103fd565b50504360065550909450505050505b92915050565b81600d5f8282546105b0919061078c565b90915550506001600160a01b0381165f908152600e6020526040812080548492906105dc90849061078c565b90915550506001600160a01b0381165f908152600f6020908152604080832042905560109091528120805434929061061590849061078c565b90915550506015546001600160a01b03165f9081526013602052604081205490036106915760128054601580546001600160a01b039081165f9081526013602052604081208490559154600184018555939091525f8051602061083483398151915290910180546001600160a01b031916929091169190911790555b6001600160a01b0381165f9081526013602052604081205490036106f857601280546001600160a01b0383165f818152601360205260408120839055600183018455929092525f805160206108348339815191520180546001600160a01b03191690911790555b5050565b80356001600160a01b0381168114610712575f80fd5b919050565b5f60208284031215610727575f80fd5b610730826106fc565b9392505050565b5f60208284031215610747575f80fd5b5035919050565b5f806040838503121561075f575f80fd5b8235915061076f602084016106fc565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561059957610599610778565b8181038181111561059957610599610778565b634e487b7160e01b5f52603260045260245ffd5b808202811582820484141761059957610599610778565b5f826107f757634e487b7160e01b5f52601260045260245ffd5b500490565b5f6020828403121561080c575f80fd5b81518015158114610730575f80fd5b5f6001820161082c5761082c610778565b506001019056febb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444a2646970667358221220627fd2be6fdf50c2f950902765a954562daa58332ddfa84b3dee1463227171da64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x17 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0xC8 PUSH1 0x7 SSTORE PUSH7 0x2386F26FC10000 PUSH1 0x9 SSTORE PUSH10 0x10F0CF064DD59200000 PUSH1 0x8 SSTORE PUSH3 0x7A120 PUSH1 0xA SSTORE PUSH1 0x15 DUP1 SLOAD SWAP1 SWAP2 AND PUSH2 0xDEAD SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83 SSTORE PUSH2 0x889 DUP1 PUSH2 0x92 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFB402 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x1210C434 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x15C43AAF EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x2A595512 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x3A7960E0 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x3FE9F9F7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x621F9C0A EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x97A06724 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x9F0D7EB8 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xA36A7526 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xADD0A6C6 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xB367BF83 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xBD876702 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xDD2CAD60 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xEB10B741 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xEC1F1F69 EQ PUSH2 0x233 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x111 JUMP JUMPDEST PUSH2 0x107 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0x19D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x111 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x737 JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x74E JUMP JUMPDEST PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x107 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x19D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x16 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F70000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x355 DUP4 DUP4 PUSH2 0x59F JUMP JUMPDEST NUMBER PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x78C JUMP JUMPDEST GT ISZERO PUSH2 0x373 JUMPI POP PUSH0 PUSH2 0x599 JUMP JUMPDEST PUSH1 0xD SLOAD ISZERO DUP1 PUSH2 0x39D JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x3A9 JUMPI POP PUSH0 PUSH2 0x599 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xC SLOAD LT PUSH2 0x3BB JUMPI POP PUSH0 PUSH2 0x599 JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 LT DUP1 PUSH2 0x3DF JUMPI POP PUSH1 0x9 SLOAD SELFBALANCE LT JUMPDEST ISZERO PUSH2 0x3ED JUMPI PUSH0 SWAP2 POP POP PUSH2 0x599 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 DUP1 DUP1 GAS SWAP1 POP JUMPDEST PUSH1 0xA SLOAD DUP4 LT DUP1 ISZERO PUSH2 0x40D JUMPI POP DUP4 DUP3 LT JUMPDEST ISZERO PUSH2 0x58A JUMPI DUP4 PUSH1 0x14 SLOAD LT PUSH2 0x420 JUMPI PUSH0 PUSH1 0x14 SSTORE JUMPDEST PUSH1 0x12 PUSH1 0x14 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x435 JUMPI PUSH2 0x435 PUSH2 0x7B2 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP8 POP SWAP6 POP DUP6 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x47B JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x549 JUMPI PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xD SLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x4B1 DUP8 DUP11 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST SWAP5 POP DUP5 ISZERO PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x50D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x7FC JUMP JUMPDEST POP DUP5 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x78C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST GAS PUSH2 0x554 SWAP1 DUP3 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x55E SWAP1 DUP5 PUSH2 0x78C JUMP JUMPDEST SWAP3 POP GAS PUSH1 0x14 DUP1 SLOAD SWAP2 SWAP3 POP PUSH0 PUSH2 0x572 DUP4 PUSH2 0x81B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 DUP1 PUSH2 0x582 SWAP1 PUSH2 0x81B JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3FD JUMP JUMPDEST POP POP NUMBER PUSH1 0x6 SSTORE POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x78C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x5DC SWAP1 DUP5 SWAP1 PUSH2 0x78C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x615 SWAP1 DUP5 SWAP1 PUSH2 0x78C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x691 JUMPI PUSH1 0x12 DUP1 SLOAD PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP1 SSTORE SWAP2 SLOAD PUSH1 0x1 DUP5 ADD DUP6 SSTORE SWAP4 SWAP1 SWAP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x834 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x6F8 JUMPI PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x1 DUP4 ADD DUP5 SSTORE SWAP3 SWAP1 SWAP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x834 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x712 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x730 DUP3 PUSH2 0x6FC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x747 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x76F PUSH1 0x20 DUP5 ADD PUSH2 0x6FC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x599 JUMPI PUSH2 0x599 PUSH2 0x778 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x599 JUMPI PUSH2 0x599 PUSH2 0x778 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x599 JUMPI PUSH2 0x599 PUSH2 0x778 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x7F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x730 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x82C JUMPI PUSH2 0x82C PUSH2 0x778 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0xBB DUP11 PUSH11 0x4669BA250D26CD7A459ECA SWAP14 0x21 PUSH0 DUP4 SMOD 0xE3 GASPRICE 0xEB 0xE5 SUB PUSH26 0xBC5A3617EC3444A2646970667358221220627FD2BE6FDF50C2F9 POP SWAP1 0x27 PUSH6 0xA954562DAA58 CALLER 0x2D 0xDF 0xA8 0x4B RETURNDATASIZE 0xEE EQ PUSH4 0x227171DA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "1158:4992:0:-:0;;;2790:468;;;;;;;;;-1:-1:-1;2860:5:0;:18;;-1:-1:-1;;;;;;2860:18:0;;;2868:10;2860:18;;;;2959:3;2934:22;:28;2997:12;2973:21;:36;3039:15;3021;:33;3079:6;3065:11;:20;3103:11;:65;;;;;3125:42;3103:65;;;;;;2860:5;3199:22;;;;;;;;:32;1158:4992;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ariver_536": {
									"entryPoint": 1439,
									"id": 536,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_548": {
									"entryPoint": null,
									"id": 548,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@contractInfo_572": {
									"entryPoint": null,
									"id": 572,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@currentLpIndex_182": {
									"entryPoint": null,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dividendGas_151": {
									"entryPoint": null,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@holderCondition_147": {
									"entryPoint": null,
									"id": 147,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@holderRewardCondition_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lpBonusEd_155": {
									"entryPoint": null,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lpBonus_153": {
									"entryPoint": null,
									"id": 153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lpHolderIndex_180": {
									"entryPoint": null,
									"id": 180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lpHolders_176": {
									"entryPoint": 582,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@magnifiedDividendCorrections_135": {
									"entryPoint": null,
									"id": 135,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@magnifiedDividendPerShare_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@op_198": {
									"entryPoint": null,
									"id": 198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_200": {
									"entryPoint": null,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@processReward_464": {
									"entryPoint": 751,
									"id": 464,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@progressRewardBlockAdd_145": {
									"entryPoint": null,
									"id": 145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@progressRewardBlock_143": {
									"entryPoint": null,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setOp_560": {
									"entryPoint": 622,
									"id": 560,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 1870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e40f126b6d294d386b9318667f8073c346170d4b28771bafce6db84dba382835__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3989:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "453:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "464:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "475:4:1",
														"type": ""
													}
												],
												"src": "383:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "694:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "704:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "716:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "727:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "712:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "704:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "746:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "757:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "739:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "739:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "739:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "784:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "795:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "780:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "780:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "800:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "655:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "666:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "674:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "685:4:1",
														"type": ""
													}
												],
												"src": "565:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "919:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "929:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "941:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "952:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "937:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "937:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "929:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "971:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "986:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1002:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1007:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "998:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "998:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1011:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "994:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "994:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "982:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "982:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "964:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "964:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "888:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "899:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "910:4:1",
														"type": ""
													}
												],
												"src": "818:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1125:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1135:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1147:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1143:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1143:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1135:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1177:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1188:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1170:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1170:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1170:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1094:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1105:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1116:4:1",
														"type": ""
													}
												],
												"src": "1026:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1276:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1322:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1334:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1324:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1324:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1324:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1297:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1306:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1293:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1318:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1289:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1289:32:1"
															},
															"nodeType": "YulIf",
															"src": "1286:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1347:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1370:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1357:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1357:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1347:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:1",
														"type": ""
													}
												],
												"src": "1206:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1478:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1524:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1533:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1536:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1526:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1526:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1499:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1508:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1495:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1495:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1520:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1491:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:32:1"
															},
															"nodeType": "YulIf",
															"src": "1488:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1549:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1572:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1559:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1559:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1549:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1591:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1624:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1635:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1620:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1620:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1601:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1591:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1436:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1447:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1459:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1467:6:1",
														"type": ""
													}
												],
												"src": "1391:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1824:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1841:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1852:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1834:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1834:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1834:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1875:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1886:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1891:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1864:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1864:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1914:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1925:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1910:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1930:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1903:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1903:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1974:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1986:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1997:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1982:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1982:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1974:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1801:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1815:4:1",
														"type": ""
													}
												],
												"src": "1650:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2185:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2202:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2213:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2195:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2195:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2195:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2236:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2247:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2232:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2232:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2252:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2225:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2225:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2275:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2286:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2271:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2271:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f70",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2291:31:1",
																		"type": "",
																		"value": "Ownable: caller is not the op"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2264:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2332:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2344:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2355:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2340:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2340:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2332:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e40f126b6d294d386b9318667f8073c346170d4b28771bafce6db84dba382835__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2162:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2176:4:1",
														"type": ""
													}
												],
												"src": "2011:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2401:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2418:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2425:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2430:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2421:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2411:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2411:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2458:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2461:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2451:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2482:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2485:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2475:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2475:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2475:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2369:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2549:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2559:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2570:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2573:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2566:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2559:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2598:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2600:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2600:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2600:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2590:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2593:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2587:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:10:1"
															},
															"nodeType": "YulIf",
															"src": "2584:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2532:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2535:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2541:3:1",
														"type": ""
													}
												],
												"src": "2501:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2680:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2690:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2702:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2705:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2698:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2698:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2690:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2731:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2733:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2733:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2733:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2722:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2728:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2719:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2719:11:1"
															},
															"nodeType": "YulIf",
															"src": "2716:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2662:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2665:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2671:4:1",
														"type": ""
													}
												],
												"src": "2631:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2796:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2813:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2820:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2825:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2816:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2816:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2806:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2853:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2856:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2846:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2846:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2846:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2877:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2880:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2870:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2870:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2870:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2764:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2948:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2958:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2973:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2976:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2969:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2958:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3036:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3038:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3038:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3038:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3007:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3000:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3000:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3014:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3021:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "3030:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3017:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3017:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3011:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3011:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2997:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2997:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2990:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2990:45:1"
															},
															"nodeType": "YulIf",
															"src": "2987:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2927:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2930:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2936:7:1",
														"type": ""
													}
												],
												"src": "2896:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3115:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3146:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3167:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3174:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3179:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3170:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3170:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3160:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3160:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3160:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3211:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3214:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3204:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3204:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3204:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3239:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3242:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3232:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3232:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3232:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3135:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:9:1"
															},
															"nodeType": "YulIf",
															"src": "3125:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3266:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3275:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3278:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3266:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3100:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3103:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3109:1:1",
														"type": ""
													}
												],
												"src": "3069:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3420:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3430:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3442:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3453:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3438:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3438:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3430:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3472:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3487:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3503:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3508:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3499:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3499:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3512:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3495:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3495:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3483:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3483:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3465:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3465:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3536:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3547:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3532:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3532:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3552:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3525:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3525:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3525:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3381:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3392:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3400:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3411:4:1",
														"type": ""
													}
												],
												"src": "3291:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3648:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3694:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3703:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3706:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3696:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3696:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3696:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3669:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3678:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3690:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3661:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3661:32:1"
															},
															"nodeType": "YulIf",
															"src": "3658:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3719:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3738:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3732:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3723:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3770:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3791:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3784:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3784:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3777:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3777:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3767:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3760:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3760:40:1"
															},
															"nodeType": "YulIf",
															"src": "3757:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3836:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3614:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3625:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3637:6:1",
														"type": ""
													}
												],
												"src": "3570:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3899:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3930:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3932:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3932:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3932:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3915:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3926:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3922:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3922:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3912:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:17:1"
															},
															"nodeType": "YulIf",
															"src": "3909:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3961:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3972:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3979:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3968:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3961:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3881:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3891:3:1",
														"type": ""
													}
												],
												"src": "3852:135:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e40f126b6d294d386b9318667f8073c346170d4b28771bafce6db84dba382835__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Ownable: caller is not the op\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e4575f3560e01c80630affb402146100e85780631210c4341461011a57806315c43aaf146101235780632a5955121461013e5780633a7960e0146101475780633fe9f9f714610150578063621f9c0a1461015957806370a08231146101625780638da5cb5b1461018a57806397a06724146101b55780639f0d7eb8146101d4578063a36a7526146101e7578063add0a6c6146101fc578063b367bf8314610205578063bd8767021461020e578063dd2cad6014610217578063eb10b7411461022a578063ec1f1f6914610233575b5f80fd5b6101076100f6366004610717565b60136020525f908152604090205481565b6040519081526020015b60405180910390f35b61010760145481565b60015460025460408051928352602083019190915201610111565b61010760065481565b61010760055481565b61010760085481565b610107600b5481565b610107610170366004610717565b6001600160a01b03165f9081526020819052604090205490565b60175461019d906001600160a01b031681565b6040516001600160a01b039091168152602001610111565b6101076101c3366004610717565b60036020525f908152604090205481565b61019d6101e2366004610737565b610246565b6101fa6101f5366004610717565b61026e565b005b61010760075481565b610107600c5481565b610107600a5481565b61010761022536600461074e565b6102ef565b61010760095481565b60165461019d906001600160a01b031681565b60128181548110610255575f80fd5b5f918252602090912001546001600160a01b0316905081565b6017546001600160a01b031633146102cd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b601680546001600160a01b0319166001600160a01b0392909216919091179055565b6016545f906001600160a01b0316331461034b5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f7000000060448201526064016102c4565b610355838361059f565b43600754600654610366919061078c565b111561037357505f610599565b600d54158061039d57506015546001600160a01b03165f908152600e6020526040902054600d5411155b156103a957505f610599565b600b54600c54106103bb57505f610599565b5f600c54600b546103cc919061079f565b90506009548110806103df575060095447105b156103ed575f915050610599565b6012545f90819081908180805a90505b600a548310801561040d57508382105b1561058a578360145410610420575f6014555b601260145481548110610435576104356107b2565b5f9182526020808320909101546001600160a01b0316808352600e9091526040909120549097509550851580159061047b57506015546001600160a01b03888116911614155b15610549576015546001600160a01b03165f908152600e6020526040902054600d546104a7919061079f565b6104b1878a6107c6565b6104bb91906107dd565b945084156105495760405163a9059cbb60e01b81526001600160a01b038816600482015260248101869052339063a9059cbb906044016020604051808303815f875af115801561050d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053191906107fc565b5084600c5f828254610543919061078c565b90915550505b5a610554908261079f565b61055e908461078c565b92505a601480549192505f6105728361081b565b919050555081806105829061081b565b9250506103fd565b50504360065550909450505050505b92915050565b81600d5f8282546105b0919061078c565b90915550506001600160a01b0381165f908152600e6020526040812080548492906105dc90849061078c565b90915550506001600160a01b0381165f908152600f6020908152604080832042905560109091528120805434929061061590849061078c565b90915550506015546001600160a01b03165f9081526013602052604081205490036106915760128054601580546001600160a01b039081165f9081526013602052604081208490559154600184018555939091525f8051602061083483398151915290910180546001600160a01b031916929091169190911790555b6001600160a01b0381165f9081526013602052604081205490036106f857601280546001600160a01b0383165f818152601360205260408120839055600183018455929092525f805160206108348339815191520180546001600160a01b03191690911790555b5050565b80356001600160a01b0381168114610712575f80fd5b919050565b5f60208284031215610727575f80fd5b610730826106fc565b9392505050565b5f60208284031215610747575f80fd5b5035919050565b5f806040838503121561075f575f80fd5b8235915061076f602084016106fc565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561059957610599610778565b8181038181111561059957610599610778565b634e487b7160e01b5f52603260045260245ffd5b808202811582820484141761059957610599610778565b5f826107f757634e487b7160e01b5f52601260045260245ffd5b500490565b5f6020828403121561080c575f80fd5b81518015158114610730575f80fd5b5f6001820161082c5761082c610778565b506001019056febb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444a2646970667358221220627fd2be6fdf50c2f950902765a954562daa58332ddfa84b3dee1463227171da64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFB402 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x1210C434 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x15C43AAF EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x2A595512 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x3A7960E0 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x3FE9F9F7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x621F9C0A EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x97A06724 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x9F0D7EB8 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xA36A7526 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xADD0A6C6 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xB367BF83 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xBD876702 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xDD2CAD60 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xEB10B741 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xEC1F1F69 EQ PUSH2 0x233 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x111 JUMP JUMPDEST PUSH2 0x107 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0x19D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x111 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x737 JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x74E JUMP JUMPDEST PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x107 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0x19D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x16 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F70000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x355 DUP4 DUP4 PUSH2 0x59F JUMP JUMPDEST NUMBER PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x78C JUMP JUMPDEST GT ISZERO PUSH2 0x373 JUMPI POP PUSH0 PUSH2 0x599 JUMP JUMPDEST PUSH1 0xD SLOAD ISZERO DUP1 PUSH2 0x39D JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x3A9 JUMPI POP PUSH0 PUSH2 0x599 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xC SLOAD LT PUSH2 0x3BB JUMPI POP PUSH0 PUSH2 0x599 JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 LT DUP1 PUSH2 0x3DF JUMPI POP PUSH1 0x9 SLOAD SELFBALANCE LT JUMPDEST ISZERO PUSH2 0x3ED JUMPI PUSH0 SWAP2 POP POP PUSH2 0x599 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 DUP1 DUP1 GAS SWAP1 POP JUMPDEST PUSH1 0xA SLOAD DUP4 LT DUP1 ISZERO PUSH2 0x40D JUMPI POP DUP4 DUP3 LT JUMPDEST ISZERO PUSH2 0x58A JUMPI DUP4 PUSH1 0x14 SLOAD LT PUSH2 0x420 JUMPI PUSH0 PUSH1 0x14 SSTORE JUMPDEST PUSH1 0x12 PUSH1 0x14 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x435 JUMPI PUSH2 0x435 PUSH2 0x7B2 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP8 POP SWAP6 POP DUP6 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x47B JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x549 JUMPI PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xD SLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x4B1 DUP8 DUP11 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST SWAP5 POP DUP5 ISZERO PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x50D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x7FC JUMP JUMPDEST POP DUP5 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x78C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST GAS PUSH2 0x554 SWAP1 DUP3 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x55E SWAP1 DUP5 PUSH2 0x78C JUMP JUMPDEST SWAP3 POP GAS PUSH1 0x14 DUP1 SLOAD SWAP2 SWAP3 POP PUSH0 PUSH2 0x572 DUP4 PUSH2 0x81B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 DUP1 PUSH2 0x582 SWAP1 PUSH2 0x81B JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3FD JUMP JUMPDEST POP POP NUMBER PUSH1 0x6 SSTORE POP SWAP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x78C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x5DC SWAP1 DUP5 SWAP1 PUSH2 0x78C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x615 SWAP1 DUP5 SWAP1 PUSH2 0x78C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x691 JUMPI PUSH1 0x12 DUP1 SLOAD PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP5 SWAP1 SSTORE SWAP2 SLOAD PUSH1 0x1 DUP5 ADD DUP6 SSTORE SWAP4 SWAP1 SWAP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x834 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x6F8 JUMPI PUSH1 0x12 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x1 DUP4 ADD DUP5 SSTORE SWAP3 SWAP1 SWAP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x834 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x712 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x730 DUP3 PUSH2 0x6FC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x747 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x76F PUSH1 0x20 DUP5 ADD PUSH2 0x6FC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x599 JUMPI PUSH2 0x599 PUSH2 0x778 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x599 JUMPI PUSH2 0x599 PUSH2 0x778 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x599 JUMPI PUSH2 0x599 PUSH2 0x778 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x7F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x730 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x82C JUMPI PUSH2 0x82C PUSH2 0x778 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0xBB DUP11 PUSH11 0x4669BA250D26CD7A459ECA SWAP14 0x21 PUSH0 DUP4 SMOD 0xE3 GASPRICE 0xEB 0xE5 SUB PUSH26 0xBC5A3617EC3444A2646970667358221220627FD2BE6FDF50C2F9 POP SWAP1 0x27 PUSH6 0xA954562DAA58 CALLER 0x2D 0xDF 0xA8 0x4B RETURNDATASIZE 0xEE EQ PUSH4 0x227171DA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "1158:4992:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2181:48;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:1;;;517:2;502:18;2181:48:0;;;;;;;;2236:29;;;;;;6016:131;6099:12;;6113:25;;6016:131;;;739:25:1;;;795:2;780:18;;773:34;;;;712:18;6016:131:0;565:248:1;1641:34:0;;;;;;1592:40;;;;;;1726:30;;;;;;1840:22;;;;;;5820:110;;;;;;:::i;:::-;-1:-1:-1;;;;;5904:18:0;5877:7;5904:18;;;;;;;;;;;;5820:110;2526:20;;;;;-1:-1:-1;;;;;2526:20:0;;;;;;-1:-1:-1;;;;;982:32:1;;;964:51;;952:2;937:18;2526:20:0;818:203:1;1460:62:0;;;;;;:::i;:::-;;;;;;;;;;;;;;2148:26;;;;;;:::i;:::-;;:::i;5938:70::-;;;;;;:::i;:::-;;:::i;:::-;;1682:37;;;;;;1869:24;;;;;;1807:26;;;;;;3268:1939;;;;;;:::i;:::-;;:::i;1763:36::-;;;;;;2502:17;;;;;-1:-1:-1;;;;;2502:17:0;;;2148:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2148:26:0;;-1:-1:-1;2148:26:0;:::o;5938:70::-;2706:5;;-1:-1:-1;;;;;2706:5:0;2715:10;2706:19;2698:64;;;;-1:-1:-1;;;2698:64:0;;1852:2:1;2698:64:0;;;1834:21:1;;;1871:18;;;1864:30;1930:34;1910:18;;;1903:62;1982:18;;2698:64:0;;;;;;;;;5994:2:::1;:6:::0;;-1:-1:-1;;;;;;5994:6:0::1;-1:-1:-1::0;;;;;5994:6:0;;;::::1;::::0;;;::::1;::::0;;5938:70::o;3268:1939::-;2590:2;;3349:7;;-1:-1:-1;;;;;2590:2:0;2596:10;2590:16;2582:58;;;;-1:-1:-1;;;2582:58:0;;2213:2:1;2582:58:0;;;2195:21:1;2252:2;2232:18;;;2225:30;2291:31;2271:18;;;2264:59;2340:18;;2582:58:0;2011:353:1;2582:58:0;3379:20:::1;3386:7;3394:4;3379:6;:20::i;:::-;3471:12;3446:22;;3424:19;;:44;;;;:::i;:::-;:59;3420:100;;;-1:-1:-1::0;3507:1:0::1;3500:8;;3420:100;3536:13;::::0;:18;;:63:::1;;-1:-1:-1::0;3587:11:0::1;::::0;-1:-1:-1;;;;;3587:11:0::1;3575:24;::::0;;;:11:::1;:24;::::0;;;;;3558:13:::1;::::0;:41:::1;;3536:63;3532:101;;;-1:-1:-1::0;3620:1:0::1;3613:8;;3532:101;3662:7;;3649:9;;:20;3645:58;;-1:-1:-1::0;3690:1:0::1;3683:8;;3645:58;3713:15;3741:9;;3731:7;;:19;;;;:::i;:::-;3713:37;;3775:21;;3765:7;:31;:80;;;;3824:21;;3800;:45;3765:80;3761:121;;;3869:1;3862:8;;;;;3761:121;4012:9;:16:::0;3906::::1;::::0;;;;;;;;4122:9:::1;4104:27;;4152:977;4169:11;;4159:7;:21;:51;;;;;4197:13;4184:10;:26;4159:51;4152:977;;;4249:13;4231:14;;:31;4227:90;;4300:1;4283:14;:18:::0;4227:90:::1;4356:9;4366:14;;4356:25;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;4356:25:0::1;4408:21:::0;;;:11:::1;:21:::0;;;;;;;;4356:25;;-1:-1:-1;4408:21:0;-1:-1:-1;4461:12:0;;;;;:39:::1;;-1:-1:-1::0;4489:11:0::1;::::0;-1:-1:-1;;;;;4477:23:0;;::::1;4489:11:::0;::::1;4477:23;;4461:39;4458:478;;;4578:11;::::0;-1:-1:-1;;;;;4578:11:0::1;4566:24;::::0;;;:11:::1;:24;::::0;;;;;4552:13:::1;::::0;:38:::1;::::0;4566:24;4552:38:::1;:::i;:::-;4528:19;4538:9:::0;4528:7;:19:::1;:::i;:::-;4527:64;;;;:::i;:::-;4518:73:::0;-1:-1:-1;4614:10:0;;4610:311:::1;;4725:44;::::0;-1:-1:-1;;;4725:44:0;;-1:-1:-1;;;;;3483:32:1;;4725:44:0::1;::::0;::::1;3465:51:1::0;3532:18;;;3525:34;;;4732:10:0::1;::::0;4725:27:::1;::::0;3438:18:1;;4725:44:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4848:6;4835:9;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4610:311:0::1;5015:9;5005:19;::::0;:7;:19:::1;:::i;:::-;4994:31;::::0;:7;:31:::1;:::i;:::-;4984:41;;5050:9;5074:14;:16:::0;;5040:19;;-1:-1:-1;5074:14:0::1;:16;::::0;::::1;:::i;:::-;;;;;;5105:12;;;;;:::i;:::-;;;;4152:977;;;-1:-1:-1::0;;5163:12:0::1;5141:19;:34:::0;-1:-1:-1;5193:6:0;;-1:-1:-1;;;;;2651:1:0::1;3268:1939:::0;;;;:::o;5215:593::-;5339:6;5322:13;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;5354:19:0;;;;;;:11;:19;;;;;:29;;5377:6;;5354:19;:29;;5377:6;;5354:29;:::i;:::-;;;;-1:-1:-1;;;;;;;5392:19:0;;;;;;:11;:19;;;;;;;;5414:15;5392:37;;5439:8;:16;;;;;:29;;5459:9;;5392:19;5439:29;;5459:9;;5439:29;:::i;:::-;;;;-1:-1:-1;;5511:11:0;;-1:-1:-1;;;;;5511:11:0;5497:26;;;;:13;:26;;;;;;5492:31;;5488:147;;5567:9;:16;;5552:11;;;-1:-1:-1;;;;;5552:11:0;;;5538:26;;;;:13;:26;;;;;:45;;;5611:11;;5552;5596:27;;;;;;;;-1:-1:-1;;;;;;;;;;;5596:27:0;;;;;-1:-1:-1;;;;;;5596:27:0;5611:11;;;;5596:27;;;;;;5488:147;-1:-1:-1;;;;;5660:21:0;;;;;;:13;:21;;;;;;5655:26;;5651:132;;5720:9;:16;;-1:-1:-1;;;;;5696:21:0;;;;;;:13;:21;;;;;:40;;;5749:22;;;;;;;;;-1:-1:-1;;;;;;;;;;;5749:22:0;;;-1:-1:-1;;;;;;5749:22:0;;;;;;5651:132;5215:593;;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;1206:180::-;1265:6;1318:2;1306:9;1297:7;1293:23;1289:32;1286:52;;;1334:1;1331;1324:12;1286:52;-1:-1:-1;1357:23:1;;1206:180;-1:-1:-1;1206:180:1:o;1391:254::-;1459:6;1467;1520:2;1508:9;1499:7;1495:23;1491:32;1488:52;;;1536:1;1533;1526:12;1488:52;1572:9;1559:23;1549:33;;1601:38;1635:2;1624:9;1620:18;1601:38;:::i;:::-;1591:48;;1391:254;;;;;:::o;2369:127::-;2430:10;2425:3;2421:20;2418:1;2411:31;2461:4;2458:1;2451:15;2485:4;2482:1;2475:15;2501:125;2566:9;;;2587:10;;;2584:36;;;2600:18;;:::i;2631:128::-;2698:9;;;2719:11;;;2716:37;;;2733:18;;:::i;2764:127::-;2825:10;2820:3;2816:20;2813:1;2806:31;2856:4;2853:1;2846:15;2880:4;2877:1;2870:15;2896:168;2969:9;;;3000;;3017:15;;;3011:22;;2997:37;2987:71;;3038:18;;:::i;3069:217::-;3109:1;3135;3125:132;;3179:10;3174:3;3170:20;3167:1;3160:31;3214:4;3211:1;3204:15;3242:4;3239:1;3232:15;3125:132;-1:-1:-1;3271:9:1;;3069:217::o;3570:277::-;3637:6;3690:2;3678:9;3669:7;3665:23;3661:32;3658:52;;;3706:1;3703;3696:12;3658:52;3738:9;3732:16;3791:5;3784:13;3777:21;3770:5;3767:32;3757:60;;3813:1;3810;3803:12;3852:135;3891:3;3912:17;;;3909:43;;3932:18;;:::i;:::-;-1:-1:-1;3979:1:1;3968:13;;3852:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "437000",
								"executionCost": "142399",
								"totalCost": "579399"
							},
							"external": {
								"balanceOf(address)": "2658",
								"contractInfo()": "4428",
								"currentLpIndex()": "2283",
								"dividendGas()": "2569",
								"holderCondition()": "2371",
								"holderRewardCondition()": "2613",
								"lpBonus()": "2393",
								"lpBonusEd()": "2547",
								"lpHolderIndex(address)": "2483",
								"lpHolders(uint256)": "4809",
								"magnifiedDividendCorrections(address)": "2681",
								"magnifiedDividendPerShare()": "2349",
								"op()": "2688",
								"owner()": "2490",
								"processReward(uint256,address)": "infinite",
								"progressRewardBlock()": "2327",
								"progressRewardBlockAdd()": "2525",
								"setOp(address)": "26929"
							},
							"internal": {
								"ariver(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1158,
									"end": 6150,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1158,
									"end": 6150,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1158,
									"end": 6150,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 3258,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 3258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 3258,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 3258,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2790,
									"end": 3258,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 3258,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2790,
									"end": 3258,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 3258,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 3258,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2790,
									"end": 3258,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2860,
									"end": 2865,
									"name": "PUSH",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2860,
									"end": 2878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2860,
									"end": 2878,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2860,
									"end": 2878,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2860,
									"end": 2878,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2860,
									"end": 2878,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2868,
									"end": 2878,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2860,
									"end": 2878,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2860,
									"end": 2878,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2860,
									"end": 2878,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2860,
									"end": 2878,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2959,
									"end": 2962,
									"name": "PUSH",
									"source": 0,
									"value": "C8"
								},
								{
									"begin": 2934,
									"end": 2956,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2934,
									"end": 2962,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3009,
									"name": "PUSH",
									"source": 0,
									"value": "2386F26FC10000"
								},
								{
									"begin": 2973,
									"end": 2994,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2973,
									"end": 3009,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3039,
									"end": 3054,
									"name": "PUSH",
									"source": 0,
									"value": "10F0CF064DD59200000"
								},
								{
									"begin": 3021,
									"end": 3036,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3021,
									"end": 3054,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3079,
									"end": 3085,
									"name": "PUSH",
									"source": 0,
									"value": "7A120"
								},
								{
									"begin": 3065,
									"end": 3076,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 3065,
									"end": 3085,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3103,
									"end": 3114,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 3103,
									"end": 3168,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3103,
									"end": 3168,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3103,
									"end": 3168,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3103,
									"end": 3168,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3103,
									"end": 3168,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3125,
									"end": 3167,
									"name": "PUSH",
									"source": 0,
									"value": "DEAD"
								},
								{
									"begin": 3103,
									"end": 3168,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3103,
									"end": 3168,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3103,
									"end": 3168,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3103,
									"end": 3168,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3103,
									"end": 3168,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3103,
									"end": 3168,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2860,
									"end": 2865,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3199,
									"end": 3221,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3221,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3221,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3221,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3199,
									"end": 3221,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3221,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3221,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3221,
									"name": "PUSH",
									"source": 0,
									"value": "44AD89BA62B98FF34F51403AC22759B55759460C0BB5521EB4B6EE3CFF49CF83"
								},
								{
									"begin": 3199,
									"end": 3231,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1158,
									"end": 6150,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1158,
									"end": 6150,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1158,
									"end": 6150,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1158,
									"end": 6150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1158,
									"end": 6150,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1158,
									"end": 6150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1158,
									"end": 6150,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220627fd2be6fdf50c2f950902765a954562daa58332ddfa84b3dee1463227171da64736f6c63430008140033",
									".code": [
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "AFFB402"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "1210C434"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "15C43AAF"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "2A595512"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "3A7960E0"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "3FE9F9F7"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "621F9C0A"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "97A06724"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "9F0D7EB8"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "A36A7526"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "ADD0A6C6"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "B367BF83"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "BD876702"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "DD2CAD60"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "EB10B741"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "EC1F1F69"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 6150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2181,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2229,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6147,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6016,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6099,
											"end": 6111,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6099,
											"end": 6111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6138,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6113,
											"end": 6138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6016,
											"end": 6147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 739,
											"end": 764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 739,
											"end": 764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 739,
											"end": 764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 795,
											"end": 797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 798,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 780,
											"end": 798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 773,
											"end": 807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 773,
											"end": 807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 773,
											"end": 807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 813,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1675,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1641,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1641,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1641,
											"end": 1675,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1641,
											"end": 1675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1641,
											"end": 1675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1641,
											"end": 1675,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1632,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1592,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1592,
											"end": 1632,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1592,
											"end": 1632,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1632,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1756,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1726,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1726,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1726,
											"end": 1756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1756,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1840,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1840,
											"end": 1862,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1840,
											"end": 1862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1862,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 5930,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5820,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5820,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5820,
											"end": 5930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 5930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5820,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5820,
											"end": 5930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 5930,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5820,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5877,
											"end": 5884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5820,
											"end": 5930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 982,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 952,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 818,
											"end": 1021,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1460,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1522,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2148,
											"end": 2174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2148,
											"end": 2174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5938,
											"end": 6008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5938,
											"end": 6008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1719,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1682,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1682,
											"end": 1719,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1682,
											"end": 1719,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1719,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1869,
											"end": 1893,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1869,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1869,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1869,
											"end": 1893,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 1869,
											"end": 1893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1869,
											"end": 1893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1869,
											"end": 1893,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1833,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1807,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1807,
											"end": 1833,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1807,
											"end": 1833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1833,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3268,
											"end": 5207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3268,
											"end": 5207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1799,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1763,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1763,
											"end": 1799,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1763,
											"end": 1799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1799,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2148,
											"end": 2174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5938,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2706,
											"end": 2711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2725,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2706,
											"end": 2725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1854,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 1855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 1855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1889,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1871,
											"end": 1889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1930,
											"end": 1964,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2000,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1982,
											"end": 2000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2698,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 5996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5994,
											"end": 6000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6000,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5994,
											"end": 6000,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5994,
											"end": 6000,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6000,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6000,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6000,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5994,
											"end": 6000,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5938,
											"end": 6008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2590,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2590,
											"end": 2592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2590,
											"end": 2592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2596,
											"end": 2606,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2590,
											"end": 2606,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2582,
											"end": 2640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2582,
											"end": 2640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2582,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2582,
											"end": 2640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 2232,
											"end": 2250,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2232,
											"end": 2250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2322,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F70000000"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2323,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2582,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2011,
											"end": 2364,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2582,
											"end": 2640,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2582,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3386,
											"end": 3393,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3398,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3379,
											"end": 3399,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3379,
											"end": 3399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3379,
											"end": 3399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3483,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3446,
											"end": 3468,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3424,
											"end": 3443,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3424,
											"end": 3468,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3424,
											"end": 3468,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3424,
											"end": 3468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3483,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3420,
											"end": 3520,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3420,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3420,
											"end": 3520,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3507,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3500,
											"end": 3508,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3420,
											"end": 3520,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3420,
											"end": 3520,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 3536,
											"end": 3549,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3536,
											"end": 3599,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3587,
											"end": 3598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3587,
											"end": 3598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3587,
											"end": 3598,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 3575,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 3558,
											"end": 3571,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3599,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3599,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3599,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3536,
											"end": 3599,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3633,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3532,
											"end": 3633,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3620,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3613,
											"end": 3621,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3532,
											"end": 3633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3662,
											"end": 3669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 3662,
											"end": 3669,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 3649,
											"end": 3658,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3669,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3645,
											"end": 3703,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3690,
											"end": 3691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3683,
											"end": 3691,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3645,
											"end": 3703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 3741,
											"end": 3750,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 3731,
											"end": 3738,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3731,
											"end": 3750,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3750,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3731,
											"end": 3750,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3750,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3731,
											"end": 3750,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3750,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3713,
											"end": 3750,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3775,
											"end": 3796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3775,
											"end": 3796,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3796,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3845,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3765,
											"end": 3845,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3845,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3824,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3824,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3821,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3845,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3765,
											"end": 3845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3761,
											"end": 3882,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3761,
											"end": 3882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3761,
											"end": 3882,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3869,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3870,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3862,
											"end": 3870,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3761,
											"end": 3882,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3761,
											"end": 3882,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4012,
											"end": 4021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4012,
											"end": 4028,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4131,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 5129,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4152,
											"end": 5129,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 4169,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4166,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4180,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4210,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4210,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4159,
											"end": 4210,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4197,
											"end": 4210,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4210,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4159,
											"end": 4210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 5129,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 5129,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4152,
											"end": 5129,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4262,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4231,
											"end": 4245,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4262,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4227,
											"end": 4317,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4283,
											"end": 4301,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4227,
											"end": 4317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4366,
											"end": 4380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4366,
											"end": 4380,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4356,
											"end": 4381,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4356,
											"end": 4381,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4408,
											"end": 4429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4408,
											"end": 4429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4408,
											"end": 4429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4408,
											"end": 4419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 4408,
											"end": 4429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4408,
											"end": 4429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4408,
											"end": 4429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4408,
											"end": 4429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4408,
											"end": 4429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4408,
											"end": 4429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4408,
											"end": 4429,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4408,
											"end": 4429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4408,
											"end": 4429,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4461,
											"end": 4500,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4489,
											"end": 4500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4489,
											"end": 4500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4477,
											"end": 4500,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 4500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 4500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4500,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4500,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4461,
											"end": 4500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4458,
											"end": 4936,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4458,
											"end": 4936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4458,
											"end": 4936,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4578,
											"end": 4589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4578,
											"end": 4589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4578,
											"end": 4589,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4566,
											"end": 4590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 4566,
											"end": 4590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4566,
											"end": 4590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4566,
											"end": 4590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 4552,
											"end": 4565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4552,
											"end": 4590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4566,
											"end": 4590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4552,
											"end": 4590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4552,
											"end": 4590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4552,
											"end": 4590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4538,
											"end": 4547,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4535,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4528,
											"end": 4547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4528,
											"end": 4547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4527,
											"end": 4591,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4527,
											"end": 4591,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4527,
											"end": 4591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4518,
											"end": 4591,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 4624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4614,
											"end": 4624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4610,
											"end": 4921,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4725,
											"end": 4769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4725,
											"end": 4769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3483,
											"end": 3515,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4725,
											"end": 4769,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4732,
											"end": 4742,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4732,
											"end": 4742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4725,
											"end": 4752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3456,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3438,
											"end": 3456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4725,
											"end": 4769,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4769,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4848,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 4835,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4854,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4835,
											"end": 4854,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4835,
											"end": 4854,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4854,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4835,
											"end": 4854,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4835,
											"end": 4854,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4610,
											"end": 4921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5015,
											"end": 5024,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5005,
											"end": 5024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 5012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5005,
											"end": 5024,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 5024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5005,
											"end": 5024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4994,
											"end": 5025,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4994,
											"end": 5025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 5025,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 5025,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5050,
											"end": 5059,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5074,
											"end": 5090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5040,
											"end": 5059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5040,
											"end": 5059,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5074,
											"end": 5088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5074,
											"end": 5090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5074,
											"end": 5090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5074,
											"end": 5090,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5074,
											"end": 5090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5090,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5090,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5090,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5074,
											"end": 5090,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5105,
											"end": 5117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5105,
											"end": 5117,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5105,
											"end": 5117,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 5129,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4152,
											"end": 5129,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 5129,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4152,
											"end": 5129,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5163,
											"end": 5175,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 5141,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5141,
											"end": 5175,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5193,
											"end": 5199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5199,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2651,
											"end": 2652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2651,
											"end": 2652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 5207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5808,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5215,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5339,
											"end": 5345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5322,
											"end": 5335,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 5322,
											"end": 5335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5322,
											"end": 5345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5322,
											"end": 5345,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5322,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5322,
											"end": 5345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5322,
											"end": 5345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5322,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5322,
											"end": 5345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5322,
											"end": 5345,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5322,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5322,
											"end": 5345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5322,
											"end": 5345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5322,
											"end": 5345,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5365,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5383,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5383,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5383,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5354,
											"end": 5383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5403,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5429,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5447,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5439,
											"end": 5455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5455,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5468,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5468,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5439,
											"end": 5468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5439,
											"end": 5468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5468,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5439,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5468,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5511,
											"end": 5522,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5511,
											"end": 5522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5511,
											"end": 5522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5510,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5497,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5497,
											"end": 5523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5497,
											"end": 5523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5523,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5492,
											"end": 5523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5492,
											"end": 5523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5488,
											"end": 5635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5567,
											"end": 5576,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5567,
											"end": 5583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5567,
											"end": 5583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5563,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5552,
											"end": 5563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5552,
											"end": 5563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5538,
											"end": 5564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5551,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5538,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5538,
											"end": 5564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5538,
											"end": 5564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5583,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5583,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5611,
											"end": 5622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5611,
											"end": 5622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5563,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "2AAE2886DF6780C9B9D8FFFA80836B2A0BDC3F69298294D45045D94457F72CA2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5611,
											"end": 5622,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5611,
											"end": 5622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5611,
											"end": 5622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5611,
											"end": 5622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5623,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5635,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5488,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5660,
											"end": 5681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5681,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5651,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5651,
											"end": 5783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5720,
											"end": 5729,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5720,
											"end": 5736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5720,
											"end": 5736,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5696,
											"end": 5717,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5696,
											"end": 5717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5709,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5696,
											"end": 5717,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5696,
											"end": 5717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5696,
											"end": 5717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5717,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5736,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "2AAE2886DF6780C9B9D8FFFA80836B2A0BDC3F69298294D45045D94457F72CA2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5749,
											"end": 5771,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5651,
											"end": 5783,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5651,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5215,
											"end": 5808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1386,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1206,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1306,
											"end": 1315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1316,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1321,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1286,
											"end": 1338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1338,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1286,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1357,
											"end": 1380,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1357,
											"end": 1380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1206,
											"end": 1386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1645,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1391,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1517,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1506,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1523,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1538,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1488,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1582,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1624,
											"end": 1633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1601,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1639,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1601,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2496,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2369,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2440,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2425,
											"end": 2428,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2421,
											"end": 2441,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2458,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2451,
											"end": 2466,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2489,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2482,
											"end": 2483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2490,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2626,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2501,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2597,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2620,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2584,
											"end": 2620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2600,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2600,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2759,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2631,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2707,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2753,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2716,
											"end": 2753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2733,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2891,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2764,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2835,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2820,
											"end": 2823,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2860,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2853,
											"end": 2854,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2846,
											"end": 2861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2885,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 3064,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2896,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3034,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2987,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2987,
											"end": 3058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3038,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3038,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3038,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3286,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3069,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3125,
											"end": 3257,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3174,
											"end": 3177,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3170,
											"end": 3190,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3160,
											"end": 3191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3218,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3211,
											"end": 3212,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3204,
											"end": 3219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3246,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3239,
											"end": 3240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3257,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3125,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3847,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3570,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3692,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3676,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3693,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3658,
											"end": 3710,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3658,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3658,
											"end": 3710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3703,
											"end": 3704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3708,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3658,
											"end": 3710,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3658,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3748,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3791,
											"end": 3796,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3797,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3798,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3799,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3757,
											"end": 3817,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3852,
											"end": 3987,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3852,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3929,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3912,
											"end": 3929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 3909,
											"end": 3952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3932,
											"end": 3950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3979,
											"end": 3980,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3968,
											"end": 3981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 3981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3852,
											"end": 3987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"2AAE2886DF6780C9B9D8FFFA80836B2A0BDC3F69298294D45045D94457F72CA2": "bb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444"
									}
								}
							},
							"sourceList": [
								"contracts/DividendPayingERC20Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"contractInfo()": "15c43aaf",
							"currentLpIndex()": "1210c434",
							"dividendGas()": "bd876702",
							"holderCondition()": "3fe9f9f7",
							"holderRewardCondition()": "eb10b741",
							"lpBonus()": "621f9c0a",
							"lpBonusEd()": "b367bf83",
							"lpHolderIndex(address)": "0affb402",
							"lpHolders(uint256)": "9f0d7eb8",
							"magnifiedDividendCorrections(address)": "97a06724",
							"magnifiedDividendPerShare()": "3a7960e0",
							"op()": "ec1f1f69",
							"owner()": "8da5cb5b",
							"processReward(uint256,address)": "dd2cad60",
							"progressRewardBlock()": "2a595512",
							"progressRewardBlockAdd()": "add0a6c6",
							"setOp(address)": "a36a7526"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentLpIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dividendGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holderCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holderRewardCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpBonusEd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lpHolderIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpHolders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"magnifiedDividendCorrections\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"magnifiedDividendPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"op\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tfmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"processReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"progressRewardBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"progressRewardBlockAdd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"d\",\"type\":\"address\"}],\"name\":\"setOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DividendPayingERC20Token.sol\":\"DividendPayingERC20Token\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/DividendPayingERC20Token.sol\":{\"keccak256\":\"0xdd2e0225566afab73363d8c98f5657bc8a8bed2167f63d2392960594792043b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c93dcefb16cfc11c77f737a5b92fdf468a76a061c93a5ff0ee8df058b2d2215\",\"dweb:/ipfs/QmX8XhDfTJD8J4GeyiZuJy4aWVuT1RpDuhMwtqEF46z5RG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 124,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 126,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "totalDividendsDistributed",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 135,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "magnifiedDividendCorrections",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_int256)"
							},
							{
								"astId": 139,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "withdrawnDividends",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 141,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "magnifiedDividendPerShare",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "progressRewardBlock",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 145,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "progressRewardBlockAdd",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 147,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "holderCondition",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 149,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "holderRewardCondition",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 151,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "dividendGas",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 153,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "lpBonus",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 155,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "lpBonusEd",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 157,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "totalLpSupply",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 161,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "_LpBalances",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "_lastLpTime",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 169,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "_lastEth",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 173,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "_lastToken",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 176,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "lpHolders",
								"offset": 0,
								"slot": "18",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 180,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "lpHolderIndex",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 182,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "currentLpIndex",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							},
							{
								"astId": 196,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "deadAddress",
								"offset": 0,
								"slot": "21",
								"type": "t_address"
							},
							{
								"astId": 198,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "op",
								"offset": 0,
								"slot": "22",
								"type": "t_address"
							},
							{
								"astId": 200,
								"contract": "contracts/DividendPayingERC20Token.sol:DividendPayingERC20Token",
								"label": "owner",
								"offset": 0,
								"slot": "23",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_int256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => int256)",
								"numberOfBytes": "32",
								"value": "t_int256"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DividendPayingERC20Token.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/DividendPayingERC20Token.sol\":{\"keccak256\":\"0xdd2e0225566afab73363d8c98f5657bc8a8bed2167f63d2392960594792043b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c93dcefb16cfc11c77f737a5b92fdf468a76a061c93a5ff0ee8df058b2d2215\",\"dweb:/ipfs/QmX8XhDfTJD8J4GeyiZuJy4aWVuT1RpDuhMwtqEF46z5RG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMathInt": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DividendPayingERC20Token.sol\":997:1154  library SafeMathInt {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DividendPayingERC20Token.sol\":997:1154  library SafeMathInt {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203d2855e06b1464979999250265acaff87474cf41811f00e377bbbe8b24e59f4164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203d2855e06b1464979999250265acaff87474cf41811f00e377bbbe8b24e59f4164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0x28 SSTORE 0xE0 PUSH12 0x1464979999250265ACAFF874 PUSH21 0xCF41811F00E377BBBE8B24E59F4164736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "997:157:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;997:157:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203d2855e06b1464979999250265acaff87474cf41811f00e377bbbe8b24e59f4164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0x28 SSTORE 0xE0 PUSH12 0x1464979999250265ACAFF874 PUSH21 0xCF41811F00E377BBBE8B24E59F4164736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "997:157:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toUint256Safe(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 997,
									"end": 1154,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 997,
									"end": 1154,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d2855e06b1464979999250265acaff87474cf41811f00e377bbbe8b24e59f4164736f6c63430008140033",
									".code": [
										{
											"begin": 997,
											"end": 1154,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1154,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1154,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 997,
											"end": 1154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1154,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/DividendPayingERC20Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DividendPayingERC20Token.sol\":\"SafeMathInt\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/DividendPayingERC20Token.sol\":{\"keccak256\":\"0xdd2e0225566afab73363d8c98f5657bc8a8bed2167f63d2392960594792043b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c93dcefb16cfc11c77f737a5b92fdf468a76a061c93a5ff0ee8df058b2d2215\",\"dweb:/ipfs/QmX8XhDfTJD8J4GeyiZuJy4aWVuT1RpDuhMwtqEF46z5RG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMathUint": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DividendPayingERC20Token.sol\":814:993  library SafeMathUint {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DividendPayingERC20Token.sol\":814:993  library SafeMathUint {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bee4ee61cc188acd5ad36d1fb6fc0f1f8074c7dfd668b1ee641ffa230c65e22f64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bee4ee61cc188acd5ad36d1fb6fc0f1f8074c7dfd668b1ee641ffa230c65e22f64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xE4 0xEE PUSH2 0xCC18 DUP11 0xCD GAS 0xD3 PUSH14 0x1FB6FC0F1F8074C7DFD668B1EE64 0x1F STATICCALL 0x23 0xC PUSH6 0xE22F64736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "814:179:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;814:179:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bee4ee61cc188acd5ad36d1fb6fc0f1f8074c7dfd668b1ee641ffa230c65e22f64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xE4 0xEE PUSH2 0xCC18 DUP11 0xCD GAS 0xD3 PUSH14 0x1FB6FC0F1F8074C7DFD668B1EE64 0x1F STATICCALL 0x23 0xC PUSH6 0xE22F64736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "814:179:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toInt256Safe(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 814,
									"end": 993,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 814,
									"end": 993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 814,
									"end": 993,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 814,
									"end": 993,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bee4ee61cc188acd5ad36d1fb6fc0f1f8074c7dfd668b1ee641ffa230c65e22f64736f6c63430008140033",
									".code": [
										{
											"begin": 814,
											"end": 993,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 814,
											"end": 993,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 814,
											"end": 993,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 814,
											"end": 993,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 814,
											"end": 993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 814,
											"end": 993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 814,
											"end": 993,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/DividendPayingERC20Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DividendPayingERC20Token.sol\":\"SafeMathUint\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/DividendPayingERC20Token.sol\":{\"keccak256\":\"0xdd2e0225566afab73363d8c98f5657bc8a8bed2167f63d2392960594792043b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c93dcefb16cfc11c77f737a5b92fdf468a76a061c93a5ff0ee8df058b2d2215\",\"dweb:/ipfs/QmX8XhDfTJD8J4GeyiZuJy4aWVuT1RpDuhMwtqEF46z5RG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/DividendPayingERC20Token.sol": {
				"ast": {
					"absolutePath": "contracts/DividendPayingERC20Token.sol",
					"exportedSymbols": {
						"DividendPayingERC20Token": [
							573
						],
						"IERC20": [
							68
						],
						"SafeMathInt": [
							112
						],
						"SafeMathUint": [
							92
						]
					},
					"id": 574,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IERC20",
							"nameLocation": "140:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "163:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "174:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "200:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "199:9:0"
									},
									"scope": 68,
									"src": "154:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "224:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "242:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "234:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "233:17:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "274:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "273:9:0"
									},
									"scope": 68,
									"src": "215:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "298:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "315:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "307:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "334:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:35:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "360:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "360:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "359:6:0"
									},
									"scope": 68,
									"src": "289:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "386:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "404:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "396:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "419:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "411:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:32:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "451:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "450:9:0"
									},
									"scope": 68,
									"src": "377:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "475:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "491:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "483:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "508:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "500:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:33:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "534:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "534:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:6:0"
									},
									"scope": 68,
									"src": "466:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "555:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "576:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "568:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "592:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "584:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "611:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "603:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:51:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "637:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "637:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:6:0"
									},
									"scope": 68,
									"src": "546:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 59,
									"name": "Transfer",
									"nameLocation": "657:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "682:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "666:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "704:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "688:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "716:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "708:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:57:0"
									},
									"src": "651:72:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 67,
									"name": "Approval",
									"nameLocation": "735:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "760:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "744:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "783:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "767:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "800:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "792:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:63:0"
									},
									"src": "729:78:0"
								}
							],
							"scope": 574,
							"src": "130:680:0",
							"usedErrors": [],
							"usedEvents": [
								59,
								67
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMathUint",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 92,
							"linearizedBaseContracts": [
								92
							],
							"name": "SafeMathUint",
							"nameLocation": "822:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "906:84:0",
										"statements": [
											{
												"assignments": [
													76
												],
												"declarations": [
													{
														"constant": false,
														"id": 76,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "924:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "917:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 75,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "917:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 81,
												"initialValue": {
													"arguments": [
														{
															"id": 79,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "935:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "928:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 77,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "928:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "928:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "917:20:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 83,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "956:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "961:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 82,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "948:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "948:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "948:15:0"
											},
											{
												"expression": {
													"id": 88,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 76,
													"src": "981:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 74,
												"id": 89,
												"nodeType": "Return",
												"src": "974:8:0"
											}
										]
									},
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256Safe",
									"nameLocation": "851:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "872:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "864:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "863:11:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "898:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 72,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "897:8:0"
									},
									"scope": 92,
									"src": "842:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 574,
							"src": "814:179:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMathInt",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112
							],
							"name": "SafeMathInt",
							"nameLocation": "1005:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "1089:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 100,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "1108:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1113:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1108:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1100:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1100:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1100:15:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1141:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1133:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1133:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1133:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 98,
												"id": 109,
												"nodeType": "Return",
												"src": "1126:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256Safe",
									"nameLocation": "1033:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1054:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1047:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 93,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1047:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:10:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1080:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:9:0"
									},
									"scope": 112,
									"src": "1024:127:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 574,
							"src": "997:157:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DividendPayingERC20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 573,
							"linearizedBaseContracts": [
								573
							],
							"name": "DividendPayingERC20Token",
							"nameLocation": "1167:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 115,
									"libraryName": {
										"id": 113,
										"name": "SafeMathUint",
										"nameLocations": [
											"1205:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 92,
										"src": "1205:12:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1199:31:0",
									"typeName": {
										"id": 114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1222:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 118,
									"libraryName": {
										"id": 116,
										"name": "SafeMathInt",
										"nameLocations": [
											"1242:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "1242:11:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1236:29:0",
									"typeName": {
										"id": 117,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "1258:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1307:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1271:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 121,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 119,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1279:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1271:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 120,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1290:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 124,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1339:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1323:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 123,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1323:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 126,
									"mutability": "mutable",
									"name": "totalDividendsDistributed",
									"nameLocation": "1374:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1358:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 125,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1358:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 131,
									"mutability": "constant",
									"name": "magnitude",
									"nameLocation": "1435:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1410:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1410:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000"
										},
										"id": 130,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1447:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3233",
											"id": 129,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1451:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_23_by_1",
												"typeString": "int_const 23"
											},
											"value": "23"
										},
										"src": "1447:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "97a06724",
									"id": 135,
									"mutability": "mutable",
									"name": "magnifiedDividendCorrections",
									"nameLocation": "1494:28:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1460:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
										"typeString": "mapping(address => int256)"
									},
									"typeName": {
										"id": 134,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 132,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1468:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1460:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
											"typeString": "mapping(address => int256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 133,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "1479:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "withdrawnDividends",
									"nameLocation": "1565:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1529:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 138,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 136,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1537:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1529:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 137,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3a7960e0",
									"id": 141,
									"mutability": "mutable",
									"name": "magnifiedDividendPerShare",
									"nameLocation": "1607:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1592:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1592:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2a595512",
									"id": 143,
									"mutability": "mutable",
									"name": "progressRewardBlock",
									"nameLocation": "1656:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1641:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 142,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1641:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "add0a6c6",
									"id": 145,
									"mutability": "mutable",
									"name": "progressRewardBlockAdd",
									"nameLocation": "1697:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1682:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 144,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1682:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fe9f9f7",
									"id": 147,
									"mutability": "mutable",
									"name": "holderCondition",
									"nameLocation": "1741:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1726:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 146,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1726:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eb10b741",
									"id": 149,
									"mutability": "mutable",
									"name": "holderRewardCondition",
									"nameLocation": "1778:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1763:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 148,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bd876702",
									"id": 151,
									"mutability": "mutable",
									"name": "dividendGas",
									"nameLocation": "1822:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1807:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1807:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "621f9c0a",
									"id": 153,
									"mutability": "mutable",
									"name": "lpBonus",
									"nameLocation": "1855:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1840:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 152,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1840:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b367bf83",
									"id": 155,
									"mutability": "mutable",
									"name": "lpBonusEd",
									"nameLocation": "1884:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1869:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1869:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 157,
									"mutability": "mutable",
									"name": "totalLpSupply",
									"nameLocation": "1910:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1902:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1902:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "_LpBalances",
									"nameLocation": "1967:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1930:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 160,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 158,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1938:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1930:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 159,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1950:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_lastLpTime",
									"nameLocation": "2022:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "1985:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 164,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 162,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1993:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1985:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2005:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_lastEth",
									"nameLocation": "2077:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "2040:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 168,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 166,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2048:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2040:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 167,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2060:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 173,
									"mutability": "mutable",
									"name": "_lastToken",
									"nameLocation": "2129:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "2092:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 172,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2100:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2092:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 171,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2112:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "9f0d7eb8",
									"id": 176,
									"mutability": "mutable",
									"name": "lpHolders",
									"nameLocation": "2165:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "2148:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 174,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2148:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 175,
										"nodeType": "ArrayTypeName",
										"src": "2148:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0affb402",
									"id": 180,
									"mutability": "mutable",
									"name": "lpHolderIndex",
									"nameLocation": "2216:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "2181:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 179,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 177,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2189:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2181:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 178,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2200:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1210c434",
									"id": 182,
									"mutability": "mutable",
									"name": "currentLpIndex",
									"nameLocation": "2251:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "2236:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 181,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2236:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 188,
									"mutability": "constant",
									"name": "c_erc20",
									"nameLocation": "2310:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "2286:84:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$68",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 184,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 183,
											"name": "IERC20",
											"nameLocations": [
												"2286:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 68,
											"src": "2286:6:0"
										},
										"referencedDeclaration": 68,
										"src": "2286:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$68",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307836356537346162453931393062353031356664643534383539336341333438623938314134363336",
												"id": 186,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2327:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x65e74abE9190b5015fdd548593cA348b981A4636"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 185,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 68,
											"src": "2320:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 187,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2320:50:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$68",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 194,
									"mutability": "constant",
									"name": "c_lp",
									"nameLocation": "2401:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "2377:81:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$68",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 190,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 189,
											"name": "IERC20",
											"nameLocations": [
												"2377:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 68,
											"src": "2377:6:0"
										},
										"referencedDeclaration": 68,
										"src": "2377:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$68",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307835386245663233353141346634336630383638303266423335343334466437373634313335393638",
												"id": 192,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2415:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x58bEf2351A4f43f086802fB35434Fd7764135968"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 191,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 68,
											"src": "2408:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 193,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2408:50:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$68",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 196,
									"mutability": "mutable",
									"name": "deadAddress",
									"nameLocation": "2484:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "2467:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 195,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2467:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ec1f1f69",
									"id": 198,
									"mutability": "mutable",
									"name": "op",
									"nameLocation": "2517:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "2502:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 197,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2502:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 200,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "2541:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "2526:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 199,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2526:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2571:89:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 203,
																"name": "op",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2590:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 204,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2596:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2600:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2596:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2590:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f70",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2608:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e40f126b6d294d386b9318667f8073c346170d4b28771bafce6db84dba382835",
																"typeString": "literal_string \"Ownable: caller is not the op\""
															},
															"value": "Ownable: caller is not the op"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e40f126b6d294d386b9318667f8073c346170d4b28771bafce6db84dba382835",
																"typeString": "literal_string \"Ownable: caller is not the op\""
															}
														],
														"id": 202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2582:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2582:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2582:58:0"
											},
											{
												"id": 210,
												"nodeType": "PlaceholderStatement",
												"src": "2651:1:0"
											}
										]
									},
									"id": 212,
									"name": "onlyOp",
									"nameLocation": "2562:6:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2568:2:0"
									},
									"src": "2553:107:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2687:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "2706:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 216,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2715:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2719:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2715:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2706:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2727:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2698:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "2698:64:0"
											},
											{
												"id": 222,
												"nodeType": "PlaceholderStatement",
												"src": "2773:1:0"
											}
										]
									},
									"id": 224,
									"name": "onlyOwner",
									"nameLocation": "2675:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2684:2:0"
									},
									"src": "2666:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "2805:453:0",
										"statements": [
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 227,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2860:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 228,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2868:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2872:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2868:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2860:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "2860:18:0"
											},
											{
												"expression": {
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "progressRewardBlockAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2934:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2959:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "2934:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "2934:28:0"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 236,
														"name": "holderRewardCondition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "2973:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2997:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_10000000000000000_by_1",
																"typeString": "int_const 10000000000000000"
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3001:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3136",
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3007:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																},
																"value": "16"
															},
															"src": "3001:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000000000_by_1",
																"typeString": "int_const 10000000000000000"
															}
														},
														"src": "2997:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														}
													},
													"src": "2973:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "2973:36:0"
											},
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 244,
														"name": "holderCondition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "3021:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_5000000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000000"
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "35303030",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3039:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															},
															"value": "5000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3046:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3052:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "3046:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "3039:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000000"
														}
													},
													"src": "3021:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "3021:33:0"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 252,
														"name": "dividendGas",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "3065:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "353030303030",
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3079:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500000_by_1",
															"typeString": "int_const 500000"
														},
														"value": "500000"
													},
													"src": "3065:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "3065:20:0"
											},
											{
												"expression": {
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 256,
														"name": "deadAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "3103:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3125:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x000000000000000000000000000000000000dEaD"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3117:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 257,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3117:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3117:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3103:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "3103:65:0"
											},
											{
												"expression": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 263,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "3199:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 265,
														"indexExpression": {
															"id": 264,
															"name": "deadAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "3209:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3199:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3224:7:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3199:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "3199:32:0"
											}
										]
									},
									"id": 270,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2801:3:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2805:0:0"
									},
									"scope": 573,
									"src": "2790:468:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "3358:1849:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 282,
															"name": "tfmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "3386:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 283,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "3394:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 281,
														"name": "ariver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "3379:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3379:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "3379:20:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 286,
															"name": "progressRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "3424:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 287,
															"name": "progressRewardBlockAdd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3446:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3424:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 289,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3471:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3477:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "3471:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3424:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 295,
												"nodeType": "IfStatement",
												"src": "3420:100:0",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "3485:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3507:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 280,
															"id": 293,
															"nodeType": "Return",
															"src": "3500:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 296,
															"name": "totalLpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "3536:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3553:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3536:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 299,
															"name": "totalLpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "3558:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"baseExpression": {
																"id": 300,
																"name": "_LpBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "3575:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 302,
															"indexExpression": {
																"id": 301,
																"name": "deadAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "3587:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3575:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3558:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3536:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 308,
												"nodeType": "IfStatement",
												"src": "3532:101:0",
												"trueBody": {
													"id": 307,
													"nodeType": "Block",
													"src": "3600:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3620:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 280,
															"id": 306,
															"nodeType": "Return",
															"src": "3613:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 309,
														"name": "lpBonusEd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "3649:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 310,
														"name": "lpBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "3662:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3649:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 315,
												"nodeType": "IfStatement",
												"src": "3645:58:0",
												"trueBody": {
													"id": 314,
													"nodeType": "Block",
													"src": "3670:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3690:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 280,
															"id": 313,
															"nodeType": "Return",
															"src": "3683:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3721:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "3713:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 316,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3713:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 318,
														"name": "lpBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "3731:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 319,
														"name": "lpBonusEd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "3741:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3731:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3713:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 322,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "3765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 323,
															"name": "holderRewardCondition",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "3775:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3765:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 327,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3808:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_DividendPayingERC20Token_$573",
																			"typeString": "contract DividendPayingERC20Token"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_DividendPayingERC20Token_$573",
																			"typeString": "contract DividendPayingERC20Token"
																		}
																	],
																	"id": 326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3800:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 325,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3800:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3800:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3814:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3800:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 330,
															"name": "holderRewardCondition",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "3824:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3800:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3765:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "IfStatement",
												"src": "3761:121:0",
												"trueBody": {
													"id": 335,
													"nodeType": "Block",
													"src": "3847:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3869:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 280,
															"id": 334,
															"nodeType": "Return",
															"src": "3862:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													338
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "lpHolder",
														"nameLocation": "3914:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "3906:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3906:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 339,
												"nodeType": "VariableDeclarationStatement",
												"src": "3906:16:0"
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "lpBalance",
														"nameLocation": "3941:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "3933:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3933:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 342,
												"nodeType": "VariableDeclarationStatement",
												"src": "3933:17:0"
											},
											{
												"assignments": [
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3969:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "3961:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 343,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3961:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"nodeType": "VariableDeclarationStatement",
												"src": "3961:14:0"
											},
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "lpHolderCount",
														"nameLocation": "3996:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "3988:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 346,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3988:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"expression": {
														"id": 348,
														"name": "lpHolders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "4012:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4022:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4012:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3988:40:0"
											},
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "gasUsed",
														"nameLocation": "4049:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "4041:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 351,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": {
													"hexValue": "30",
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4059:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4041:19:0"
											},
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "iterations",
														"nameLocation": "4079:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "4071:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4071:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"hexValue": "30",
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4092:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4071:22:0"
											},
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "gasLeft",
														"nameLocation": "4112:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "4104:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4104:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 363,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 361,
														"name": "gasleft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967289,
														"src": "4122:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4122:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4104:27:0"
											},
											{
												"body": {
													"id": 454,
													"nodeType": "Block",
													"src": "4212:917:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 371,
																	"name": "currentLpIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "4231:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 372,
																	"name": "lpHolderCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "4249:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4231:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 379,
															"nodeType": "IfStatement",
															"src": "4227:90:0",
															"trueBody": {
																"id": 378,
																"nodeType": "Block",
																"src": "4264:53:0",
																"statements": [
																	{
																		"expression": {
																			"id": 376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 374,
																				"name": "currentLpIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 182,
																				"src": "4283:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4300:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "4283:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 377,
																		"nodeType": "ExpressionStatement",
																		"src": "4283:18:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 380,
																	"name": "lpHolder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "4345:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 381,
																		"name": "lpHolders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 176,
																		"src": "4356:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 383,
																	"indexExpression": {
																		"id": 382,
																		"name": "currentLpIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 182,
																		"src": "4366:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4356:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4345:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 385,
															"nodeType": "ExpressionStatement",
															"src": "4345:36:0"
														},
														{
															"expression": {
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 386,
																	"name": "lpBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "4396:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 387,
																		"name": "_LpBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "4408:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 389,
																	"indexExpression": {
																		"id": 388,
																		"name": "lpHolder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "4420:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4408:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4396:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 391,
															"nodeType": "ExpressionStatement",
															"src": "4396:33:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 392,
																		"name": "lpBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "4461:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4472:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4461:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 395,
																		"name": "lpHolder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "4477:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 396,
																		"name": "deadAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "4489:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "4477:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4461:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 432,
															"nodeType": "IfStatement",
															"src": "4458:478:0",
															"trueBody": {
																"id": 431,
																"nodeType": "Block",
																"src": "4501:435:0",
																"statements": [
																	{
																		"expression": {
																			"id": 411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 399,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 344,
																				"src": "4518:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 402,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 400,
																								"name": "balance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 317,
																								"src": "4528:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 401,
																								"name": "lpBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 341,
																								"src": "4538:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4528:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 403,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4527:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 408,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 404,
																								"name": "totalLpSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 157,
																								"src": "4552:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"baseExpression": {
																									"id": 405,
																									"name": "_LpBalances",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 161,
																									"src": "4566:11:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 407,
																								"indexExpression": {
																									"id": 406,
																									"name": "deadAddress",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 196,
																									"src": "4578:11:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4566:24:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4552:38:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 409,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4551:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4527:64:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4518:73:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 412,
																		"nodeType": "ExpressionStatement",
																		"src": "4518:73:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 413,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 344,
																				"src": "4614:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4623:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "4614:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 430,
																		"nodeType": "IfStatement",
																		"src": "4610:311:0",
																		"trueBody": {
																			"id": 429,
																			"nodeType": "Block",
																			"src": "4626:295:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 421,
																								"name": "lpHolder",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 338,
																								"src": "4753:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 422,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 344,
																								"src": "4762:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 417,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "4732:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 418,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "4736:6:0",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "4732:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 416,
																									"name": "IERC20",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 68,
																									"src": "4725:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC20_$68_$",
																										"typeString": "type(contract IERC20)"
																									}
																								},
																								"id": 419,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4725:18:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$68",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 420,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4744:8:0",
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 22,
																							"src": "4725:27:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																								"typeString": "function (address,uint256) external returns (bool)"
																							}
																						},
																						"id": 423,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4725:44:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 424,
																					"nodeType": "ExpressionStatement",
																					"src": "4725:44:0"
																				},
																				{
																					"expression": {
																						"id": 427,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 425,
																							"name": "lpBonusEd",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 155,
																							"src": "4835:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 426,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 344,
																							"src": "4848:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4835:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 428,
																					"nodeType": "ExpressionStatement",
																					"src": "4835:19:0"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 433,
																	"name": "gasUsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "4984:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 434,
																		"name": "gasUsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "4994:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 435,
																					"name": "gasLeft",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 360,
																					"src": "5005:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 436,
																						"name": "gasleft",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967289,
																						"src": "5015:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5015:9:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5005:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 439,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5004:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4994:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4984:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 442,
															"nodeType": "ExpressionStatement",
															"src": "4984:41:0"
														},
														{
															"expression": {
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 443,
																	"name": "gasLeft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5040:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 444,
																		"name": "gasleft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967289,
																		"src": "5050:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5050:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5040:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "5040:19:0"
														},
														{
															"expression": {
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5074:16:0",
																"subExpression": {
																	"id": 448,
																	"name": "currentLpIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "5074:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "5074:16:0"
														},
														{
															"expression": {
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5105:12:0",
																"subExpression": {
																	"id": 451,
																	"name": "iterations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "5105:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 453,
															"nodeType": "ExpressionStatement",
															"src": "5105:12:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 364,
															"name": "gasUsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "4159:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 365,
															"name": "dividendGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4169:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4159:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 367,
															"name": "iterations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "4184:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 368,
															"name": "lpHolderCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4197:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4184:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4159:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 455,
												"nodeType": "WhileStatement",
												"src": "4152:977:0"
											},
											{
												"expression": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 456,
														"name": "progressRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "5141:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 457,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5163:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5169:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "5163:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5141:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "5141:34:0"
											},
											{
												"expression": {
													"id": 461,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 344,
													"src": "5193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 280,
												"id": 462,
												"nodeType": "Return",
												"src": "5186:13:0"
											}
										]
									},
									"functionSelector": "dd2cad60",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 277,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 276,
												"name": "onlyOp",
												"nameLocations": [
													"3333:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 212,
												"src": "3333:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3333:6:0"
										}
									],
									"name": "processReward",
									"nameLocation": "3277:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "tfmount",
												"nameLocation": "3299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3315:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3307:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3290:30:0"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3349:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3348:9:0"
									},
									"scope": 573,
									"src": "3268:1939:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "5280:528:0",
										"statements": [
											{
												"expression": {
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 471,
														"name": "totalLpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "5322:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 472,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "5339:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5322:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "5322:23:0"
											},
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 475,
															"name": "_LpBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5354:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 477,
														"indexExpression": {
															"id": 476,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5366:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5354:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 478,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "5377:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5354:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "5354:29:0"
											},
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 481,
															"name": "_lastLpTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5392:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 483,
														"indexExpression": {
															"id": 482,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5404:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5392:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 484,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5414:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5420:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5414:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5392:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "5392:37:0"
											},
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 488,
															"name": "_lastEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5439:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 490,
														"indexExpression": {
															"id": 489,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5448:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5439:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 491,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5459:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5463:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "5459:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5439:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "5439:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "30",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5492:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"baseExpression": {
															"id": 496,
															"name": "lpHolderIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5497:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 498,
														"indexExpression": {
															"id": 497,
															"name": "deadAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "5511:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5497:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5492:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 514,
												"nodeType": "IfStatement",
												"src": "5488:147:0",
												"trueBody": {
													"id": 513,
													"nodeType": "Block",
													"src": "5525:110:0",
													"statements": [
														{
															"expression": {
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 500,
																		"name": "lpHolderIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 180,
																		"src": "5538:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 502,
																	"indexExpression": {
																		"id": 501,
																		"name": "deadAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "5552:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5538:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 503,
																		"name": "lpHolders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 176,
																		"src": "5567:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5577:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5567:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5538:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 506,
															"nodeType": "ExpressionStatement",
															"src": "5538:45:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 510,
																		"name": "deadAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "5611:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 507,
																		"name": "lpHolders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 176,
																		"src": "5596:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5606:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "5596:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5596:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 512,
															"nodeType": "ExpressionStatement",
															"src": "5596:27:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "30",
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5655:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"baseExpression": {
															"id": 516,
															"name": "lpHolderIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5660:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 518,
														"indexExpression": {
															"id": 517,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5674:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5660:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5655:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 534,
												"nodeType": "IfStatement",
												"src": "5651:132:0",
												"trueBody": {
													"id": 533,
													"nodeType": "Block",
													"src": "5683:100:0",
													"statements": [
														{
															"expression": {
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 520,
																		"name": "lpHolderIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 180,
																		"src": "5696:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 522,
																	"indexExpression": {
																		"id": 521,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "5710:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5696:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 523,
																		"name": "lpHolders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 176,
																		"src": "5720:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5730:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5720:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5696:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 526,
															"nodeType": "ExpressionStatement",
															"src": "5696:40:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 530,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "5764:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 527,
																		"name": "lpHolders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 176,
																		"src": "5749:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5759:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "5749:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5749:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 532,
															"nodeType": "ExpressionStatement",
															"src": "5749:22:0"
														}
													]
												}
											}
										]
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ariver",
									"nameLocation": "5224:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5239:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "5231:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5254:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "5246:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:31:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5280:0:0"
									},
									"scope": 573,
									"src": "5215:593:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "5886:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 543,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "5904:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 545,
													"indexExpression": {
														"id": 544,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "5914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5904:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 542,
												"id": 546,
												"nodeType": "Return",
												"src": "5897:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5829:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5847:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5839:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5838:17:0"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5877:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5876:9:0"
									},
									"scope": 573,
									"src": "5820:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "5983:25:0",
										"statements": [
											{
												"expression": {
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 555,
														"name": "op",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "5994:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 556,
														"name": "d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5999:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5994:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "5994:6:0"
											}
										]
									},
									"functionSelector": "a36a7526",
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 553,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 552,
												"name": "onlyOwner",
												"nameLocations": [
													"5973:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 224,
												"src": "5973:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5973:9:0"
										}
									],
									"name": "setOp",
									"nameLocation": "5947:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "d",
												"nameLocation": "5961:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "5953:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5952:11:0"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5983:0:0"
									},
									"scope": 573,
									"src": "5938:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "6080:67:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 567,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "6099:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 568,
															"name": "totalDividendsDistributed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "6113:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 569,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6098:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 566,
												"id": 570,
												"nodeType": "Return",
												"src": "6091:48:0"
											}
										]
									},
									"functionSelector": "15c43aaf",
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractInfo",
									"nameLocation": "6025:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6037:2:0"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "6062:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "6071:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6061:18:0"
									},
									"scope": 573,
									"src": "6016:131:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 574,
							"src": "1158:4992:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:6047:0"
				},
				"id": 0
			}
		}
	}
}